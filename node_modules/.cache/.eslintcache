[{"D:\\FrontEnd\\03-tetris\\src\\index.js":"1","D:\\FrontEnd\\03-tetris\\src\\App.js":"2","D:\\FrontEnd\\03-tetris\\src\\reportWebVitals.js":"3","D:\\FrontEnd\\03-tetris\\src\\components\\Main\\Main.js":"4","D:\\FrontEnd\\03-tetris\\src\\components\\PlayArea\\PlayArea.js":"5","D:\\FrontEnd\\03-tetris\\src\\components\\Controls\\Controls.js":"6","D:\\FrontEnd\\03-tetris\\src\\components\\Stat\\Stat.js":"7","D:\\FrontEnd\\03-tetris\\src\\constants\\blockExamples.js":"8","D:\\FrontEnd\\03-tetris\\src\\components\\GameProcess\\GameProcess.js":"9","D:\\FrontEnd\\03-tetris\\src\\constants\\emptyField.js":"10","D:\\FrontEnd\\03-tetris\\src\\checks\\freePlaceToMove.js":"11","D:\\FrontEnd\\03-tetris\\src\\constants\\scoreTable.js":"12","D:\\FrontEnd\\03-tetris\\src\\checks\\youLose.js":"13","D:\\FrontEnd\\03-tetris\\src\\components\\Queue\\Queue.js":"14","D:\\FrontEnd\\03-tetris\\src\\components\\gameProcess\\GameProcess.js":"15","D:\\FrontEnd\\03-tetris\\src\\components\\gameProcess\\gameProcess.js":"16","D:\\FrontEnd\\03-tetris\\src\\constants\\colors.js":"17","D:\\FrontEnd\\03-tetris\\src\\redux\\rootReducer.js":"18","D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\playAreaReducer.js":"19","D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\brickReducer.js":"20","D:\\FrontEnd\\03-tetris\\src\\redux\\types.js":"21","D:\\FrontEnd\\03-tetris\\src\\utilits\\randomBrick.js":"22","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\addNewBrick.js":"23","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\moveDown.js":"24","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\removeBrick.js":"25","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\mountBrick.js":"26","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\moveLeft.js":"27","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\moveRight.js":"28","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\rotate.js":"29","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\removeFullRows.js":"30","D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\nextBrickReducer.js":"31","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\generateNextBrick.js":"32","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\addNewBrickFromNext.js":"33","D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\scoreReducer.js":"34","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\updateScore.js":"35"},{"size":452,"mtime":1617185864474,"results":"36","hashOfConfig":"37"},{"size":336,"mtime":1616493659836,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1616493659853,"results":"39","hashOfConfig":"37"},{"size":2359,"mtime":1617258972232,"results":"40","hashOfConfig":"37"},{"size":2422,"mtime":1617179643611,"results":"41","hashOfConfig":"37"},{"size":565,"mtime":1617177613710,"results":"42","hashOfConfig":"37"},{"size":613,"mtime":1617259391308,"results":"43","hashOfConfig":"37"},{"size":359,"mtime":1617177613845,"results":"44","hashOfConfig":"37"},{"size":2078,"mtime":1617261914570,"results":"45","hashOfConfig":"37"},{"size":1121,"mtime":1616493659850,"results":"46","hashOfConfig":"37"},{"size":1311,"mtime":1617214874204,"results":"47","hashOfConfig":"37"},{"size":66,"mtime":1616493659850,"results":"48","hashOfConfig":"37"},{"size":211,"mtime":1616493659839,"results":"49","hashOfConfig":"37"},{"size":1411,"mtime":1617218160754,"results":"50","hashOfConfig":"37"},{"size":820,"mtime":1614239225760,"results":"51","hashOfConfig":"37"},{"size":832,"mtime":1616492054279,"results":"52","hashOfConfig":"53"},{"size":305,"mtime":1617177613858,"results":"54","hashOfConfig":"37"},{"size":475,"mtime":1617259451368,"results":"55","hashOfConfig":"37"},{"size":400,"mtime":1617215476078,"results":"56","hashOfConfig":"37"},{"size":824,"mtime":1617218374801,"results":"57","hashOfConfig":"37"},{"size":585,"mtime":1617259189417,"results":"58","hashOfConfig":"37"},{"size":1163,"mtime":1617181084271,"results":"59","hashOfConfig":"37"},{"size":219,"mtime":1617186048081,"results":"60","hashOfConfig":"37"},{"size":350,"mtime":1617214745729,"results":"61","hashOfConfig":"37"},{"size":131,"mtime":1617187131473,"results":"62","hashOfConfig":"37"},{"size":1569,"mtime":1617187595278,"results":"63","hashOfConfig":"37"},{"size":576,"mtime":1617211836360,"results":"64","hashOfConfig":"37"},{"size":579,"mtime":1617211842068,"results":"65","hashOfConfig":"37"},{"size":1025,"mtime":1617209728530,"results":"66","hashOfConfig":"37"},{"size":381,"mtime":1617261960439,"results":"67","hashOfConfig":"37"},{"size":404,"mtime":1617217205135,"results":"68","hashOfConfig":"37"},{"size":237,"mtime":1617216825808,"results":"69","hashOfConfig":"37"},{"size":198,"mtime":1617218581572,"results":"70","hashOfConfig":"37"},{"size":339,"mtime":1617259277793,"results":"71","hashOfConfig":"37"},{"size":513,"mtime":1617260148355,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"10075zr",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"1idtqzm",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FrontEnd\\03-tetris\\src\\index.js",[],["156","157"],"D:\\FrontEnd\\03-tetris\\src\\App.js",["158"],"import React from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './components/Main/Main'\r\n\r\nfunction App() {\r\n\r\n  if (!localStorage.getItem('record')) {\r\n    localStorage.setItem('record', 0)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Main/>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\FrontEnd\\03-tetris\\src\\reportWebVitals.js",[],["159","160"],"D:\\FrontEnd\\03-tetris\\src\\components\\Main\\Main.js",["161","162","163","164","165"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport Queue from '../Queue/Queue'\r\nimport gameProcess from '../GameProcess/GameProcess'\r\nimport freePlaceToMove from '../../checks/freePlaceToMove';\r\nimport { moveDown } from '../../redux/actions/moveDown';\r\nimport { moveLeft } from '../../redux/actions/moveLeft';\r\nimport { moveRight } from '../../redux/actions/moveRight';\r\nimport { rotate } from '../../redux/actions/rotate';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction Main() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ intervalID, setMoveInterval ] = useState()\r\n    const [ gameStatus, setGameStatus ] = useState('stopped')\r\n\r\n    function nextStep() {\r\n        gameProcess()\r\n    }\r\n\r\n    function startGame() {\r\n        window.addEventListener('keydown', keyActions)\r\n        setMoveInterval(\r\n            setInterval(nextStep, 100000)\r\n            )\r\n        }\r\n        \r\n    function stopGame() {\r\n        window.removeEventListener('keydown', keyActions)\r\n        clearInterval(intervalID)\r\n    }\r\n\r\n    const keyActions = useCallback((event) => { //хук useCallBack\r\n        if (event.code === 'Numpad5' || event.code === 'ArrowDown' || event.code === 'KeyS') {\r\n            event.preventDefault()\r\n            gameProcess()\r\n        } else if (event.code === 'Numpad4' || event.code === 'ArrowLeft' || event.code === 'KeyA') {\r\n            event.preventDefault()\r\n            dispatch(moveLeft())\r\n        } else if (event.code === 'Numpad6' || event.code === 'ArrowRight' || event.code === 'KeyD') {\r\n            event.preventDefault()\r\n            dispatch(moveRight())\r\n        }  else if (event.code === 'Numpad8' || event.code === 'ArrowUp' || event.code === 'KeyW') {\r\n            event.preventDefault()\r\n            dispatch(rotate())\r\n        }        \r\n    }, [])\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <PlayArea />\r\n            <div className=\"Main__controls-panel\">\r\n                <Stat />       \r\n                <Controls startGame={startGame} stopGame={stopGame} status={gameStatus}/>\r\n                <Queue />\r\n            </div>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;","D:\\FrontEnd\\03-tetris\\src\\components\\PlayArea\\PlayArea.js",["166"],"import React, { useState } from 'react';\r\nimport './PlayArea.sass'\r\nimport colors from '../../constants/colors'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction PlayArea(props) {\r\n\r\n    const playArea = useSelector(state => {return state.playArea})\r\n    const currentBrick = useSelector(state => {return state.brick})\r\n    const brick = currentBrick.brick\r\n    const baseLine = currentBrick.baseLine\r\n    const baseColumn = currentBrick.baseColumn\r\n    const brickSideLength = brick.length\r\n\r\n    function compileDataToArr() { //сложнючая функция, которая устанавливает фигуру на поле и преобразует все это в единый массив\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i <= baseLine - brickSideLength || i > baseLine) { //если в строке нет движущейся фигуры\r\n                dataArray = dataArray.concat(playArea[i]) //то оставляем поле как есть\r\n            } else {\r\n                for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                    if ( a < baseColumn || a >= baseColumn + brickSideLength ) { //если фигуры нет в колонках\r\n                        dataArray = dataArray.concat(playArea[i][a])  // тоже оставляем как есть\r\n                    } else {\r\n                        dataArray = dataArray.concat(brick[i - baseLine + brickSideLength - 1][a - baseColumn] + playArea[i][a]) //тут данные поля заменяются данными движ фигруы\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 40; i < 240; i++) {\r\n            if (data[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className={`PlayArea__cell_${colors[data[i]]}`} key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;","D:\\FrontEnd\\03-tetris\\src\\components\\Controls\\Controls.js",["167","168","169","170"],"import React, { useState, useEffect } from 'react';\r\nimport './Controls.sass'\r\nimport start from '../../images/start.svg'\r\nimport pause from '../../images/pause.svg'\r\n\r\nfunction Controls(props) {\r\n\r\n    return(\r\n        <div className='Controls'>\r\n            <button className='button' onClick={props.startGame}>\r\n                <img src={start}></img>\r\n            </button>\r\n            <button className='button' onClick={props.stopGame}>\r\n                <img src={pause}></img>\r\n            </button>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Controls;","D:\\FrontEnd\\03-tetris\\src\\components\\Stat\\Stat.js",["171","172"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Stat.sass'\r\n\r\nfunction Stat() {\r\n\r\n    const currentScore = useSelector(state => {return state.score.score})\r\n    const currentRecord = useSelector(state => {return state.score.record})\r\n\r\n    return(\r\n        <div className='Stat'>\r\n            <p className='Stat__title'>SCORE:</p>\r\n            <p className='Stat__score'>{currentScore}</p>\r\n            <p className='Stat__title'>BEST:</p>\r\n            <p className='Stat__score'>{currentRecord}</p>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Stat;","D:\\FrontEnd\\03-tetris\\src\\constants\\blockExamples.js",[],"D:\\FrontEnd\\03-tetris\\src\\components\\GameProcess\\GameProcess.js",["173","174","175","176","177"],"import React, { useState, useEffect } from 'react';\r\nimport youLose from '../../checks/youLose';\r\n// import addNewBrick from '../../gameEvents/addNewBrick'\r\nimport { useStore } from 'react-redux';\r\nimport { store } from '../../index'\r\nimport { addNewBrick } from '../../redux/actions/addNewBrick'\r\nimport { addNewBrickFromNext } from '../../redux/actions/addNewBrickFromNext'\r\nimport { removeBrick } from '../../redux/actions/removeBrick'\r\nimport { moveDown } from '../../redux/actions/moveDown'\r\nimport { mountBrick } from '../../redux/actions/mountBrick';\r\nimport freePlaceToMove from '../../checks/freePlaceToMove';\r\nimport removeFullRows from '../../redux/actions/removeFullRows';\r\nimport { generateNextBrick } from '../../redux/actions/generateNextBrick';\r\nimport { updateScore } from '../../redux/actions/updateScore';\r\n\r\nexport default function gameProcess() {\r\n    const playArea = store.getState().playArea\r\n    const brick = store.getState().brick\r\n    const nextBrick = store.getState().nextBrick\r\n    const score = store.getState().score.score\r\n    const record = store.getState().score.record\r\n    // console.log(brick)\r\n    // console.log(nextBrick)\r\n    // console.log(playArea)\r\n    const fullRowsQuantity = playArea.filter(elem => elem.every((el) => { return el > 10 })).length\r\n    if (fullRowsQuantity > 0) {\r\n        store.dispatch(removeFullRows(playArea, fullRowsQuantity))\r\n        store.dispatch(updateScore(fullRowsQuantity, score, record))\r\n    } else if (brick.brick.length === 0) {\r\n        if (nextBrick.brick.length === 0) {\r\n            store.dispatch(addNewBrick())\r\n            store.dispatch(generateNextBrick())\r\n        } else {\r\n            store.dispatch(addNewBrickFromNext(nextBrick))\r\n            store.dispatch(generateNextBrick())\r\n        }\r\n    } else {\r\n        if (freePlaceToMove('down', playArea, brick.brick, brick.baseLine + 1, brick.baseColumn)) {\r\n            store.dispatch(moveDown())\r\n        } else {\r\n            store.dispatch(mountBrick(playArea, brick))\r\n            store.dispatch(removeBrick())\r\n        }\r\n    }\r\n}","D:\\FrontEnd\\03-tetris\\src\\constants\\emptyField.js",[],["178","179"],"D:\\FrontEnd\\03-tetris\\src\\checks\\freePlaceToMove.js",["180"],"import { store } from '../index'\r\n\r\nexport default function freePlaceToMove( direction, playArea, brick, baseLine, baseColumn ) {\r\n\r\n    const brickSize = brick.length\r\n\r\n    if (direction === 'down' && baseLine >= 24) { return false }\r\n\r\n    if ( direction === 'left' ) {\r\n        if (baseColumn < 0) {\r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = 0; a < baseColumn * -1; a++) {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i][a])) {\r\n                        return false \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( direction === 'right' ) {\r\n        if (baseColumn + brickSize > 10) { \r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = brickSize - 1; a > 9 - baseColumn; a--) {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i][a])) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < brickSize; i++ ) {\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            if ([1,2,3,4,5,6,7].includes(brick[i][a]) && [11,12,13,14,15,16,17].includes(playArea[i + baseLine - brickSize + 1][a + baseColumn])) {  \r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    return true\r\n}","D:\\FrontEnd\\03-tetris\\src\\constants\\scoreTable.js",[],"D:\\FrontEnd\\03-tetris\\src\\checks\\youLose.js",[],"D:\\FrontEnd\\03-tetris\\src\\components\\Queue\\Queue.js",["181","182"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport colors from '../../constants/colors'\r\nimport './Queue.sass'\r\n\r\nfunction Queue() {\r\n\r\n    const nextBrick = useSelector(state => {return state.nextBrick.brick})\r\n   \r\n    function compileDataToArr() { \r\n        let dataArray = []\r\n        for ( let i = 0; i < 4; i++) {\r\n            for (let a = 0; a < 4; a++) {\r\n                if (!nextBrick[i] || !nextBrick[i][a]) {\r\n                    dataArray.push(0)\r\n                } else {\r\n                    dataArray.push(nextBrick[i][a])\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 0; i < 16; i++) {\r\n            if (data[i] === 0 || data[i] === undefined) {\r\n                cells.push(\r\n                    <div className='Queue__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className={`Queue__cell_${colors[data[i]]}`} key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className='Queue'>\r\n            <p className='Queue__title'>NEXT:</p>\r\n            <div className='Queue__item'>\r\n                {renderCells()}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Queue;","D:\\FrontEnd\\03-tetris\\src\\components\\gameProcess\\GameProcess.js",["183"],"D:\\FrontEnd\\03-tetris\\src\\components\\gameProcess\\gameProcess.js",["184","185","186"],"import React, { useState, useEffect } from 'react';\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport youLose from '../../checks/youLose';\r\nimport fullRows from '../../checks/fullRows'\r\nimport addNewBrick from '../../gameEvents/addNewBrick'\r\nimport removeFullRows from '../../gameEvents/removeFullRows';\r\n\r\nlet moveDown = new MoveDown()\r\n\r\nexport default function gameProcess(current, stopGame, intervalID) {\r\n    if (youLose(current.playField)) {\r\n        console.log('youlose')\r\n        stopGame()\r\n        return current\r\n        // window.removeEventListener('keydown', keyActions)\r\n    }\r\n    if (fullRows(current.playField)) {\r\n        return removeFullRows(current)\r\n    } else if (current.movingBrick.length === 0) {\r\n        return addNewBrick(current)\r\n    } else {\r\n        return moveDown.move(current)\r\n    }\r\n}","D:\\FrontEnd\\03-tetris\\src\\constants\\colors.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\rootReducer.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\playAreaReducer.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\brickReducer.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\types.js",[],"D:\\FrontEnd\\03-tetris\\src\\utilits\\randomBrick.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\addNewBrick.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\moveDown.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\removeBrick.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\mountBrick.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\moveLeft.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\moveRight.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\rotate.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\removeFullRows.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\nextBrickReducer.js",["187"],"import randomBrick from \"../../utilits/randomBrick\"\r\nimport { GENERATE_NEXT_BRICK } from \"../types\"\r\n\r\nconst initialBrick = {\r\n    brick: [],\r\n    baseLine: 0,\r\n    baseColumn: 0,\r\n}\r\n\r\nexport const nextBrickReducer = (state = initialBrick, action) => {\r\n    switch(action.type) {\r\n        case GENERATE_NEXT_BRICK:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\generateNextBrick.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\addNewBrickFromNext.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\reducers\\scoreReducer.js",[],"D:\\FrontEnd\\03-tetris\\src\\redux\\actions\\updateScore.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":12},{"ruleId":"188","replacedBy":"196"},{"ruleId":"190","replacedBy":"197"},{"ruleId":"192","severity":1,"message":"198","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"199","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":23},{"ruleId":"192","severity":1,"message":"200","line":10,"column":10,"nodeType":"194","messageId":"195","endLine":10,"endColumn":18},{"ruleId":"192","severity":1,"message":"201","line":21,"column":25,"nodeType":"194","messageId":"195","endLine":21,"endColumn":38},{"ruleId":"202","severity":1,"message":"203","line":53,"column":8,"nodeType":"204","endLine":53,"endColumn":10,"suggestions":"205"},{"ruleId":"192","severity":1,"message":"206","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"206","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":11,"column":17,"nodeType":"209","endLine":11,"endColumn":34},{"ruleId":"207","severity":1,"message":"208","line":14,"column":17,"nodeType":"209","endLine":14,"endColumn":34},{"ruleId":"192","severity":1,"message":"206","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"210","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"206","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"211","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":15},{"ruleId":"192","severity":1,"message":"212","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":18},{"ruleId":"188","replacedBy":"213"},{"ruleId":"190","replacedBy":"214"},{"ruleId":"192","severity":1,"message":"215","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":15},{"ruleId":"192","severity":1,"message":"206","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":null,"fatal":true,"severity":2,"message":"216","line":12,"column":32},{"ruleId":"192","severity":1,"message":"210","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"192","severity":1,"message":"206","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"198","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"217","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":19},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["218"],["219"],"'useEffect' is defined but never used.","'freePlaceToMove' is defined but never used.","'moveDown' is defined but never used.","'setGameStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'youLose' is defined but never used.","'useStore' is defined but never used.",["218"],["219"],"'store' is defined but never used.","Parsing error: Missing semicolon\n\n  10 | export default function GameProcess() {\n  11 |\n> 12 |     nextStep(current, stopGame) {\n     |                                ^\n  13 |         if (youLose(current.playField)) {\n  14 |             console.log('youlose')\n  15 |             stopGame()","'randomBrick' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},"Update the dependencies array to be: [dispatch]",{"range":"223","text":"224"},[2001,2003],"[dispatch]"]