{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport freePlaceToMove from '../checks/freePlaceToMove';\nimport DataTransform from './DataTransform';\nexport default class MoveLeft extends React.Component {\n  doNotMove(current) {\n    return current;\n  }\n\n  move(current) {\n    const playField = current.playField;\n    const movingBrick = current.movingBrick;\n    const baseLine = current.baseLine;\n    const baseColumn = current.baseColumn - 1;\n    const brickSize = current.movingBrick.length;\n\n    if (baseColumn < 0) {\n      for (let i = 0; i < brickSize; i++) {\n        for (let a = 0; a < baseColumn * -1; a++) {\n          if (movingBrick[i][a] === 1) {\n            return this.doNotMove(current);\n          }\n        }\n      }\n    }\n\n    if (freePlaceToMove(playField, movingBrick, baseLine, baseColumn, brickSize) === false) {\n      return this.doNotMove(current);\n    }\n\n    return {\n      playField: playField,\n      movingBrick: movingBrick,\n      baseLine: baseLine,\n      baseColumn: baseColumn,\n      score: current.score,\n      speed: current.speed\n    };\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveLeft.js"],"names":["React","useState","useEffect","freePlaceToMove","DataTransform","MoveLeft","Component","doNotMove","current","move","playField","movingBrick","baseLine","baseColumn","brickSize","length","i","a","score","speed"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AACf,WAAOA,OAAP;AACH;;AAEDC,EAAAA,IAAI,CAACD,OAAD,EAAU;AAEV,UAAME,SAAS,GAAGF,OAAO,CAACE,SAA1B;AACA,UAAMC,WAAW,GAAGH,OAAO,CAACG,WAA5B;AACA,UAAMC,QAAQ,GAAGJ,OAAO,CAACI,QAAzB;AACA,UAAMC,UAAU,GAAGL,OAAO,CAACK,UAAR,GAAqB,CAAxC;AACA,UAAMC,SAAS,GAAGN,OAAO,CAACG,WAAR,CAAoBI,MAAtC;;AAEA,QAAIF,UAAU,GAAG,CAAjB,EAAoB;AAChB,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAApB,EAA+BE,CAAC,EAAhC,EAAoC;AAChC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,GAAG,CAAC,CAAlC,EAAqCI,CAAC,EAAtC,EAA0C;AACtC,cAAGN,WAAW,CAACK,CAAD,CAAX,CAAeC,CAAf,MAAsB,CAAzB,EAA4B;AACxB,mBAAO,KAAKV,SAAL,CAAeC,OAAf,CAAP;AACH;AACJ;AACJ;AACJ;;AACD,QAAIL,eAAe,CAAEO,SAAF,EAAaC,WAAb,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,CAAf,KAA+E,KAAnF,EAA0F;AACtF,aAAO,KAAKP,SAAL,CAAeC,OAAf,CAAP;AACH;;AAED,WAAO;AACHE,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,WAAW,EAAEA,WAFV;AAGHC,MAAAA,QAAQ,EAAEA,QAHP;AAIHC,MAAAA,UAAU,EAAEA,UAJT;AAKHK,MAAAA,KAAK,EAAEV,OAAO,CAACU,KALZ;AAMHC,MAAAA,KAAK,EAAEX,OAAO,CAACW;AANZ,KAAP;AAQH;;AAnCiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport freePlaceToMove from '../checks/freePlaceToMove';\r\nimport DataTransform from './DataTransform'\r\n\r\nexport default class MoveLeft extends React.Component {\r\n\r\n    doNotMove(current) {\r\n        return current\r\n    }\r\n\r\n    move(current) {\r\n\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn - 1\r\n        const brickSize = current.movingBrick.length\r\n\r\n        if (baseColumn < 0) {\r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = 0; a < baseColumn * -1; a++) {\r\n                    if(movingBrick[i][a] === 1) {\r\n                        return this.doNotMove(current) \r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (freePlaceToMove( playField, movingBrick, baseLine, baseColumn, brickSize ) === false) {\r\n            return this.doNotMove(current)\r\n        }\r\n\r\n        return {\r\n            playField: playField,\r\n            movingBrick: movingBrick,\r\n            baseLine: baseLine,\r\n            baseColumn: baseColumn,\r\n            score: current.score,\r\n            speed: current.speed\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}