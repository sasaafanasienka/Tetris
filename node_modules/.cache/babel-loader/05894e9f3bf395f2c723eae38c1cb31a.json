{"ast":null,"code":"import blockExamples from '../constants/blockExamples';\nimport testArea from '../constants/testArea';\n\nfunction random() {\n  const blocksQuantity = 18;\n  let rand = Math.random() * (blocksQuantity + 1);\n  return Math.floor(rand);\n}\n\nexport default function addRandomBlock(currentArea) {\n  const newBlock = blockExamples[random()];\n  const newBlockWidth = newBlock[0].length;\n  const newBlockHeight = newBlock.length;\n  const renderingStartColumn = Math.floor((10 - newBlockWidth) / 2);\n\n  for (let i = 0; i < newBlockHeight; i++) {\n    for (let a = renderingStartColumn; a < renderingStartColumn + newBlockWidth; a++) {\n      currentArea[i][a] = newBlock[i][a - renderingStartColumn];\n    }\n  }\n\n  return currentArea;\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/gameEvents/addRandomBlock.js"],"names":["blockExamples","testArea","random","blocksQuantity","rand","Math","floor","addRandomBlock","currentArea","newBlock","newBlockWidth","length","newBlockHeight","renderingStartColumn","i","a"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAMC,cAAc,GAAG,EAAvB;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACH,MAAL,MAAiBC,cAAc,GAAG,CAAlC,CAAX;AACA,SAAOE,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACH;;AAED,eAAe,SAASG,cAAT,CAAwBC,WAAxB,EAAqC;AAChD,QAAMC,QAAQ,GAAGT,aAAa,CAACE,MAAM,EAAP,CAA9B;AACA,QAAMQ,aAAa,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAlC;AACA,QAAMC,cAAc,GAAGH,QAAQ,CAACE,MAAhC;AACA,QAAME,oBAAoB,GAAGR,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKI,aAAN,IAAuB,CAAlC,CAA7B;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAApB,EAAoCE,CAAC,EAArC,EAAyC;AACrC,SAAK,IAAIC,CAAC,GAAGF,oBAAb,EAAmCE,CAAC,GAAGF,oBAAoB,GAAGH,aAA9D,EAA6EK,CAAC,EAA9E,EAAkF;AAC9EP,MAAAA,WAAW,CAACM,CAAD,CAAX,CAAeC,CAAf,IAAoBN,QAAQ,CAACK,CAAD,CAAR,CAAYC,CAAC,GAAGF,oBAAhB,CAApB;AACH;AACJ;;AACD,SAAOL,WAAP;AACH","sourcesContent":["import blockExamples from '../constants/blockExamples'\r\nimport testArea from '../constants/testArea'\r\n\r\nfunction random() {\r\n    const blocksQuantity = 18\r\n    let rand = Math.random() * (blocksQuantity + 1);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport default function addRandomBlock(currentArea) {\r\n    const newBlock = blockExamples[random()]\r\n    const newBlockWidth = newBlock[0].length\r\n    const newBlockHeight = newBlock.length\r\n    const renderingStartColumn = Math.floor((10 - newBlockWidth) / 2)\r\n    for (let i = 0; i < newBlockHeight; i++) {\r\n        for (let a = renderingStartColumn; a < renderingStartColumn + newBlockWidth; a++) {\r\n            currentArea[i][a] = newBlock[i][a - renderingStartColumn]\r\n        }\r\n    }\r\n    return currentArea\r\n}"]},"metadata":{},"sourceType":"module"}