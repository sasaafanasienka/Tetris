{"ast":null,"code":"import React, { useState, useEffect } from 'react'; // import addNewBlock from '../gameEvents/addNewBlock';\n\nimport addRandomBlock from '../../gameEvents/addRandomBlock';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport fullRows from '../../checks/fullRows';\nimport removeFullRows from '../../gameEvents/removeFullRows';\nlet moveDown = new MoveDown();\nexport default class GameProcess extends React.Component {\n  nextStep(current) {\n    console.log(fullRows(current));\n\n    if (fullRows(current)) {\n      console.log('try to remove full rows');\n    } // if (!current.includes(1)) {\n    //     return addRandomBlock(current)\n    // } else {\n    //     return moveDown.move(current)\n    // }\n\n\n    return current;\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/GameProcess/GameProcess.js"],"names":["React","useState","useEffect","addRandomBlock","MoveDown","fullRows","removeFullRows","moveDown","GameProcess","Component","nextStep","current","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,IAAIC,QAAQ,GAAG,IAAIH,QAAJ,EAAf;AAGA,eAAe,MAAMI,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AAErDC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACM,OAAD,CAApB;;AACA,QAAIN,QAAQ,CAACM,OAAD,CAAZ,EAAuB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACJ,KAJc,CAKd;AACA;AACA;AACA;AACA;;;AACA,WAAOF,OAAP;AACH;;AAboD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import addNewBlock from '../gameEvents/addNewBlock';\r\nimport addRandomBlock from '../../gameEvents/addRandomBlock';\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport fullRows from '../../checks/fullRows'\r\nimport removeFullRows from '../../gameEvents/removeFullRows';\r\n\r\nlet moveDown = new MoveDown()\r\n\r\n\r\nexport default class GameProcess extends React.Component {\r\n\r\n    nextStep(current) {\r\n        console.log(fullRows(current))\r\n        if (fullRows(current)) {\r\n            console.log('try to remove full rows')\r\n       }\r\n        // if (!current.includes(1)) {\r\n        //     return addRandomBlock(current)\r\n        // } else {\r\n        //     return moveDown.move(current)\r\n        // }\r\n        return(current)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}