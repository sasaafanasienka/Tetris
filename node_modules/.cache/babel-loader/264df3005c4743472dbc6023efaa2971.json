{"ast":null,"code":"import scoreTable from '../constants/scoreTable';\nimport randomBlock from '../utilits/randomBlock';\nexport default function addNewBrick(current) {\n  if (current.nextBrick.length === 0) {\n    let movingBrick = randomBlock();\n    let nextBrick = randomBlock();\n    return {\n      playField: current.playField,\n      movingBrick: movingBrick.brick,\n      baseLine: 3,\n      baseColumn: movingBrick.baseColumn,\n      nextBrick: nextBrick.brick,\n      nextBaseColumn: current.nextBaseColumn,\n      score: current.score,\n      speed: current.speed\n    };\n  }\n\n  const newBrick = randomBlock();\n  let nextBrick = current.nextBrick;\n  let newNextBrick;\n\n  if (nextBrick.length === 0) {\n    newNextBrick = randomBlock();\n  }\n\n  return {\n    playField: current.playField,\n    movingBrick: newBrick.brick,\n    baseLine: current.baseLine,\n    baseColumn: newBrick.baseColumn,\n    nextBrick: current.nextBrick,\n    nextBaseColumn: current.nextBaseColumn,\n    score: current.score,\n    speed: current.speed\n  };\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/gameEvents/addNewBrick.js"],"names":["scoreTable","randomBlock","addNewBrick","current","nextBrick","length","movingBrick","playField","brick","baseLine","baseColumn","nextBaseColumn","score","speed","newBrick","newNextBrick"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAEzC,MAAIA,OAAO,CAACC,SAAR,CAAkBC,MAAlB,KAA6B,CAAjC,EAAmC;AAC/B,QAAIC,WAAW,GAAGL,WAAW,EAA7B;AACA,QAAIG,SAAS,GAAGH,WAAW,EAA3B;AACA,WAAO;AACHM,MAAAA,SAAS,EAAEJ,OAAO,CAACI,SADhB;AAEHD,MAAAA,WAAW,EAAEA,WAAW,CAACE,KAFtB;AAGHC,MAAAA,QAAQ,EAAE,CAHP;AAIHC,MAAAA,UAAU,EAAEJ,WAAW,CAACI,UAJrB;AAKHN,MAAAA,SAAS,EAAEA,SAAS,CAACI,KALlB;AAMHG,MAAAA,cAAc,EAAER,OAAO,CAACQ,cANrB;AAOHC,MAAAA,KAAK,EAAET,OAAO,CAACS,KAPZ;AAQHC,MAAAA,KAAK,EAAEV,OAAO,CAACU;AARZ,KAAP;AAUH;;AAED,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,MAAIG,SAAS,GAAGD,OAAO,CAACC,SAAxB;AACA,MAAIW,YAAJ;;AACA,MAAIX,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxBU,IAAAA,YAAY,GAAGd,WAAW,EAA1B;AACH;;AAED,SAAO;AACHM,IAAAA,SAAS,EAAEJ,OAAO,CAACI,SADhB;AAEHD,IAAAA,WAAW,EAAEQ,QAAQ,CAACN,KAFnB;AAGHC,IAAAA,QAAQ,EAAEN,OAAO,CAACM,QAHf;AAIHC,IAAAA,UAAU,EAAEI,QAAQ,CAACJ,UAJlB;AAKHN,IAAAA,SAAS,EAAED,OAAO,CAACC,SALhB;AAMHO,IAAAA,cAAc,EAAER,OAAO,CAACQ,cANrB;AAOHC,IAAAA,KAAK,EAAET,OAAO,CAACS,KAPZ;AAQHC,IAAAA,KAAK,EAAEV,OAAO,CAACU;AARZ,GAAP;AAUH","sourcesContent":["import scoreTable from '../constants/scoreTable'\r\nimport randomBlock from '../utilits/randomBlock'\r\n\r\nexport default function addNewBrick(current) {\r\n\r\n    if (current.nextBrick.length === 0){\r\n        let movingBrick = randomBlock()\r\n        let nextBrick = randomBlock()\r\n        return {\r\n            playField: current.playField,\r\n            movingBrick: movingBrick.brick,\r\n            baseLine: 3,\r\n            baseColumn: movingBrick.baseColumn,\r\n            nextBrick: nextBrick.brick,\r\n            nextBaseColumn: current.nextBaseColumn,\r\n            score: current.score,\r\n            speed: current.speed,\r\n        }\r\n    }\r\n\r\n    const newBrick = randomBlock()\r\n    \r\n    let nextBrick = current.nextBrick\r\n    let newNextBrick\r\n    if (nextBrick.length === 0) {\r\n        newNextBrick = randomBlock()\r\n    }\r\n\r\n    return {\r\n        playField: current.playField,\r\n        movingBrick: newBrick.brick,\r\n        baseLine: current.baseLine,\r\n        baseColumn: newBrick.baseColumn,\r\n        nextBrick: current.nextBrick,\r\n        nextBaseColumn: current.nextBaseColumn,\r\n        score: current.score,\r\n        speed: current.speed,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}