{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveLeft extends React.Component {\n  move(currentArea) {\n    const newArea = [];\n    let stoppedBlocks = currentArea.map(el => {\n      return el === 2 ? el = 2 : el = 0;\n    });\n    let movingBlocks = currentArea.map(el => {\n      return el === 1 ? el = 1 : el = 0;\n    });\n\n    for (let i = 0; i < 240; i++) {\n      if (movingBlocks[i] === 1) {\n        if (i.toString().slice(-1) !== '0') {\n          movingBlocks[i] = 0;\n          movingBlocks[i - 1] = 1;\n        } else {\n          return currentArea;\n        }\n      }\n    }\n\n    for (let i = 0; i < 240; i++) {\n      const sum = stoppedBlocks[i] + movingBlocks[i];\n\n      if (sum <= 2) {\n        newArea.push(sum);\n      } else {\n        return currentArea;\n      }\n    }\n\n    return newArea;\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveRight.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveLeft","Component","move","currentArea","newArea","stoppedBlocks","map","el","movingBlocks","i","toString","slice","sum","push"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,IAAI,CAACC,WAAD,EAAc;AACd,UAAMC,OAAO,GAAG,EAAhB;AACA,QAAIC,aAAa,GAAGF,WAAW,CAACG,GAAZ,CAAiBC,EAAD,IAAQ;AACxC,aAAOA,EAAE,KAAK,CAAP,GAAWA,EAAE,GAAG,CAAhB,GAAoBA,EAAE,GAAG,CAAhC;AACH,KAFmB,CAApB;AAGA,QAAIC,YAAY,GAAGL,WAAW,CAACG,GAAZ,CAAiBC,EAAD,IAAQ;AACvC,aAAOA,EAAE,KAAK,CAAP,GAAWA,EAAE,GAAG,CAAhB,GAAoBA,EAAE,GAAG,CAAhC;AACH,KAFkB,CAAnB;;AAGA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAID,YAAY,CAACC,CAAD,CAAZ,KAAoB,CAAxB,EAA2B;AACvB,YAAIA,CAAC,CAACC,QAAF,GAAaC,KAAb,CAAmB,CAAC,CAApB,MAA2B,GAA/B,EAAoC;AAChCH,UAAAA,YAAY,CAACC,CAAD,CAAZ,GAAkB,CAAlB;AACAD,UAAAA,YAAY,CAACC,CAAC,GAAG,CAAL,CAAZ,GAAsB,CAAtB;AACH,SAHD,MAGO;AACH,iBAAON,WAAP;AACH;AACJ;AACJ;;AACD,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,YAAMG,GAAG,GAAGP,aAAa,CAACI,CAAD,CAAb,GAAmBD,YAAY,CAACC,CAAD,CAA3C;;AACA,UAAIG,GAAG,IAAI,CAAX,EAAc;AACVR,QAAAA,OAAO,CAACS,IAAR,CAAaD,GAAb;AACH,OAFD,MAEO;AACH,eAAOT,WAAP;AACH;AACJ;;AAED,WAAOC,OAAP;AACH;;AA9BiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveLeft extends React.Component {\r\n\r\n    move(currentArea) {\r\n        const newArea = []\r\n        let stoppedBlocks = currentArea.map((el) => {\r\n            return el === 2 ? el = 2 : el = 0\r\n        })\r\n        let movingBlocks = currentArea.map((el) => {\r\n            return el === 1 ? el = 1 : el = 0\r\n        })\r\n        for (let i = 0; i < 240; i++) {\r\n            if (movingBlocks[i] === 1) {\r\n                if (i.toString().slice(-1) !== '0') {\r\n                    movingBlocks[i] = 0;\r\n                    movingBlocks[i - 1] = 1;\r\n                } else {\r\n                    return currentArea\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < 240; i++) {\r\n            const sum = stoppedBlocks[i] + movingBlocks[i]\r\n            if (sum <= 2) {\r\n                newArea.push(sum)\r\n            } else {\r\n                return currentArea\r\n            }\r\n        }\r\n\r\n        return newArea\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}