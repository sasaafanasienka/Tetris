{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport '../../styles/button.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyField from '../../constants/emptyField';\nimport randomBlock from '../../gameEvents/randomBlock';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport Controls from '../Controls/Controls';\nimport Stat from '../Stat/Stat';\nimport GameProcess from '../GameProcess/GameProcess';\nimport Rotate from '../../blockMoves/Rotate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\nconst rotate = new Rotate();\nconst gameProcess = new GameProcess();\n\nfunction Main() {\n  _s();\n\n  const firstBrick = randomBlock();\n  const [state, setState] = useState({\n    playField: emptyField(),\n    movingBrick: firstBrick.brick,\n    baseLine: 3,\n    baseColumn: firstBrick.baseColumn,\n    score: 0,\n    speed: 800\n  });\n  const [intervalID, setMoveInterval] = useState();\n  const [listener, setListener] = useState(1);\n\n  if (listener === 1) {\n    document.addEventListener('click', () => {\n      console.log('zalupa');\n    });\n  } else {\n    document.removeEventListener('click', () => {\n      console.log('zalupa');\n    });\n  }\n\n  function nextStep() {\n    setState(state => gameProcess.nextStep(state));\n  }\n\n  function startGame() {\n    document.addEventListener('keypress', keyActions);\n    set; // setMoveInterval(\n    //     setInterval(nextStep, state.speed)\n    //     )\n  }\n\n  function stopGame() {\n    document.removeEventListener('keypress', keyActions);\n    document.removeEventListener('click', () => {\n      console.log('zalupa');\n    }); // clearInterval(intervalID)\n  }\n\n  function keyActions(event) {\n    if (event.code === 'Numpad5') {\n      setState(state => moveDown.move(state));\n    } else if (event.code === 'Numpad4') {\n      setState(state => moveLeft.move(state));\n    } else if (event.code === 'Numpad6') {\n      setState(state => moveRight.move(state));\n    } else if (event.code === 'Numpad8') {\n      setState(state => rotate.move(state));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(Stat, {\n      score: state.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      startGame: startGame,\n      stopGame: stopGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"Xv1AIOQQJu+3H9L5u/cb6BZ4+qs=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyField","randomBlock","MoveDown","MoveRight","MoveLeft","Controls","Stat","GameProcess","Rotate","moveDown","moveRight","moveLeft","rotate","gameProcess","Main","firstBrick","state","setState","playField","movingBrick","brick","baseLine","baseColumn","score","speed","intervalID","setMoveInterval","listener","setListener","document","addEventListener","console","log","removeEventListener","nextStep","startGame","keyActions","set","stopGame","event","code","move"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyField from '../../constants/emptyField'\r\nimport randomBlock from '../../gameEvents/randomBlock'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport GameProcess from '../GameProcess/GameProcess'\r\nimport Rotate from '../../blockMoves/Rotate';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\nconst rotate = new Rotate()\r\nconst gameProcess = new GameProcess()\r\n\r\nfunction Main() {\r\n\r\n    const firstBrick = randomBlock()\r\n\r\n    const [state, setState ] = useState(\r\n        {\r\n            playField: emptyField(),\r\n            movingBrick: firstBrick.brick,\r\n            baseLine: 3,\r\n            baseColumn: firstBrick.baseColumn,\r\n            score: 0,\r\n            speed: 800\r\n        }\r\n    )\r\n    const [ intervalID, setMoveInterval ] = useState()\r\n\r\n    const [ listener , setListener ] = useState(1) \r\n\r\n    if (listener === 1) {\r\n        document.addEventListener('click', () => {console.log('zalupa')})\r\n    } else {\r\n        document.removeEventListener('click', () => {console.log('zalupa')})\r\n    }\r\n\r\n    function nextStep() {\r\n        setState(state => gameProcess.nextStep(state))\r\n    }\r\n\r\n    function startGame() {\r\n        document.addEventListener('keypress', keyActions)\r\n        set\r\n\r\n        \r\n        // setMoveInterval(\r\n        //     setInterval(nextStep, state.speed)\r\n        //     )\r\n        }\r\n        \r\n    function stopGame() {\r\n        document.removeEventListener('keypress', keyActions)\r\n        document.removeEventListener('click', () => {console.log('zalupa')})\r\n        // clearInterval(intervalID)\r\n    }\r\n\r\n    function keyActions(event) {\r\n        if (event.code === 'Numpad5') {\r\n            setState(state => moveDown.move(state))\r\n        } else if (event.code === 'Numpad4') {\r\n            setState(state => moveLeft.move(state))\r\n        } else if (event.code === 'Numpad6') {\r\n            setState(state => moveRight.move(state))\r\n        }  else if (event.code === 'Numpad8') {\r\n            setState(state => rotate.move(state))\r\n        }       \r\n    }\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={state.score}/>\r\n            <PlayArea gameData={state} />\r\n            <Controls startGame={startGame} stopGame={stopGame}/>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}