{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport '../../styles/button.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyArea from '../../constants/emptyArea';\nimport testArea from '../../constants/testArea';\nimport addRandomBlock from '../../gameEvents/addRandomBlock';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport Controls from '../Controls/Controls';\nimport Stat from '../Stat/Stat';\nimport MovingBlock from '../../checks/Movingblock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\nconst movingBlock = new MovingBlock();\n\nfunction Main() {\n  let buttonText = 'START';\n\n  function startPause() {\n    console.log('1');\n  }\n\n  let score;\n  let area = emptyArea; // const [ area, setArea ] = useState(area => emptyArea)\n  // const [ score, setScore ] = useState(0)\n  // const [ speed, setSpeed ] = useState(1000)\n  // const [ isGameInProgress, setProgress ] = useState(false)\n  // const [ moveInterval, setMoveInterval ] = useState()\n  // function moveBlockDown() {\n  //     setArea(area => moveDown.move(area))\n  // }\n  // function addNewBlock() {\n  //     setArea(area => addRandomBlock(area))\n  // }\n  // if (isGameInProgress) {\n  //     if (movingBlock.check(area)) {\n  //         useEffect(() => {\n  //             setTimeout(moveBlockDown, speed)\n  //         })\n  //         setTimeout(moveBlockDown, speed)\n  //     } else {\n  //         setTimeout(addNewBlock, speed)\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(Stat, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      buttonFunc: startPause,\n      buttonText: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyArea","testArea","addRandomBlock","MoveDown","MoveRight","MoveLeft","Controls","Stat","MovingBlock","moveDown","moveRight","moveLeft","movingBlock","Main","buttonText","startPause","console","log","score","area"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAO,0BAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,QAAQ,GAAG,IAAIN,QAAJ,EAAjB;AACA,MAAMO,SAAS,GAAG,IAAIN,SAAJ,EAAlB;AACA,MAAMO,QAAQ,GAAG,IAAIN,QAAJ,EAAjB;AACA,MAAMO,WAAW,GAAG,IAAIJ,WAAJ,EAApB;;AAEA,SAASK,IAAT,GAAgB;AAEZ,MAAIC,UAAU,GAAG,OAAjB;;AAEA,WAASC,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;;AAED,MAAIC,KAAJ;AACA,MAAIC,IAAI,GAAGnB,SAAX,CATY,CAWZ;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEkB;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEJ,UAAtB;AAAkC,MAAA,UAAU,EAAED;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KA5CQD,I;AA8CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyArea from '../../constants/emptyArea'\r\nimport testArea from '../../constants/testArea'\r\nimport addRandomBlock from '../../gameEvents/addRandomBlock'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport MovingBlock from '../../checks/Movingblock';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\nconst movingBlock = new MovingBlock()\r\n\r\nfunction Main() {\r\n\r\n    let buttonText = 'START'\r\n\r\n    function startPause() {\r\n        console.log('1')\r\n    }\r\n\r\n    let score\r\n    let area = emptyArea\r\n\r\n    // const [ area, setArea ] = useState(area => emptyArea)\r\n    // const [ score, setScore ] = useState(0)\r\n    // const [ speed, setSpeed ] = useState(1000)\r\n    // const [ isGameInProgress, setProgress ] = useState(false)\r\n    // const [ moveInterval, setMoveInterval ] = useState()\r\n    \r\n    // function moveBlockDown() {\r\n    //     setArea(area => moveDown.move(area))\r\n    // }\r\n\r\n    // function addNewBlock() {\r\n    //     setArea(area => addRandomBlock(area))\r\n    // }\r\n    \r\n\r\n    // if (isGameInProgress) {\r\n    //     if (movingBlock.check(area)) {\r\n    //         useEffect(() => {\r\n    //             setTimeout(moveBlockDown, speed)\r\n    //         })\r\n    //         setTimeout(moveBlockDown, speed)\r\n    //     } else {\r\n    //         setTimeout(addNewBlock, speed)\r\n    //     }\r\n    // }\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={score}/>\r\n            <PlayArea gameData={area}/>\r\n            <Controls buttonFunc={startPause} buttonText={buttonText}/>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}