{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\PlayArea\\\\PlayArea.js\";\nimport React from 'react';\nimport './PlayArea.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayArea(props) {\n  const playField = props.gameData;\n  console.log(props.gameData.playField);\n  console.log(props.gameData.movingBrick);\n  console.log(props.gameData.baseLine);\n  console.log(props.gameData.baseColumn);\n\n  function compileDataToArr() {\n    let dataArray = [];\n\n    for (let i = 0; i < 24; i++) {\n      if (i < props.gameData.baseLine - 4 || i > props.gameData.baseLine) {\n        console.log(props.gameData.playField[i]);\n        dataArray.concat(props.gameData.playField[i]);\n      } // for (let a = 0; a < 10; a++ ) {\n      // }\n\n    }\n\n    return dataArray;\n  }\n\n  function renderCells() {\n    console.log(compileDataToArr());\n    let cells = [];\n\n    for (let i = 40; i < 240; i++) {\n      if (props.gameData[i] === 0) {\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayArea__cell\"\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this));\n      } else {\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayArea__cell_full\"\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return cells;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayArea\",\n    children: renderCells()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PlayArea;\nexport default PlayArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayArea\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/PlayArea/PlayArea.js"],"names":["React","PlayArea","props","playField","gameData","console","log","movingBrick","baseLine","baseColumn","compileDataToArr","dataArray","i","concat","renderCells","cells","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAMC,SAAS,GAAGD,KAAK,CAACE,QAAxB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,QAAN,CAAeD,SAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,QAAN,CAAeG,WAA3B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,QAAN,CAAeI,QAA3B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,QAAN,CAAeK,UAA3B;;AAEA,WAASC,gBAAT,GAA4B;AACxB,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAIA,CAAC,GAAGV,KAAK,CAACE,QAAN,CAAeI,QAAf,GAA0B,CAA9B,IAAmCI,CAAC,GAAGV,KAAK,CAACE,QAAN,CAAeI,QAA1D,EAAoE;AAChEH,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,QAAN,CAAeD,SAAf,CAAyBS,CAAzB,CAAZ;AACAD,QAAAA,SAAS,CAACE,MAAV,CAAiBX,KAAK,CAACE,QAAN,CAAeD,SAAf,CAAyBS,CAAzB,CAAjB;AACH,OAJyB,CAK1B;AACA;;AACH;;AACD,WAAOD,SAAP;AACH;;AAED,WAASG,WAAT,GAAuB;AACnBT,IAAAA,OAAO,CAACC,GAAR,CAAYI,gBAAgB,EAA5B;AACA,QAAIK,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIH,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC3B,UAAIV,KAAK,CAACE,QAAN,CAAeQ,CAAf,MAAsB,CAA1B,EAA6B;AACzBG,QAAAA,KAAK,CAACC,IAAN,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WAAsC,GAAEJ,CAAE,EAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEF,OAHF,MAGQ;AACJG,QAAAA,KAAK,CAACC,IAAN,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WAA2C,GAAEJ,CAAE,EAA/C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEF;AACL;;AACD,WAAOG,KAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKD,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KA1CQb,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport './PlayArea.sass'\r\n\r\nfunction PlayArea(props) {\r\n\r\n    const playField = props.gameData\r\n\r\n    console.log(props.gameData.playField)\r\n    console.log(props.gameData.movingBrick)\r\n    console.log(props.gameData.baseLine)\r\n    console.log(props.gameData.baseColumn)\r\n\r\n    function compileDataToArr() {\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i < props.gameData.baseLine - 4 || i > props.gameData.baseLine) {\r\n                console.log(props.gameData.playField[i])\r\n                dataArray.concat(props.gameData.playField[i])\r\n            }\r\n            // for (let a = 0; a < 10; a++ ) {\r\n            // }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        console.log(compileDataToArr())\r\n        let cells = []\r\n        for (let i = 40; i < 240; i++) {\r\n            if (props.gameData[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className='PlayArea__cell_full' key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;"]},"metadata":{},"sourceType":"module"}