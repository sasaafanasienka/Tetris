{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport '../../styles/button.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyField from '../../constants/emptyField';\nimport randomBlock from '../../gameEvents/randomBlock';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport Controls from '../Controls/Controls';\nimport Stat from '../Stat/Stat';\nimport GameProcess from '../GameProcess/GameProcess';\nimport Rotate from '../../blockMoves/Rotate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\nconst rotate = new Rotate();\nconst gameProcess = new GameProcess();\n\nfunction Main() {\n  _s();\n\n  const [state, setState] = useState({\n    playField: emptyField(),\n    movingBrick: [0],\n    baseLine: 3,\n    baseColumn: 3,\n    score: 0,\n    speed: 800,\n    gameStatus: 'stopped'\n  });\n  const [intervalID, setMoveInterval] = useState();\n\n  function nextStep() {\n    setState(state => gameProcess.nextStep(state));\n  }\n\n  function startGame() {\n    document.addEventListener('keypress', keyActions);\n    const firstBrick = randomBlock();\n    setState({\n      playField: state.playField,\n      movingBrick: firstBrick.brick,\n      baseLine: 3,\n      baseColumn: firstBrick.baseColumn,\n      score: 0,\n      speed: 800,\n      gameStatus: 'inProgress'\n    });\n    setMoveInterval(setInterval(nextStep, state.speed));\n  }\n\n  function pauseGame() {\n    setState({\n      playField: state.playField,\n      movingBrick: state.movingBrick,\n      baseLine: state.baseLine,\n      baseColumn: state.baseColumn,\n      score: state.score,\n      speed: state.speed,\n      gameStatus: 'paused'\n    });\n    document.removeEventListener('keypress', keyActions);\n    clearInterval(intervalID);\n  }\n\n  function resumeGame() {\n    setState({\n      playField: state.playField,\n      movingBrick: state.movingBrick,\n      baseLine: state.baseLine,\n      baseColumn: state.baseColumn,\n      score: state.score,\n      speed: state.speed,\n      gameStatus: 'paused'\n    });\n    document.addEventListener('keypress', keyActions);\n    setMoveInterval(setInterval(nextStep, state.speed));\n  }\n\n  function keyActions(event) {\n    if (event.code === 'Numpad5') {\n      setState(state => moveDown.move(state));\n    } else if (event.code === 'Numpad4') {\n      setState(state => moveLeft.move(state));\n    } else if (event.code === 'Numpad6') {\n      setState(state => moveRight.move(state));\n    } else if (event.code === 'Numpad8') {\n      setState(state => rotate.move(state));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(Stat, {\n      score: state.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      startGame: startGame,\n      pauseGame: pauseGame,\n      resumeGame: resumeGame,\n      status: state.ga\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"tCBOGf51sNDfJqL0zj9kvNAQN8s=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyField","randomBlock","MoveDown","MoveRight","MoveLeft","Controls","Stat","GameProcess","Rotate","moveDown","moveRight","moveLeft","rotate","gameProcess","Main","state","setState","playField","movingBrick","baseLine","baseColumn","score","speed","gameStatus","intervalID","setMoveInterval","nextStep","startGame","document","addEventListener","keyActions","firstBrick","brick","setInterval","pauseGame","removeEventListener","clearInterval","resumeGame","event","code","move","ga"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyField from '../../constants/emptyField'\r\nimport randomBlock from '../../gameEvents/randomBlock'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport GameProcess from '../GameProcess/GameProcess'\r\nimport Rotate from '../../blockMoves/Rotate';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\nconst rotate = new Rotate()\r\nconst gameProcess = new GameProcess()\r\n\r\nfunction Main() {\r\n\r\n    const [state, setState ] = useState(\r\n        {\r\n            playField: emptyField(),\r\n            movingBrick: [0],\r\n            baseLine: 3,\r\n            baseColumn: 3,\r\n            score: 0,\r\n            speed: 800,\r\n            gameStatus: 'stopped'\r\n        }\r\n    )\r\n\r\n    const [intervalID, setMoveInterval ] = useState()\r\n\r\n    function nextStep() {\r\n        setState(state => gameProcess.nextStep(state))\r\n    }\r\n\r\n    function startGame() {\r\n        document.addEventListener('keypress', keyActions)\r\n        const firstBrick = randomBlock()\r\n        setState({\r\n            playField: state.playField,\r\n            movingBrick: firstBrick.brick,\r\n            baseLine: 3,\r\n            baseColumn: firstBrick.baseColumn,\r\n            score: 0,\r\n            speed: 800,\r\n            gameStatus: 'inProgress'\r\n        })\r\n        setMoveInterval(\r\n            setInterval(nextStep, state.speed)\r\n        )\r\n    }\r\n\r\n    function pauseGame() {\r\n        setState({\r\n            playField: state.playField,\r\n            movingBrick: state.movingBrick,\r\n            baseLine: state.baseLine,\r\n            baseColumn: state.baseColumn,\r\n            score: state.score,\r\n            speed: state.speed,\r\n            gameStatus: 'paused'\r\n        })\r\n        document.removeEventListener('keypress', keyActions)\r\n        clearInterval(intervalID)\r\n    }\r\n\r\n    function resumeGame() {\r\n        setState({\r\n            playField: state.playField,\r\n            movingBrick: state.movingBrick,\r\n            baseLine: state.baseLine,\r\n            baseColumn: state.baseColumn,\r\n            score: state.score,\r\n            speed: state.speed,\r\n            gameStatus: 'paused'\r\n        })\r\n        document.addEventListener('keypress', keyActions)\r\n        setMoveInterval(\r\n            setInterval(nextStep, state.speed)\r\n        )\r\n    }\r\n\r\n    function keyActions(event) {\r\n        if (event.code === 'Numpad5') {\r\n            setState(state => moveDown.move(state))\r\n        } else if (event.code === 'Numpad4') {\r\n            setState(state => moveLeft.move(state))\r\n        } else if (event.code === 'Numpad6') {\r\n            setState(state => moveRight.move(state))\r\n        }  else if (event.code === 'Numpad8') {\r\n            setState(state => rotate.move(state))\r\n        }       \r\n    }\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={state.score}/>\r\n            <PlayArea gameData={state} />\r\n            <Controls startGame={startGame} pauseGame={pauseGame} resumeGame={resumeGame} status={state.ga}/>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}