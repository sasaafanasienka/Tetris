{"ast":null,"code":"import blockExamples from '../constants/blockExamples';\nimport DataTransform from '../blockMoves/DataTransform';\nconst dataTransform = new DataTransform();\nexport default function removeFullRows(currentArea) {\n  let newArea = [];\n  const areaArray = dataTransform.arrToScheme(currentArea);\n\n  for (let i = 0; i < 24; i++) {\n    if (areaArray.some(el => {\n      return el < 2;\n    })) {\n      newArea.push(areaArray[i]);\n    }\n  }\n\n  console.log(newArea);\n  console.log(newArea.length);\n\n  for (let a = 0; a < 24 - newArea.length; a++) {\n    newArea.splice(0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return dataTransform.schemeToArr(newArea);\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/gameEvents/removeFullRows.js"],"names":["blockExamples","DataTransform","dataTransform","removeFullRows","currentArea","newArea","areaArray","arrToScheme","i","some","el","push","console","log","length","a","splice","schemeToArr"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,MAAMC,aAAa,GAAG,IAAID,aAAJ,EAAtB;AAEA,eAAe,SAASE,cAAT,CAAwBC,WAAxB,EAAqC;AAEhD,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMC,SAAS,GAAGJ,aAAa,CAACK,WAAd,CAA0BH,WAA1B,CAAlB;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIF,SAAS,CAACG,IAAV,CAAgBC,EAAD,IAAQ;AACvB,aAAOA,EAAE,GAAG,CAAZ;AACH,KAFG,CAAJ,EAEI;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAaL,SAAS,CAACE,CAAD,CAAtB;AACH;AACJ;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACS,MAApB;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,KAAKV,OAAO,CAACS,MAAlC,EAA0CC,CAAC,EAA3C,EAAgD;AAC5CV,IAAAA,OAAO,CAACW,MAAR,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAArB;AACH;;AAED,SAAOd,aAAa,CAACe,WAAd,CAA0BZ,OAA1B,CAAP;AACH","sourcesContent":["import blockExamples from '../constants/blockExamples'\r\nimport DataTransform from '../blockMoves/DataTransform'\r\n\r\nconst dataTransform = new DataTransform()\r\n\r\nexport default function removeFullRows(currentArea) {\r\n    \r\n    let newArea = []\r\n    const areaArray = dataTransform.arrToScheme(currentArea)\r\n    for (let i = 0; i < 24; i++) {\r\n        if (areaArray.some((el) => {\r\n            return el < 2\r\n        })) {\r\n            newArea.push(areaArray[i])\r\n        }\r\n    }\r\n    console.log(newArea)\r\n    console.log(newArea.length)\r\n    for ( let a = 0; a < 24 - newArea.length; a++ ) {\r\n        newArea.splice(0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\r\n    }\r\n\r\n    return dataTransform.schemeToArr(newArea)\r\n}"]},"metadata":{},"sourceType":"module"}