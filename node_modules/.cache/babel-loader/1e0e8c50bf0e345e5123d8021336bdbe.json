{"ast":null,"code":"import scoreTable from '../constants/scoreTable';\nexport default function removeFullRows(current) {\n  const playField = current.playField;\n  const movingBrick = current.movingBrick;\n  const baseLine = current.baseLine;\n  const baseColumn = current.baseColumn;\n  let fullRowsQuantity = 0;\n  let newPlayField = [];\n\n  for (let i = 0; i < 24; i++) {\n    if (playField[i].some(el => {\n      return el !== 2;\n    })) {\n      newPlayField.push(playField[i]);\n    } else {\n      fullRowsQuantity = fullRowsQuantity + 1;\n    }\n  }\n\n  console.log(newPlayField);\n\n  for (let i = 0; i < fullRowsQuantity; i++) {\n    newPlayField.unshift([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  console.log(newPlayField);\n  const newScore = current.score + scoreTable[fullRowsQuantity];\n\n  if (newScore > current.record) {}\n\n  return {\n    playField: newPlayField,\n    movingBrick: movingBrick,\n    baseLine: baseLine,\n    baseColumn: baseColumn,\n    nextBrick: current.nextBrick,\n    nextBaseColumn: current.nextBaseColumn,\n    score: current.score + scoreTable[fullRowsQuantity],\n    record: current.record,\n    speed: current.speed\n  };\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/gameEvents/removeFullRows.js"],"names":["scoreTable","removeFullRows","current","playField","movingBrick","baseLine","baseColumn","fullRowsQuantity","newPlayField","i","some","el","push","console","log","unshift","newScore","score","record","nextBrick","nextBaseColumn","speed"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC5C,QAAMC,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,QAAMC,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAzB;AACA,QAAMC,UAAU,GAAGJ,OAAO,CAACI,UAA3B;AAEA,MAAIC,gBAAgB,GAAG,CAAvB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIN,SAAS,CAACM,CAAD,CAAT,CAAaC,IAAb,CAAmBC,EAAD,IAAQ;AAAE,aAAOA,EAAE,KAAK,CAAd;AAAiB,KAA7C,CAAJ,EAAoD;AAChDH,MAAAA,YAAY,CAACI,IAAb,CAAkBT,SAAS,CAACM,CAAD,CAA3B;AACH,KAFD,MAEO;AACHF,MAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,CAAtC;AACH;AACJ;;AAEDM,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,gBAApB,EAAsCE,CAAC,EAAvC,EAA2C;AACvCD,IAAAA,YAAY,CAACO,OAAb,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAArB;AACH;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAEA,QAAMQ,QAAQ,GAAGd,OAAO,CAACe,KAAR,GAAgBjB,UAAU,CAACO,gBAAD,CAA3C;;AAEA,MAAIS,QAAQ,GAAGd,OAAO,CAACgB,MAAvB,EAA+B,CAE9B;;AAED,SAAO;AACHf,IAAAA,SAAS,EAAEK,YADR;AAEHJ,IAAAA,WAAW,EAAEA,WAFV;AAGHC,IAAAA,QAAQ,EAAEA,QAHP;AAIHC,IAAAA,UAAU,EAAEA,UAJT;AAKHa,IAAAA,SAAS,EAAEjB,OAAO,CAACiB,SALhB;AAMHC,IAAAA,cAAc,EAAElB,OAAO,CAACkB,cANrB;AAOHH,IAAAA,KAAK,EAAEf,OAAO,CAACe,KAAR,GAAgBjB,UAAU,CAACO,gBAAD,CAP9B;AAQHW,IAAAA,MAAM,EAAEhB,OAAO,CAACgB,MARb;AASHG,IAAAA,KAAK,EAAEnB,OAAO,CAACmB;AATZ,GAAP;AAWH","sourcesContent":["import scoreTable from '../constants/scoreTable'\r\n\r\nexport default function removeFullRows(current) {\r\n    const playField = current.playField\r\n    const movingBrick = current.movingBrick\r\n    const baseLine = current.baseLine\r\n    const baseColumn = current.baseColumn\r\n\r\n    let fullRowsQuantity = 0\r\n    let newPlayField = []\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n        if (playField[i].some((el) => { return el !== 2 })) {\r\n            newPlayField.push(playField[i])\r\n        } else {\r\n            fullRowsQuantity = fullRowsQuantity + 1\r\n        }\r\n    }\r\n\r\n    console.log(newPlayField)\r\n    for (let i = 0; i < fullRowsQuantity; i++) {\r\n        newPlayField.unshift([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\r\n    }\r\n    console.log(newPlayField)\r\n\r\n    const newScore = current.score + scoreTable[fullRowsQuantity]\r\n    \r\n    if (newScore > current.record) {\r\n\r\n    }\r\n\r\n    return {\r\n        playField: newPlayField,\r\n        movingBrick: movingBrick,\r\n        baseLine: baseLine,\r\n        baseColumn: baseColumn,\r\n        nextBrick: current.nextBrick,\r\n        nextBaseColumn: current.nextBaseColumn,\r\n        score: current.score + scoreTable[fullRowsQuantity],\r\n        record: current.record,\r\n        speed: current.speed,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}