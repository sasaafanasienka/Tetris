{"ast":null,"code":"import blockExamples from'../constants/blockExamples';function random(maxNumber){var rand=Math.random()*(maxNumber+1);return Math.floor(rand);}function rotate(brick){var brickSize=brick.length;var rotatedBrick=[];for(var i=0;i<brickSize;i++){var newRow=[];for(var a=0;a<brickSize;a++){newRow.push(brick[brickSize-a-1][i]);}if(newRow.every(function(el){return el===0;})){rotatedBrick.unshift(newRow);}else{rotatedBrick.push(newRow);}}return rotatedBrick;}export default function randomBlock(){var newBrick=blockExamples[random(6)];//сперва генерируем рандомно одну из 7 фигур\nfor(var i=0;i<random(3);i++){//потом рандомно крутим фигуру от 0 до 3 раз\nnewBrick=rotate(newBrick);}var newBrickSize=newBrick.length;return{brick:newBrick,baseColumn:Math.ceil((10-newBrickSize)/2)};}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/utilits/randomBlock.js"],"names":["blockExamples","random","maxNumber","rand","Math","floor","rotate","brick","brickSize","length","rotatedBrick","i","newRow","a","push","every","el","unshift","randomBlock","newBrick","newBrickSize","baseColumn","ceil"],"mappings":"AAAA,MAAOA,CAAAA,aAAP,KAA0B,4BAA1B,CAEA,QAASC,CAAAA,MAAT,CAAgBC,SAAhB,CAA2B,CACvB,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACH,MAAL,IAAiBC,SAAS,CAAG,CAA7B,CAAX,CACA,MAAOE,CAAAA,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP,CACH,CAED,QAASG,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAEnB,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,MAAtB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAEA,IAAM,GAAIC,CAAAA,CAAC,CAAG,CAAd,CAAiBA,CAAC,CAAGH,SAArB,CAAgCG,CAAC,EAAjC,CAAsC,CAClC,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,IAAM,GAAIC,CAAAA,CAAC,CAAG,CAAd,CAAiBA,CAAC,CAAGL,SAArB,CAAgCK,CAAC,EAAjC,CAAsC,CAClCD,MAAM,CAACE,IAAP,CAAYP,KAAK,CAACC,SAAS,CAAGK,CAAZ,CAAgB,CAAjB,CAAL,CAAyBF,CAAzB,CAAZ,EACH,CACD,GAAIC,MAAM,CAACG,KAAP,CAAa,SAACC,EAAD,CAAQ,CAAE,MAAOA,CAAAA,EAAE,GAAK,CAAd,CAAiB,CAAxC,CAAJ,CAA+C,CAC3CN,YAAY,CAACO,OAAb,CAAqBL,MAArB,EACH,CAFD,IAEO,CACHF,YAAY,CAACI,IAAb,CAAkBF,MAAlB,EACH,CACJ,CACD,MAAOF,CAAAA,YAAP,CACH,CAED,cAAe,SAASQ,CAAAA,WAAT,EAAuB,CAElC,GAAIC,CAAAA,QAAQ,CAAGnB,aAAa,CAACC,MAAM,CAAC,CAAD,CAAP,CAA5B,CAAwC;AACxC,IAAK,GAAIU,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGV,MAAM,CAAC,CAAD,CAA1B,CAA+BU,CAAC,EAAhC,CAAqC,CAAE;AACnCQ,QAAQ,CAAGb,MAAM,CAACa,QAAD,CAAjB,CACH,CACD,GAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACV,MAA9B,CAEA,MAAO,CACHF,KAAK,CAAEY,QADJ,CAEHE,UAAU,CAAEjB,IAAI,CAACkB,IAAL,CAAU,CAAC,GAAKF,YAAN,EAAsB,CAAhC,CAFT,CAAP,CAIH","sourcesContent":["import blockExamples from '../constants/blockExamples'\r\n\r\nfunction random(maxNumber) {\r\n    let rand = Math.random() * (maxNumber + 1);\r\n    return Math.floor(rand);\r\n}\r\n\r\nfunction rotate(brick) {\r\n\r\n    let brickSize = brick.length\r\n    let rotatedBrick = []\r\n        \r\n    for ( let i = 0; i < brickSize; i++ ) {\r\n        let newRow = []\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            newRow.push(brick[brickSize - a - 1][i])\r\n        }\r\n        if (newRow.every((el) => { return el === 0 })) {\r\n            rotatedBrick.unshift(newRow)\r\n        } else {\r\n            rotatedBrick.push(newRow)\r\n        }\r\n    }\r\n    return rotatedBrick\r\n}\r\n\r\nexport default function randomBlock() {\r\n\r\n    let newBrick = blockExamples[random(6)] //сперва генерируем рандомно одну из 7 фигур\r\n    for (let i = 0; i < random(3); i++ ) { //потом рандомно крутим фигуру от 0 до 3 раз\r\n        newBrick = rotate(newBrick)\r\n    }\r\n    const newBrickSize = newBrick.length\r\n\r\n    return {\r\n        brick: newBrick,\r\n        baseColumn: Math.ceil((10 - newBrickSize) / 2)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}