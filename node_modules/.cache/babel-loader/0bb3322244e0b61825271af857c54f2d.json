{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyArea from '../../constants/emptyArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  console.log(emptyArea);\n  React.useEffect(() => {\n    document.addEventListener(\"keypress\", changeOnArea);\n    return () => {\n      document.removeEventListener(\"keypress\", changeOnArea);\n    };\n  });\n  const [area, changeArea] = useState({\n    scheme: emptyArea\n  });\n  console.log(area.scheme[5][4]);\n\n  function changeOnArea(event) {\n    if (event.code === 'Numpad8') {\n      let newArea = area.array;\n      let oldCell = newArea.indexOf(1);\n      newArea[oldCell] = 0;\n      newArea[oldCell - 10] = 1;\n      changeArea({\n        array: newArea\n      });\n    } else if (event.code === 'Numpad5') {\n      let newArea = area.array;\n      let oldCell = newArea.indexOf(1);\n      newArea[oldCell] = 0;\n      newArea[oldCell + 10] = 1;\n      changeArea({\n        array: newArea\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    onKeyPress: changeOnArea\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"iJeHyzm5OPVol09IM8ZI+LbKfeQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyArea","Main","console","log","document","addEventListener","changeOnArea","removeEventListener","area","changeArea","scheme","event","code","newArea","array","oldCell","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEAJ,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClBM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,YAAtC;AACA,WAAO,MAAM;AACbF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,UAA7B,EAAyCD,YAAzC;AACC,KAFD;AAGH,GALD;AAOA,QAAM,CAAEE,IAAF,EAAQC,UAAR,IAAuBZ,QAAQ,CAAC;AAACa,IAAAA,MAAM,EAAEV;AAAT,GAAD,CAArC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;;AAEA,WAASJ,YAAT,CAAsBK,KAAtB,EAA6B;AACzB,QAAIA,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AAC1B,UAAIC,OAAO,GAAGL,IAAI,CAACM,KAAnB;AACA,UAAIC,OAAO,GAAGF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAd;AACAH,MAAAA,OAAO,CAACE,OAAD,CAAP,GAAmB,CAAnB;AACAF,MAAAA,OAAO,CAACE,OAAO,GAAG,EAAX,CAAP,GAAwB,CAAxB;AACAN,MAAAA,UAAU,CAAC;AAACK,QAAAA,KAAK,EAAED;AAAR,OAAD,CAAV;AACH,KAND,MAMO,IAAIF,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACjC,UAAIC,OAAO,GAAGL,IAAI,CAACM,KAAnB;AACA,UAAIC,OAAO,GAAGF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAd;AACAH,MAAAA,OAAO,CAACE,OAAD,CAAP,GAAmB,CAAnB;AACAF,MAAAA,OAAO,CAACE,OAAO,GAAG,EAAX,CAAP,GAAwB,CAAxB;AACAN,MAAAA,UAAU,CAAC;AAACK,QAAAA,KAAK,EAAED;AAAR,OAAD,CAAV;AACH;AACJ;;AAED,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,UAAU,EAAEP;AAAnC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnCQL,I;;KAAAA,I;AAqCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyArea from '../../constants/emptyArea'\r\n\r\nfunction Main() {\r\n    \r\n    console.log(emptyArea)\r\n    \r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keypress\", changeOnArea);\r\n        return () => {\r\n        document.removeEventListener(\"keypress\", changeOnArea);\r\n        }\r\n    })\r\n\r\n    const [ area, changeArea ] = useState({scheme: emptyArea})\r\n    console.log(area.scheme[5][4])\r\n\r\n    function changeOnArea(event) {\r\n        if (event.code === 'Numpad8') {\r\n            let newArea = area.array;\r\n            let oldCell = newArea.indexOf(1)\r\n            newArea[oldCell] = 0\r\n            newArea[oldCell - 10] = 1\r\n            changeArea({array: newArea})\r\n        } else if (event.code === 'Numpad5') {\r\n            let newArea = area.array;\r\n            let oldCell = newArea.indexOf(1)\r\n            newArea[oldCell] = 0\r\n            newArea[oldCell + 10] = 1\r\n            changeArea({array: newArea})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main className=\"Main\" onKeyPress={changeOnArea}>\r\n            {/* <PlayArea gameData={area.scheme}/> */}\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}