{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './Main.sass';\nimport '../../styles/button.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyField from '../../constants/emptyField';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport Controls from '../Controls/Controls';\nimport Stat from '../Stat/Stat';\nimport Queue from '../Queue/Queue';\nimport GameProcess from '../GameProcess/GameProcess';\nimport Rotate from '../../blockMoves/Rotate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\nconst rotate = new Rotate();\nconst gameProcess = new GameProcess();\n\nfunction Main() {\n  _s();\n\n  const [state, setState] = useState({\n    playField: emptyField(),\n    movingBrick: [],\n    baseLine: 3,\n    baseColumn: 3,\n    nextBrick: [],\n    nextBaseColumn: 3,\n    score: 0,\n    record: localStorage.getItem('record'),\n    bricksCount: 0\n  });\n  const [intervalID, setMoveInterval] = useState();\n  const [gameStatus, setGameStatus] = useState('stopped');\n  const [speed, setSpeed] = useState(0);\n\n  function nextStep() {\n    setState(state => gameProcess.nextStep(state, stopGame));\n  }\n\n  function startGame() {\n    window.addEventListener('keydown', keyActions);\n    setMoveInterval(setInterval(nextStep, 500));\n  }\n\n  function stopGame() {\n    window.removeEventListener('keydown', keyActions);\n    clearInterval(intervalID);\n  }\n\n  function changeSpeed() {\n    setSpeed(speed => speed + 1);\n    let newTimeInterval;\n    clearInterval(intervalID);\n    setMoveInterval(setInterval(nextStep, 800 - spped));\n  }\n\n  const keyActions = useCallback(event => {\n    //хук useCallBack]\n    if (event.code === 'Numpad5') {\n      setState(state => moveDown.move(state));\n    } else if (event.code === 'Numpad4') {\n      setState(state => moveLeft.move(state));\n    } else if (event.code === 'Numpad6') {\n      setState(state => moveRight.move(state));\n    } else if (event.code === 'Numpad8') {\n      setState(state => rotate.move(state));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(Stat, {\n      score: state.score,\n      record: state.record,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Controls, {\n        startGame: startGame,\n        stopGame: stopGame,\n        status: gameStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Queue, {\n        gameData: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"NKp9qFuQGBIE5oA7udjNJfzURHY=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","useCallback","PlayArea","emptyField","MoveDown","MoveRight","MoveLeft","Controls","Stat","Queue","GameProcess","Rotate","moveDown","moveRight","moveLeft","rotate","gameProcess","Main","state","setState","playField","movingBrick","baseLine","baseColumn","nextBrick","nextBaseColumn","score","record","localStorage","getItem","bricksCount","intervalID","setMoveInterval","gameStatus","setGameStatus","speed","setSpeed","nextStep","stopGame","startGame","window","addEventListener","keyActions","setInterval","removeEventListener","clearInterval","changeSpeed","newTimeInterval","spped","event","code","move"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyField from '../../constants/emptyField'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport Queue from '../Queue/Queue'\r\nimport GameProcess from '../GameProcess/GameProcess'\r\nimport Rotate from '../../blockMoves/Rotate';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\nconst rotate = new Rotate()\r\nconst gameProcess = new GameProcess()\r\n\r\nfunction Main() {\r\n\r\n    const [state, setState ] = useState(\r\n        {\r\n            playField: emptyField(),\r\n            movingBrick: [],\r\n            baseLine: 3,\r\n            baseColumn: 3,\r\n            nextBrick: [],\r\n            nextBaseColumn: 3,\r\n            score: 0,\r\n            record: localStorage.getItem('record'),\r\n            bricksCount: 0\r\n        }\r\n    )\r\n\r\n    const [ intervalID, setMoveInterval ] = useState()\r\n    const [ gameStatus, setGameStatus ] = useState('stopped')\r\n    const [ speed, setSpeed ] = useState(0)\r\n\r\n    function nextStep() {\r\n        setState(state => gameProcess.nextStep(state, stopGame))\r\n    }\r\n\r\n    function startGame() {\r\n        window.addEventListener('keydown', keyActions)\r\n        setMoveInterval(\r\n            setInterval(nextStep, 500)\r\n            )\r\n        }\r\n        \r\n    function stopGame() {\r\n        window.removeEventListener('keydown', keyActions)\r\n        clearInterval(intervalID)\r\n    }\r\n\r\n    function changeSpeed() {\r\n        setSpeed(speed => speed + 1)\r\n        let newTimeInterval\r\n\r\n        clearInterval(intervalID)\r\n        setMoveInterval(\r\n            setInterval(nextStep, 800 - spped)\r\n        )\r\n    }\r\n\r\n    const keyActions = useCallback((event) => { //хук useCallBack]\r\n        if (event.code === 'Numpad5') {\r\n            setState(state => moveDown.move(state))\r\n        } else if (event.code === 'Numpad4') {\r\n            setState(state => moveLeft.move(state))\r\n        } else if (event.code === 'Numpad6') {\r\n            setState(state => moveRight.move(state))\r\n        }  else if (event.code === 'Numpad8') {\r\n            setState(state => rotate.move(state))\r\n        }       \r\n    }, [])\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={state.score} record={state.record} speed={speed}/>\r\n            <PlayArea gameData={state} />\r\n            <div>\r\n                <Controls startGame={startGame} stopGame={stopGame} status={gameStatus}/>\r\n                <Queue gameData={state}/>\r\n            </div>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}