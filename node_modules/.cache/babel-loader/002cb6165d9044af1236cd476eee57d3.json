{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport '../../styles/button.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyArea from '../../constants/emptyArea';\nimport testArea from '../../constants/testArea';\nimport addNewBlock from '../../gameEvents/addNewBlock';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport Controls from '../Controls/Controls';\nimport Stat from '../Stat/Stat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\n\nfunction Main() {\n  _s();\n\n  const [area, setArea] = useState(emptyArea);\n  const [score, setScore] = useState(0); // let interval\n\n  const newPromise = new Promise(function (resolve, reject) {\n    const newArea = addNewBlock(area);\n\n    if (newArea.length === 20) {\n      resolve(newArea);\n    } else {\n      reject(area);\n    }\n  });\n\n  function startGame() {\n    console.log(start); // newPromise\n    //     .then(function(value) {\n    //         setArea(value)\n    //     })\n    //     .catch(function(value) {\n    //         setArea(value)\n    //     })\n    // const newArea = addNewBlock(area)\n    // console.log(newArea)\n    // setArea(newArea)\n    // setArea(addNewBlock(area))\n    // setScore(500)\n    // document.addEventListener(\"keypress\", pressButton)\n    // interval = setInterval(() => {\n    //     changeArea(area => moveDown.move1(area));\n    // }, 1000);\n  } // function pressButton(event) {\n  //     if (event.code === 'Numpad5') {\n  //         changeArea(moveDown.move1(area))\n  //     } else if (event.code === 'Numpad4') {\n  //         changeArea(moveLeft.move(area))\n  //     } else if (event.code === 'Numpad6') {\n  //         changeArea(moveRight.move(area))\n  //     } else if (event.code === 'Numpad1') {\n  //         changeArea(addNewBlock(emptyArea))\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(Stat, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"+MeUk06YLXbC58JGqQFbrOjkPNM=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyArea","testArea","addNewBlock","MoveDown","MoveRight","MoveLeft","Controls","Stat","moveDown","moveRight","moveLeft","Main","area","setArea","score","setScore","newPromise","Promise","resolve","reject","newArea","length","startGame","console","log","start"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAO,0BAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,QAAQ,GAAG,IAAIL,QAAJ,EAAjB;AACA,MAAMM,SAAS,GAAG,IAAIL,SAAJ,EAAlB;AACA,MAAMM,QAAQ,GAAG,IAAIL,QAAJ,EAAjB;;AAEA,SAASM,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBhB,QAAQ,CAACG,SAAD,CAAlC;AACA,QAAM,CAAEc,KAAF,EAASC,QAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC,CAHY,CAKZ;;AAEA,QAAMmB,UAAU,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACtD,UAAMC,OAAO,GAAGlB,WAAW,CAACU,IAAD,CAA3B;;AACA,QAAIQ,OAAO,CAACC,MAAR,KAAmB,EAAvB,EAA2B;AACvBH,MAAAA,OAAO,CAACE,OAAD,CAAP;AACH,KAFD,MAEO;AACHD,MAAAA,MAAM,CAACP,IAAD,CAAN;AACH;AACJ,GAPkB,CAAnB;;AASA,WAASU,SAAT,GAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAlCW,CAoCZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEX;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEU;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvDQX,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyArea from '../../constants/emptyArea'\r\nimport testArea from '../../constants/testArea'\r\nimport addNewBlock from '../../gameEvents/addNewBlock'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\n\r\nfunction Main() {\r\n\r\n    const [ area, setArea ] = useState(emptyArea)\r\n    const [ score, setScore ] = useState(0)\r\n\r\n    // let interval\r\n\r\n    const newPromise = new Promise(function (resolve, reject) {\r\n        const newArea = addNewBlock(area)\r\n        if (newArea.length === 20) {\r\n            resolve(newArea);\r\n        } else {\r\n            reject(area);\r\n        }\r\n    }); \r\n\r\n    function startGame() {\r\n        console.log(start)\r\n        // newPromise\r\n        //     .then(function(value) {\r\n        //         setArea(value)\r\n        //     })\r\n        //     .catch(function(value) {\r\n        //         setArea(value)\r\n        //     })\r\n        // const newArea = addNewBlock(area)\r\n        // console.log(newArea)\r\n        // setArea(newArea)\r\n        // setArea(addNewBlock(area))\r\n        // setScore(500)\r\n        // document.addEventListener(\"keypress\", pressButton)\r\n        // interval = setInterval(() => {\r\n        //     changeArea(area => moveDown.move1(area));\r\n        // }, 1000);\r\n    }\r\n  \r\n    // function pressButton(event) {\r\n    //     if (event.code === 'Numpad5') {\r\n    //         changeArea(moveDown.move1(area))\r\n    //     } else if (event.code === 'Numpad4') {\r\n    //         changeArea(moveLeft.move(area))\r\n    //     } else if (event.code === 'Numpad6') {\r\n    //         changeArea(moveRight.move(area))\r\n    //     } else if (event.code === 'Numpad1') {\r\n    //         changeArea(addNewBlock(emptyArea))\r\n    //     }\r\n    // }\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={score}/>\r\n            <PlayArea gameData={area}/>\r\n            <Controls startGame={startGame}/>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}