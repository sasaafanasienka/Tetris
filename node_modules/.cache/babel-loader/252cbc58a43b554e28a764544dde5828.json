{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\PlayArea\\\\PlayArea.js\";\nimport React from 'react';\nimport './PlayArea.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayArea(props) {\n  const playField = props.gameData.playField;\n  const movingBrick = props.gameData.movingBrick;\n  const baseLine = props.gameData.baseLine;\n  const baseColumn = props.gameData.baseColumn;\n  console.log(props.gameData.playField);\n  console.log(props.gameData.movingBrick);\n  console.log(props.gameData.baseLine);\n  console.log(props.gameData.baseColumn);\n\n  function compileDataToArr() {\n    let dataArray = [];\n\n    for (let i = 0; i < 24; i++) {\n      if (i < baseLine - 3 || i > baseLine) {\n        dataArray = dataArray.concat(playField[i]);\n      } else {\n        for (let a = 0; a < 10; a++) {\n          if (a < baseColumn || a > baseColumn + 3) {\n            dataArray = dataArray.concat();\n          }\n        }\n      } // for (let a = 0; a < 10; a++ ) {\n      // }\n\n    }\n\n    return dataArray;\n  }\n\n  function renderCells() {\n    console.log(compileDataToArr());\n    let cells = [];\n\n    for (let i = 40; i < 240; i++) {\n      if (props.gameData[i] === 0) {\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayArea__cell\"\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this));\n      } else {\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayArea__cell_full\"\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return cells;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayArea\",\n    children: renderCells()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PlayArea;\nexport default PlayArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayArea\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/PlayArea/PlayArea.js"],"names":["React","PlayArea","props","playField","gameData","movingBrick","baseLine","baseColumn","console","log","compileDataToArr","dataArray","i","concat","a","renderCells","cells","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAMC,SAAS,GAAGD,KAAK,CAACE,QAAN,CAAeD,SAAjC;AACA,QAAME,WAAW,GAAGH,KAAK,CAACE,QAAN,CAAeC,WAAnC;AACA,QAAMC,QAAQ,GAAGJ,KAAK,CAACE,QAAN,CAAeE,QAAhC;AACA,QAAMC,UAAU,GAAGL,KAAK,CAACE,QAAN,CAAeG,UAAlC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,QAAN,CAAeD,SAA3B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,QAAN,CAAeC,WAA3B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,QAAN,CAAeE,QAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,QAAN,CAAeG,UAA3B;;AAEA,WAASG,gBAAT,GAA4B;AACxB,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAIA,CAAC,GAAGN,QAAQ,GAAG,CAAf,IAAoBM,CAAC,GAAGN,QAA5B,EAAsC;AAClCK,QAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBV,SAAS,CAACS,CAAD,CAA1B,CAAZ;AACH,OAFD,MAEO;AACH,aAAM,IAAIE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA+B;AAC3B,cAAKA,CAAC,GAAGP,UAAJ,IAAkBO,CAAC,GAAGP,UAAU,GAAG,CAAxC,EAA4C;AACxCI,YAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,EAAZ;AACH;AACJ;AACJ,OATyB,CAU1B;AACA;;AACH;;AACD,WAAOF,SAAP;AACH;;AAED,WAASI,WAAT,GAAuB;AACnBP,IAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAgB,EAA5B;AACA,QAAIM,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIJ,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC3B,UAAIV,KAAK,CAACE,QAAN,CAAeQ,CAAf,MAAsB,CAA1B,EAA6B;AACzBI,QAAAA,KAAK,CAACC,IAAN,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WAAsC,GAAEL,CAAE,EAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEF,OAHF,MAGQ;AACJI,QAAAA,KAAK,CAACC,IAAN,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WAA2C,GAAEL,CAAE,EAA/C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEF;AACL;;AACD,WAAOI,KAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKD,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAlDQd,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport './PlayArea.sass'\r\n\r\nfunction PlayArea(props) {\r\n\r\n    const playField = props.gameData.playField\r\n    const movingBrick = props.gameData.movingBrick\r\n    const baseLine = props.gameData.baseLine\r\n    const baseColumn = props.gameData.baseColumn\r\n\r\n    console.log(props.gameData.playField)\r\n    console.log(props.gameData.movingBrick)\r\n    console.log(props.gameData.baseLine)\r\n    console.log(props.gameData.baseColumn)\r\n\r\n    function compileDataToArr() {\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i < baseLine - 3 || i > baseLine) {\r\n                dataArray = dataArray.concat(playField[i])\r\n            } else {\r\n                for ( let a = 0; a < 10; a++ ) {\r\n                    if ( a < baseColumn || a > baseColumn + 3 ) {\r\n                        dataArray = dataArray.concat()\r\n                    }\r\n                }\r\n            }\r\n            // for (let a = 0; a < 10; a++ ) {\r\n            // }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        console.log(compileDataToArr())\r\n        let cells = []\r\n        for (let i = 40; i < 240; i++) {\r\n            if (props.gameData[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className='PlayArea__cell_full' key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;"]},"metadata":{},"sourceType":"module"}