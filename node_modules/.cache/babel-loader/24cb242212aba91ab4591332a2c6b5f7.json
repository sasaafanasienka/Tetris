{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\PlayArea\\\\PlayArea.js\";\nimport React from 'react';\nimport './PlayArea.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayArea(props) {\n  function checkMovingBlocks() {\n    return props.gameData.some(row => {\n      return row.includes(1);\n    });\n  } // if (!checkMovingBlocks()) {\n  //     console.log(1)\n  //     props.addNewBlock()\n  // }\n\n\n  function renderCells() {\n    let cells = [];\n\n    for (let i = 40; i < 240; i++) {\n      console.log(props.gameData[i]);\n\n      if (props.gameData[i] === 0) {\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayArea__cell\"\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this));\n      } else {\n        cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PlayArea__cell_full\"\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return cells;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayArea\",\n    children: renderCells()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PlayArea;\nexport default PlayArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayArea\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/PlayArea/PlayArea.js"],"names":["React","PlayArea","props","checkMovingBlocks","gameData","some","row","includes","renderCells","cells","i","console","log","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,WAASC,iBAAT,GAA6B;AACzB,WAAOD,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAqBC,GAAD,IAAS;AAChC,aAAOA,GAAG,CAACC,QAAJ,CAAa,CAAb,CAAP;AACH,KAFM,CAAP;AAGH,GANoB,CAQrB;AACA;AACA;AACA;;;AAEA,WAASC,WAAT,GAAuB;AACnB,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACE,QAAN,CAAeM,CAAf,CAAZ;;AACA,UAAIR,KAAK,CAACE,QAAN,CAAeM,CAAf,MAAsB,CAA1B,EAA6B;AACzBD,QAAAA,KAAK,CAACI,IAAN,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WAAsC,GAAEH,CAAE,EAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEF,OAHF,MAGQ;AACJD,QAAAA,KAAK,CAACI,IAAN,eACI;AAAK,UAAA,SAAS,EAAC;AAAf,WAA2C,GAAEH,CAAE,EAA/C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAEF;AACL;;AACD,WAAOD,KAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKD,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAjCQP,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport './PlayArea.sass'\r\n\r\nfunction PlayArea(props) {\r\n\r\n    function checkMovingBlocks() {\r\n        return props.gameData.some((row) => {\r\n            return row.includes(1)\r\n        })\r\n    }\r\n\r\n    // if (!checkMovingBlocks()) {\r\n    //     console.log(1)\r\n    //     props.addNewBlock()\r\n    // }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        for (let i = 40; i < 240; i++) {\r\n            console.log(props.gameData[i])\r\n            if (props.gameData[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className='PlayArea__cell_full' key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;"]},"metadata":{},"sourceType":"module"}