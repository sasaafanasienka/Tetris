{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyArea from '../../constants/emptyArea';\nimport newBlock from '../../gameEvents/blockGen';\nimport Move from '../../userEvents/Move';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\n\nfunction Main() {\n  _s();\n\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    document.addEventListener(\"keypress\", changeOnArea);\n    return () => {\n      document.removeEventListener(\"keypress\", changeOnArea);\n    };\n  });\n  const firstArea = newBlock(emptyArea);\n  const [area, changeArea] = useState(firstArea);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      changeArea(area => moveDown.move(area));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function changeOnArea(event) {\n    if (event.code === 'Numpad5') {\n      changeArea(moveDown.move(area));\n    } else if (event.code === 'Numpad4') {\n      changeArea(moveLeft.move(area));\n    } else if (event.code === 'Numpad6') {\n      changeArea(moveRight.move(area));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    onKeyPress: changeOnArea,\n    children: /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: area\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"EF6cAcE3BbLcFRkLMgiWix7CAQs=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyArea","newBlock","Move","MoveDown","MoveRight","MoveLeft","moveDown","moveRight","moveLeft","Main","seconds","setSeconds","document","addEventListener","changeOnArea","removeEventListener","firstArea","area","changeArea","interval","setInterval","move","clearInterval","event","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;AACA,MAAMI,SAAS,GAAG,IAAIH,SAAJ,EAAlB;AACA,MAAMI,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;;AAEA,SAASI,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,YAAtC;AACA,WAAO,MAAM;AACbF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,UAA7B,EAAyCD,YAAzC;AACC,KAFD;AAGH,GALQ,CAAT;AAOA,QAAME,SAAS,GAAGf,QAAQ,CAACD,SAAD,CAA1B;AACA,QAAM,CAAEiB,IAAF,EAAQC,UAAR,IAAuBrB,QAAQ,CAACmB,SAAD,CAArC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BF,MAAAA,UAAU,CAACD,IAAI,IAAIX,QAAQ,CAACe,IAAT,CAAcJ,IAAd,CAAT,CAAV;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMK,aAAa,CAACH,QAAD,CAA1B;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,WAASL,YAAT,CAAsBS,KAAtB,EAA6B;AACzB,QAAIA,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AAC1BN,MAAAA,UAAU,CAACZ,QAAQ,CAACe,IAAT,CAAcJ,IAAd,CAAD,CAAV;AACH,KAFD,MAEO,IAAIM,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACjCN,MAAAA,UAAU,CAACV,QAAQ,CAACa,IAAT,CAAcJ,IAAd,CAAD,CAAV;AACH,KAFM,MAEA,IAAIM,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACjCN,MAAAA,UAAU,CAACX,SAAS,CAACc,IAAV,CAAeJ,IAAf,CAAD,CAAV;AACH;AACJ;;AAED,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,UAAU,EAAEH,YAAnC;AAAA,2BAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GArCQR,I;;KAAAA,I;AAuCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyArea from '../../constants/emptyArea'\r\nimport newBlock from '../../gameEvents/blockGen'\r\nimport Move from '../../userEvents/Move'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\n\r\nfunction Main() {\r\n\r\n    const [seconds, setSeconds] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener(\"keypress\", changeOnArea);\r\n        return () => {\r\n        document.removeEventListener(\"keypress\", changeOnArea);\r\n        }\r\n    })\r\n\r\n    const firstArea = newBlock(emptyArea)\r\n    const [ area, changeArea ] = useState(firstArea)\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            changeArea(area => moveDown.move(area));\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n  \r\n    function changeOnArea(event) {\r\n        if (event.code === 'Numpad5') {\r\n            changeArea(moveDown.move(area))\r\n        } else if (event.code === 'Numpad4') {\r\n            changeArea(moveLeft.move(area))\r\n        } else if (event.code === 'Numpad6') {\r\n            changeArea(moveRight.move(area))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main className=\"Main\" onKeyPress={changeOnArea}>\r\n        {/* <main className=\"Main\"> */}\r\n            <PlayArea gameData={area}/>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}