{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nexport default class Rotate extends React.Component {\n  makeEmptyBrick(brickSize) {\n    let empty;\n\n    for (let a = 0; i < brickSize; i++) {\n      for (let a = 0; a < brickSize; a++) {}\n    }\n  }\n\n  move(current) {\n    const playField = current.playField;\n    const movingBrick = current.movingBrick;\n    const baseLine = current.baseLine;\n    const baseColumn = current.baseColumn;\n    const brickSize = current.movingBrick.length;\n\n    for (let i = brickSize - 1; i >= 0; i--) {\n      for (let a = 0; a < brickSize; a++) {}\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/Rotate.js"],"names":["React","useState","useEffect","Rotate","Component","makeEmptyBrick","brickSize","empty","a","i","move","current","playField","movingBrick","baseLine","baseColumn","length"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAEhDC,EAAAA,cAAc,CAACC,SAAD,EAAY;AACtB,QAAIC,KAAJ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBC,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAChC,WAAM,IAAID,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGF,SAArB,EAAgCE,CAAC,EAAjC,EAAqC,CAEpC;AACJ;AAEJ;;AAEDE,EAAAA,IAAI,CAACC,OAAD,EAAU;AACV,UAAMC,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,UAAMC,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAzB;AACA,UAAMC,UAAU,GAAGJ,OAAO,CAACI,UAA3B;AACA,UAAMT,SAAS,GAAGK,OAAO,CAACE,WAAR,CAAoBG,MAAtC;;AAGA,SAAM,IAAIP,CAAC,GAAGH,SAAS,GAAG,CAA1B,EAA6BG,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA2C;AACvC,WAAM,IAAID,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGF,SAArB,EAAgCE,CAAC,EAAjC,EAAsC,CAErC;AACJ;AACJ;;AAzB+C","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default class Rotate extends React.Component {\r\n\r\n    makeEmptyBrick(brickSize) {\r\n        let empty\r\n        for (let a = 0; i < brickSize; i++) {\r\n            for ( let a = 0; a < brickSize; a++) {\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    move(current) {\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn\r\n        const brickSize = current.movingBrick.length\r\n\r\n        \r\n        for ( let i = brickSize - 1; i >= 0; i-- ) {\r\n            for ( let a = 0; a < brickSize; a++ ) {\r\n\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}