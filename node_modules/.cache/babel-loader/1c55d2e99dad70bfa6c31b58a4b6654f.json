{"ast":null,"code":"import React, { useState, useEffect } from 'react'; // import addNewBlock from '../gameEvents/addNewBlock';\n\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveDown extends React.Component {\n  stopBlock(currentArea) {\n    let newArea = [];\n\n    for (let i = 0; i < 240; i++) {\n      if (!currentArea[row].includes(1)) {\n        newArea.push(currentArea[row]);\n      } else {\n        let newRow = [];\n        currentArea[row].forEach(el => {\n          if (el === 1) {\n            newRow.push(2);\n          } else {\n            newRow.push(el);\n          }\n        });\n        newArea.push(newRow);\n      }\n    }\n\n    return newArea;\n  }\n\n  move(currentArea) {\n    let newArea = [];\n    let stoppedBlocks = currentArea.map(el => {\n      return el === 2 ? el = 2 : el = 0;\n    });\n    let movingBlocks = currentArea.map(el => {\n      return el === 1 ? el = 1 : el = 0;\n    });\n\n    for (let i = 0; i < 10; i++) {\n      const deleteLastElem = movingBlocks.pop();\n\n      if (deleteLastElem === 1) {\n        return this.stopBlock(currentArea);\n      }\n    }\n\n    for (let i = 0; i < 10; i++) {\n      movingBlocks.unshift(0);\n    }\n\n    for (let i = 0; i < 240; i++) {\n      const sum = stoppedBlocks[i] + movingBlocks[i];\n\n      if (sum < 2) {\n        newArea.push(sum);\n      } else {\n        return this.stopBlock(currentArea);\n      }\n    }\n\n    return newArea;\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveDown.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveDown","Component","stopBlock","currentArea","newArea","i","row","includes","push","newRow","forEach","el","move","stoppedBlocks","map","movingBlocks","deleteLastElem","pop","unshift","sum"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,SAAS,CAACC,WAAD,EAAc;AACnB,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAI,CAACF,WAAW,CAACG,GAAD,CAAX,CAAiBC,QAAjB,CAA0B,CAA1B,CAAL,EAAmC;AAC/BH,QAAAA,OAAO,CAACI,IAAR,CAAaL,WAAW,CAACG,GAAD,CAAxB;AACH,OAFD,MAEO;AACH,YAAIG,MAAM,GAAG,EAAb;AACAN,QAAAA,WAAW,CAACG,GAAD,CAAX,CAAiBI,OAAjB,CAA0BC,EAAD,IAAQ;AAC7B,cAAIA,EAAE,KAAK,CAAX,EAAc;AACVF,YAAAA,MAAM,CAACD,IAAP,CAAY,CAAZ;AACH,WAFD,MAEO;AACHC,YAAAA,MAAM,CAACD,IAAP,CAAYG,EAAZ;AACH;AACJ,SAND;AAOAP,QAAAA,OAAO,CAACI,IAAR,CAAaC,MAAb;AACH;AACJ;;AACD,WAAOL,OAAP;AACH;;AAEDQ,EAAAA,IAAI,CAACT,WAAD,EAAc;AACd,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIS,aAAa,GAAGV,WAAW,CAACW,GAAZ,CAAiBH,EAAD,IAAQ;AACxC,aAAOA,EAAE,KAAK,CAAP,GAAWA,EAAE,GAAG,CAAhB,GAAoBA,EAAE,GAAG,CAAhC;AACH,KAFmB,CAApB;AAGA,QAAII,YAAY,GAAGZ,WAAW,CAACW,GAAZ,CAAiBH,EAAD,IAAQ;AACvC,aAAOA,EAAE,KAAK,CAAP,GAAWA,EAAE,GAAG,CAAhB,GAAoBA,EAAE,GAAG,CAAhC;AACH,KAFkB,CAAnB;;AAGA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,YAAMW,cAAc,GAAGD,YAAY,CAACE,GAAb,EAAvB;;AACA,UAAID,cAAc,KAAK,CAAvB,EAA0B;AACtB,eAAO,KAAKd,SAAL,CAAeC,WAAf,CAAP;AACH;AACJ;;AACD,SAAM,IAAIE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BU,MAAAA,YAAY,CAACG,OAAb,CAAqB,CAArB;AACH;;AACD,SAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,YAAMc,GAAG,GAAGN,aAAa,CAACR,CAAD,CAAb,GAAmBU,YAAY,CAACV,CAAD,CAA3C;;AACA,UAAIc,GAAG,GAAG,CAAV,EAAa;AACTf,QAAAA,OAAO,CAACI,IAAR,CAAaW,GAAb;AACH,OAFD,MAEO;AACH,eAAO,KAAKjB,SAAL,CAAeC,WAAf,CAAP;AACH;AACJ;;AACD,WAAOC,OAAP;AACH;;AAhDiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import addNewBlock from '../gameEvents/addNewBlock';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveDown extends React.Component {\r\n\r\n    stopBlock(currentArea) {\r\n        let newArea = []\r\n        for (let i = 0; i < 240; i++) {\r\n            if (!currentArea[row].includes(1)) {\r\n                newArea.push(currentArea[row])\r\n            } else {\r\n                let newRow = []\r\n                currentArea[row].forEach((el) => {\r\n                    if (el === 1) {\r\n                        newRow.push(2)\r\n                    } else {\r\n                        newRow.push(el)\r\n                    }\r\n                })\r\n                newArea.push(newRow)\r\n            }\r\n        }\r\n        return newArea\r\n    }\r\n\r\n    move(currentArea) {\r\n        let newArea = []\r\n        let stoppedBlocks = currentArea.map((el) => {\r\n            return el === 2 ? el = 2 : el = 0\r\n        })\r\n        let movingBlocks = currentArea.map((el) => {\r\n            return el === 1 ? el = 1 : el = 0\r\n        })\r\n        for (let i = 0; i < 10; i++) {\r\n            const deleteLastElem = movingBlocks.pop()\r\n            if (deleteLastElem === 1) {\r\n                return this.stopBlock(currentArea)\r\n            }\r\n        }\r\n        for ( let i = 0; i < 10; i++) {\r\n            movingBlocks.unshift(0)\r\n        }\r\n        for (let i = 0; i < 240; i++) {\r\n            const sum = stoppedBlocks[i] + movingBlocks[i]\r\n            if (sum < 2) {\r\n                newArea.push(sum)\r\n            } else {\r\n                return this.stopBlock(currentArea)\r\n            }\r\n        }\r\n        return newArea\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}