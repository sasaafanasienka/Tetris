{"ast":null,"code":"import scoreTable from '../constants/scoreTable';\nimport randomBlock from '../utilits/randomBlock';\nexport default function addNewBrick(current) {\n  if (current.nextBrick.length === 0) {\n    let movingBrick = randomBlock();\n    let nextBrick = randomBlock();\n    return {};\n  }\n\n  const newBrick = randomBlock();\n  let nextBrick = current.nextBrick;\n  let newNextBrick;\n\n  if (nextBrick.length === 0) {\n    newNextBrick = randomBlock();\n  }\n\n  return {\n    playField: current.playField,\n    movingBrick: newBrick.brick,\n    baseLine: current.baseLine,\n    baseColumn: newBrick.baseColumn,\n    nextBrick: current.nextBrick,\n    nextBaseColumn: current.nextBaseColumn,\n    score: current.score,\n    speed: current.speed\n  };\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/gameEvents/addNewBrick.js"],"names":["scoreTable","randomBlock","addNewBrick","current","nextBrick","length","movingBrick","newBrick","newNextBrick","playField","brick","baseLine","baseColumn","nextBaseColumn","score","speed"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAEzC,MAAIA,OAAO,CAACC,SAAR,CAAkBC,MAAlB,KAA6B,CAAjC,EAAmC;AAC/B,QAAIC,WAAW,GAAGL,WAAW,EAA7B;AACA,QAAIG,SAAS,GAAGH,WAAW,EAA3B;AACA,WAAO,EAAP;AAGH;;AAED,QAAMM,QAAQ,GAAGN,WAAW,EAA5B;AAEA,MAAIG,SAAS,GAAGD,OAAO,CAACC,SAAxB;AACA,MAAII,YAAJ;;AACA,MAAIJ,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxBG,IAAAA,YAAY,GAAGP,WAAW,EAA1B;AACH;;AAED,SAAO;AACHQ,IAAAA,SAAS,EAAEN,OAAO,CAACM,SADhB;AAEHH,IAAAA,WAAW,EAAEC,QAAQ,CAACG,KAFnB;AAGHC,IAAAA,QAAQ,EAAER,OAAO,CAACQ,QAHf;AAIHC,IAAAA,UAAU,EAAEL,QAAQ,CAACK,UAJlB;AAKHR,IAAAA,SAAS,EAAED,OAAO,CAACC,SALhB;AAMHS,IAAAA,cAAc,EAAEV,OAAO,CAACU,cANrB;AAOHC,IAAAA,KAAK,EAAEX,OAAO,CAACW,KAPZ;AAQHC,IAAAA,KAAK,EAAEZ,OAAO,CAACY;AARZ,GAAP;AAUH","sourcesContent":["import scoreTable from '../constants/scoreTable'\r\nimport randomBlock from '../utilits/randomBlock'\r\n\r\nexport default function addNewBrick(current) {\r\n\r\n    if (current.nextBrick.length === 0){\r\n        let movingBrick = randomBlock()\r\n        let nextBrick = randomBlock()\r\n        return {\r\n            \r\n        }\r\n    }\r\n\r\n    const newBrick = randomBlock()\r\n    \r\n    let nextBrick = current.nextBrick\r\n    let newNextBrick\r\n    if (nextBrick.length === 0) {\r\n        newNextBrick = randomBlock()\r\n    }\r\n\r\n    return {\r\n        playField: current.playField,\r\n        movingBrick: newBrick.brick,\r\n        baseLine: current.baseLine,\r\n        baseColumn: newBrick.baseColumn,\r\n        nextBrick: current.nextBrick,\r\n        nextBaseColumn: current.nextBaseColumn,\r\n        score: current.score,\r\n        speed: current.speed,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}