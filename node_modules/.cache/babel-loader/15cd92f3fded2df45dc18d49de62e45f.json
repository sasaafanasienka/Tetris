{"ast":null,"code":"import React, { useState, useEffect } from 'react'; // import addNewBlock from '../gameEvents/addNewBlock';\n\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveDown extends React.Component {\n  // stopBlock(currentState) {\n  //     let newArea = []\n  //     for (let i = 0; i < 240; i++) {\n  //         if (currentState[i] === 1) {\n  //             newArea.push(2)\n  //         } else {\n  //             newArea.push(currentState[i])\n  //         }\n  //     }\n  //     return newArea\n  // }\n  move(current) {\n    return {\n      playField: current.playField,\n      movingBrick: current.movingBrick,\n      baseLine: current.baseLine + 1,\n      baseColumn: current.baseColumn,\n      score: current.score,\n      speed: current.speed\n    };\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveDown.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveDown","Component","move","current","playField","movingBrick","baseLine","baseColumn","score","speed"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,IAAI,CAACC,OAAD,EAAU;AAIV,WAAO;AACHC,MAAAA,SAAS,EAAED,OAAO,CAACC,SADhB;AAEHC,MAAAA,WAAW,EAAEF,OAAO,CAACE,WAFlB;AAGHC,MAAAA,QAAQ,EAAEH,OAAO,CAACG,QAAR,GAAmB,CAH1B;AAIHC,MAAAA,UAAU,EAAEJ,OAAO,CAACI,UAJjB;AAKHC,MAAAA,KAAK,EAAEL,OAAO,CAACK,KALZ;AAMHC,MAAAA,KAAK,EAAEN,OAAO,CAACM;AANZ,KAAP;AAQH;;AA1BiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import addNewBlock from '../gameEvents/addNewBlock';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveDown extends React.Component {\r\n\r\n    // stopBlock(currentState) {\r\n    //     let newArea = []\r\n    //     for (let i = 0; i < 240; i++) {\r\n    //         if (currentState[i] === 1) {\r\n    //             newArea.push(2)\r\n    //         } else {\r\n    //             newArea.push(currentState[i])\r\n    //         }\r\n    //     }\r\n    //     return newArea\r\n    // }\r\n\r\n    move(current) {\r\n            \r\n\r\n\r\n        return {\r\n            playField: current.playField,\r\n            movingBrick: current.movingBrick,\r\n            baseLine: current.baseLine + 1,\r\n            baseColumn: current.baseColumn,\r\n            score: current.score,\r\n            speed: current.speed\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}