{"ast":null,"code":"import React, { useState, useEffect } from 'react'; // import addNewBlock from '../gameEvents/addNewBlock';\n\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveDown extends React.Component {\n  stopBlock(currentArea) {\n    let newArea = [];\n\n    for (let row = 0; row < 24; row++) {\n      if (!currentArea[row].includes(1)) {\n        newArea.push(currentArea[row]);\n      } else {\n        let newRow = [];\n        currentArea[row].forEach(el => {\n          if (el === 1) {\n            newRow.push(2);\n          } else {\n            newRow.push(el);\n          }\n        });\n        newArea.push(newRow);\n      }\n    }\n\n    return newArea;\n  }\n\n  move(currentArea) {\n    console.log(currentArea);\n    let newArea = [];\n\n    for (let i = 239; i >= 0; i--) {\n      if (currentArea[i] !== 1) {\n        newArea.unshift(currentArea[i]);\n      } else {\n        if (currentArea[i + 10] === 0) {\n          new newArea.unshift(0);\n        }\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveDown.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveDown","Component","stopBlock","currentArea","newArea","row","includes","push","newRow","forEach","el","move","console","log","i","unshift"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,SAAS,CAACC,WAAD,EAAc;AACnB,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AAC/B,UAAI,CAACF,WAAW,CAACE,GAAD,CAAX,CAAiBC,QAAjB,CAA0B,CAA1B,CAAL,EAAmC;AAC/BF,QAAAA,OAAO,CAACG,IAAR,CAAaJ,WAAW,CAACE,GAAD,CAAxB;AACH,OAFD,MAEO;AACH,YAAIG,MAAM,GAAG,EAAb;AACAL,QAAAA,WAAW,CAACE,GAAD,CAAX,CAAiBI,OAAjB,CAA0BC,EAAD,IAAQ;AAC7B,cAAIA,EAAE,KAAK,CAAX,EAAc;AACVF,YAAAA,MAAM,CAACD,IAAP,CAAY,CAAZ;AACH,WAFD,MAEO;AACHC,YAAAA,MAAM,CAACD,IAAP,CAAYG,EAAZ;AACH;AACJ,SAND;AAOAN,QAAAA,OAAO,CAACG,IAAR,CAAaC,MAAb;AACH;AACJ;;AACD,WAAOJ,OAAP;AACH;;AAEDO,EAAAA,IAAI,CAACR,WAAD,EAAc;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIU,CAAC,GAAG,GAAb,EAAkBA,CAAC,IAAI,CAAvB,EAA0BA,CAAC,EAA3B,EAA+B;AAC3B,UAAIX,WAAW,CAACW,CAAD,CAAX,KAAmB,CAAvB,EAA0B;AACtBV,QAAAA,OAAO,CAACW,OAAR,CAAgBZ,WAAW,CAACW,CAAD,CAA3B;AACH,OAFD,MAEO;AACH,YAAIX,WAAW,CAACW,CAAC,GAAG,EAAL,CAAX,KAAwB,CAA5B,EAA+B;AAC3B,cACAV,OAAO,CAACW,OADR,CACgB,CADhB;AAEH;AACJ;AACJ;AACJ;;AAnCiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import addNewBlock from '../gameEvents/addNewBlock';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveDown extends React.Component {\r\n\r\n    stopBlock(currentArea) {\r\n        let newArea = []\r\n        for (let row = 0; row < 24; row++) {\r\n            if (!currentArea[row].includes(1)) {\r\n                newArea.push(currentArea[row])\r\n            } else {\r\n                let newRow = []\r\n                currentArea[row].forEach((el) => {\r\n                    if (el === 1) {\r\n                        newRow.push(2)\r\n                    } else {\r\n                        newRow.push(el)\r\n                    }\r\n                })\r\n                newArea.push(newRow)\r\n            }\r\n        }\r\n        return newArea\r\n    }\r\n\r\n    move(currentArea) {\r\n        console.log(currentArea)\r\n        let newArea = []\r\n        for (let i = 239; i >= 0; i--) {\r\n            if (currentArea[i] !== 1) {\r\n                newArea.unshift(currentArea[i])\r\n            } else {\r\n                if (currentArea[i + 10] === 0) {\r\n                    new\r\n                    newArea.unshift(0)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}