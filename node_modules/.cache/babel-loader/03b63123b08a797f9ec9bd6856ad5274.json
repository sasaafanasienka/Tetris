{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport '../../styles/button.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport emptyArea from '../../constants/emptyArea';\nimport testArea from '../../constants/testArea';\nimport addRandomBlock from '../../gameEvents/addRandomBlock';\nimport MoveDown from '../../blockMoves/MoveDown';\nimport MoveRight from '../../blockMoves/MoveRight';\nimport MoveLeft from '../../blockMoves/MoveLeft';\nimport Controls from '../Controls/Controls';\nimport Stat from '../Stat/Stat';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moveDown = new MoveDown();\nconst moveRight = new MoveRight();\nconst moveLeft = new MoveLeft();\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      area: emptyArea,\n      score: 0,\n      speed: 1000\n    };\n    this.startGame = this.startGame.bind(this);\n  }\n\n  startGame() {\n    const newArea = addRandomBlock(this.state.area);\n    this.setState({\n      area: newArea\n    });\n    console.log(this);\n  } // setInterval(blockMove)\n  // newPromise\n  //     .then(function(value) {\n  //         setArea(value)\n  //     })\n  //     .catch(function(value) {\n  //         setArea(value)\n  //     })\n  // const newArea = addNewBlock(area)\n  // console.log(newArea)\n  // setArea(newArea)\n  // setArea(addNewBlock(area))\n  // setScore(500)\n  // document.addEventListener(\"keypress\", pressButton)\n  // interval = setInterval(() => {\n  //     changeArea(area => moveDown.move1(area));\n  // }, 1000);\n  // function pressButton(event) {\n  //     if (event.code === 'Numpad5') {\n  //         changeArea(moveDown.move1(area))\n  //     } else if (event.code === 'Numpad4') {\n  //         changeArea(moveLeft.move(area))\n  //     } else if (event.code === 'Numpad6') {\n  //         changeArea(moveRight.move(area))\n  //     } else if (event.code === 'Numpad1') {\n  //         changeArea(addNewBlock(emptyArea))\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(Stat, {\n        score: this.state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayArea, {\n        gameData: this.state.area\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        startGame: this.startGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","emptyArea","testArea","addRandomBlock","MoveDown","MoveRight","MoveLeft","Controls","Stat","render","moveDown","moveRight","moveLeft","Main","Component","constructor","props","state","area","score","speed","startGame","bind","newArea","setState","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAO,0BAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAG,IAAIN,QAAJ,EAAjB;AACA,MAAMO,SAAS,GAAG,IAAIN,SAAJ,EAAlB;AACA,MAAMO,QAAQ,GAAG,IAAIN,QAAJ,EAAjB;;AAEA,MAAMO,IAAN,SAAmBhB,KAAK,CAACiB,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEjB,SADG;AAETkB,MAAAA,KAAK,EAAE,CAFE;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAMA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDD,EAAAA,SAAS,GAAG;AACR,UAAME,OAAO,GAAGpB,cAAc,CAAC,KAAKc,KAAL,CAAWC,IAAZ,CAA9B;AACA,SAAKM,QAAL,CAAc;AAACN,MAAAA,IAAI,EAAEK;AAAP,KAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,GAlB8B,CAmB3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAjB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAE,KAAKG;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA1D8B;;AA6DnC,eAAeR,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyArea from '../../constants/emptyArea'\r\nimport testArea from '../../constants/testArea'\r\nimport addRandomBlock from '../../gameEvents/addRandomBlock'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport { render } from '@testing-library/react';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            area: emptyArea,\r\n            score: 0,\r\n            speed: 1000\r\n        }\r\n\r\n        this.startGame = this.startGame.bind(this)\r\n    }\r\n\r\n    startGame() {\r\n        const newArea = addRandomBlock(this.state.area)\r\n        this.setState({area: newArea})\r\n        console.log(this)\r\n    }\r\n        // setInterval(blockMove)\r\n\r\n        // newPromise\r\n        //     .then(function(value) {\r\n        //         setArea(value)\r\n        //     })\r\n        //     .catch(function(value) {\r\n        //         setArea(value)\r\n        //     })\r\n        // const newArea = addNewBlock(area)\r\n        // console.log(newArea)\r\n        // setArea(newArea)\r\n        // setArea(addNewBlock(area))\r\n        // setScore(500)\r\n        // document.addEventListener(\"keypress\", pressButton)\r\n        // interval = setInterval(() => {\r\n        //     changeArea(area => moveDown.move1(area));\r\n        // }, 1000);\r\n  \r\n    // function pressButton(event) {\r\n    //     if (event.code === 'Numpad5') {\r\n    //         changeArea(moveDown.move1(area))\r\n    //     } else if (event.code === 'Numpad4') {\r\n    //         changeArea(moveLeft.move(area))\r\n    //     } else if (event.code === 'Numpad6') {\r\n    //         changeArea(moveRight.move(area))\r\n    //     } else if (event.code === 'Numpad1') {\r\n    //         changeArea(addNewBlock(emptyArea))\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"Main\">\r\n                <Stat score={this.state.score}/>\r\n                <PlayArea gameData={this.state.area}/>\r\n                <Controls startGame={this.startGame}/>\r\n            </main>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}