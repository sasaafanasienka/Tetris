{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\03-tetris\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.sass';\nimport PlayArea from '../PlayArea/PlayArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  let emptyArea = {};\n  const columns = 10;\n  const rows = 20;\n\n  for (let i = 0; i < rows; i++) {\n    emptyArea[i] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  }\n\n  React.useEffect(() => {\n    document.addEventListener(\"keypress\", changeOnArea);\n    return () => {\n      document.removeEventListener(\"keypress\", changeOnArea);\n    };\n  });\n  const [area, changeArea] = useState({\n    array: emptyArea\n  });\n\n  function changeOnArea(event) {\n    if (event.code === 'Numpad8') {\n      let newArea = area.array;\n      let oldCell = newArea.indexOf(1);\n      newArea[oldCell] = 0;\n      newArea[oldCell - 10] = 1;\n      changeArea({\n        array: newArea\n      });\n    } else if (event.code === 'Numpad5') {\n      let newArea = area.array;\n      let oldCell = newArea.indexOf(1);\n      newArea[oldCell] = 0;\n      newArea[oldCell + 10] = 1;\n      changeArea({\n        array: newArea\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Main\",\n    onKeyPress: changeOnArea,\n    children: /*#__PURE__*/_jsxDEV(PlayArea, {\n      gameData: area.array\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"NRlkrL+2bb1zfT+4G3rKHz+TXko=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","PlayArea","Main","emptyArea","columns","rows","i","document","addEventListener","changeOnArea","removeEventListener","area","changeArea","array","event","code","newArea","oldCell","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,MAAIC,SAAS,GAAG,EAAhB;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAApB,EAA0BC,CAAC,EAA3B,EAA+B;AAC3BH,IAAAA,SAAS,CAACG,CAAD,CAAT,GAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAf;AACH;;AAIDR,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClBO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,YAAtC;AACA,WAAO,MAAM;AACbF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,UAA7B,EAAyCD,YAAzC;AACC,KAFD;AAGH,GALD;AAOA,QAAM,CAAEE,IAAF,EAAQC,UAAR,IAAuBb,QAAQ,CAAC;AAACc,IAAAA,KAAK,EAAEV;AAAR,GAAD,CAArC;;AAEA,WAASM,YAAT,CAAsBK,KAAtB,EAA6B;AACzB,QAAIA,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AAC1B,UAAIC,OAAO,GAAGL,IAAI,CAACE,KAAnB;AACA,UAAII,OAAO,GAAGD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAd;AACAF,MAAAA,OAAO,CAACC,OAAD,CAAP,GAAmB,CAAnB;AACAD,MAAAA,OAAO,CAACC,OAAO,GAAG,EAAX,CAAP,GAAwB,CAAxB;AACAL,MAAAA,UAAU,CAAC;AAACC,QAAAA,KAAK,EAAEG;AAAR,OAAD,CAAV;AACH,KAND,MAMO,IAAIF,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACjC,UAAIC,OAAO,GAAGL,IAAI,CAACE,KAAnB;AACA,UAAII,OAAO,GAAGD,OAAO,CAACE,OAAR,CAAgB,CAAhB,CAAd;AACAF,MAAAA,OAAO,CAACC,OAAD,CAAP,GAAmB,CAAnB;AACAD,MAAAA,OAAO,CAACC,OAAO,GAAG,EAAX,CAAP,GAAwB,CAAxB;AACAL,MAAAA,UAAU,CAAC;AAACC,QAAAA,KAAK,EAAEG;AAAR,OAAD,CAAV;AACH;AACJ;;AAED,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,UAAU,EAAEP,YAAnC;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEE,IAAI,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzCQX,I;;KAAAA,I;AA2CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Main.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\n\r\nfunction Main() {\r\n    \r\n    let emptyArea = {}\r\n    const columns = 10\r\n    const rows = 20\r\n    for (let i = 0; i < rows; i++) {\r\n        emptyArea[i] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n\r\n    \r\n    \r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keypress\", changeOnArea);\r\n        return () => {\r\n        document.removeEventListener(\"keypress\", changeOnArea);\r\n        }\r\n    })\r\n\r\n    const [ area, changeArea ] = useState({array: emptyArea})\r\n\r\n    function changeOnArea(event) {\r\n        if (event.code === 'Numpad8') {\r\n            let newArea = area.array;\r\n            let oldCell = newArea.indexOf(1)\r\n            newArea[oldCell] = 0\r\n            newArea[oldCell - 10] = 1\r\n            changeArea({array: newArea})\r\n        } else if (event.code === 'Numpad5') {\r\n            let newArea = area.array;\r\n            let oldCell = newArea.indexOf(1)\r\n            newArea[oldCell] = 0\r\n            newArea[oldCell + 10] = 1\r\n            changeArea({array: newArea})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main className=\"Main\" onKeyPress={changeOnArea}>\r\n            <PlayArea gameData={area.array}/>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}