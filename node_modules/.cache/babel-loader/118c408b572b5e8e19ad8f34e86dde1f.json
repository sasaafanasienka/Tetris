{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveLeft extends React.Component {\n  doNotMove(current) {\n    return current;\n  }\n\n  move(current) {\n    const playField = current.playField;\n    const movingBrick = current.movingBrick;\n    const baseLine = current.baseLine + 1;\n    const baseColumn = current.baseColumn;\n    const brickSideLength = current.movingBrick.length;\n    console.log(playField);\n\n    if (baseLine > 23) {\n      return this.stopBlock(current);\n    } else {\n      for (let i = 0; i < brickSideLength; i++) {\n        for (let a = 0; a < brickSideLength; a++) {\n          // console.log(`${movingBrick[i][a]} + ${playField[i + baseLine - brickSideLength + 1][a + baseColumn]}`)\n          if (movingBrick[i][a] === 1 && playField[i + baseLine - brickSideLength + 1][a + baseColumn] === 2) {\n            //было - длина стороны\n            return this.stopBlock(current);\n          }\n        }\n      }\n    }\n\n    return {\n      playField: current.playField,\n      movingBrick: current.movingBrick,\n      baseLine: current.baseLine,\n      baseColumn: current.baseColumn - 1,\n      score: current.score,\n      speed: current.speed\n    };\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveLeft.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveLeft","Component","doNotMove","current","move","playField","movingBrick","baseLine","baseColumn","brickSideLength","length","console","log","stopBlock","i","a","score","speed"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AACf,WAAOA,OAAP;AACH;;AAGGC,EAAAA,IAAI,CAACD,OAAD,EAAU;AAClB,UAAME,SAAS,GAAGF,OAAO,CAACE,SAA1B;AACA,UAAMC,WAAW,GAAGH,OAAO,CAACG,WAA5B;AACA,UAAMC,QAAQ,GAAGJ,OAAO,CAACI,QAAR,GAAmB,CAApC;AACA,UAAMC,UAAU,GAAGL,OAAO,CAACK,UAA3B;AACA,UAAMC,eAAe,GAAGN,OAAO,CAACG,WAAR,CAAoBI,MAA5C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;;AAEA,QAAIE,QAAQ,GAAG,EAAf,EAAmB;AACf,aAAO,KAAKM,SAAL,CAAeV,OAAf,CAAP;AACH,KAFD,MAEO;AACH,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,eAApB,EAAqCK,CAAC,EAAtC,EAA2C;AACvC,aAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGN,eAArB,EAAsCM,CAAC,EAAvC,EAA4C;AACxC;AACA,cAAIT,WAAW,CAACQ,CAAD,CAAX,CAAeC,CAAf,MAAsB,CAAtB,IAA2BV,SAAS,CAACS,CAAC,GAAGP,QAAJ,GAAeE,eAAf,GAAiC,CAAlC,CAAT,CAA8CM,CAAC,GAAGP,UAAlD,MAAkE,CAAjG,EAAoG;AAAG;AACnG,mBAAO,KAAKK,SAAL,CAAeV,OAAf,CAAP;AACH;AACJ;AACJ;AACJ;;AACG,WAAO;AACHE,MAAAA,SAAS,EAAEF,OAAO,CAACE,SADhB;AAEHC,MAAAA,WAAW,EAAEH,OAAO,CAACG,WAFlB;AAGHC,MAAAA,QAAQ,EAAEJ,OAAO,CAACI,QAHf;AAIHC,MAAAA,UAAU,EAAEL,OAAO,CAACK,UAAR,GAAqB,CAJ9B;AAKHQ,MAAAA,KAAK,EAAEb,OAAO,CAACa,KALZ;AAMHC,MAAAA,KAAK,EAAEd,OAAO,CAACc;AANZ,KAAP;AAQH;;AAnCiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveLeft extends React.Component {\r\n\r\n    doNotMove(current) {\r\n        return current\r\n    }\r\n\r\n    \r\n        move(current) {\r\n    const playField = current.playField\r\n    const movingBrick = current.movingBrick\r\n    const baseLine = current.baseLine + 1\r\n    const baseColumn = current.baseColumn\r\n    const brickSideLength = current.movingBrick.length\r\n    console.log(playField)\r\n\r\n    if (baseLine > 23) {\r\n        return this.stopBlock(current) \r\n    } else {\r\n        for (let i = 0; i < brickSideLength; i++ ) {\r\n            for ( let a = 0; a < brickSideLength; a++ ) {\r\n                // console.log(`${movingBrick[i][a]} + ${playField[i + baseLine - brickSideLength + 1][a + baseColumn]}`)\r\n                if (movingBrick[i][a] === 1 && playField[i + baseLine - brickSideLength + 1][a + baseColumn] === 2) {  //было - длина стороны\r\n                    return this.stopBlock(current)\r\n                }\r\n            }\r\n        }\r\n    }\r\n        return {\r\n            playField: current.playField,\r\n            movingBrick: current.movingBrick,\r\n            baseLine: current.baseLine,\r\n            baseColumn: current.baseColumn - 1,\r\n            score: current.score,\r\n            speed: current.speed\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}