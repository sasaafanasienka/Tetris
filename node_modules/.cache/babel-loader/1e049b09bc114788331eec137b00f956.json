{"ast":null,"code":"import React, { useState, useEffect } from 'react'; // import addNewBlock from '../gameEvents/addNewBlock';\n\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveDown extends React.Component {\n  stopBlock(current) {\n    const playField = current.playField;\n    const movingBrick = current.movingBrick;\n    const baseLine = current.baseLine;\n    const baseColumn = current.baseColumn;\n    let dataArray = [];\n\n    for (let i = 0; i < 24; i++) {\n      if (i < baseLine - 3 || i > baseLine) {\n        //если в строке нет движущейся фигуры\n        dataArray = dataArray.concat(playField[i]); //то оставляем поле как есть\n      } else {\n        for (let a = 0; a < 10; a++) {\n          //если движущаяся фигура есть, начинаем првоерять по колонкам\n          if (a < baseColumn || a > baseColumn + 3) {\n            //если фигуры нет в колонках\n            dataArray = dataArray.concat(playField[i][a]); // тоже оставляем как есть\n          } else {\n            dataArray = dataArray.concat(movingBrick[i - baseLine + 3][a - baseColumn]); //тут данные поля заменяются данными движ фигруы\n          }\n        }\n      }\n    }\n\n    return dataArray;\n  }\n\n  move(current) {\n    if (current.baseLine === 24) {\n      return this.stopBlock(current);\n    }\n\n    return {\n      playField: current.playField,\n      movingBrick: current.movingBrick,\n      baseLine: current.baseLine + 1,\n      baseColumn: current.baseColumn,\n      score: current.score,\n      speed: current.speed\n    };\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveDown.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveDown","Component","stopBlock","current","playField","movingBrick","baseLine","baseColumn","dataArray","i","concat","a","move","score","speed"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAEf,UAAMC,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,UAAMC,WAAW,GAAGF,OAAO,CAACE,WAA5B;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAzB;AACA,UAAMC,UAAU,GAAGJ,OAAO,CAACI,UAA3B;AAEA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAIA,CAAC,GAAGH,QAAQ,GAAG,CAAf,IAAoBG,CAAC,GAAGH,QAA5B,EAAsC;AAAE;AACpCE,QAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBN,SAAS,CAACK,CAAD,CAA1B,CAAZ,CADkC,CACS;AAC9C,OAFD,MAEO;AACH,aAAM,IAAIE,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA+B;AAAE;AAC7B,cAAKA,CAAC,GAAGJ,UAAJ,IAAkBI,CAAC,GAAGJ,UAAU,GAAG,CAAxC,EAA4C;AAAE;AAC1CC,YAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBN,SAAS,CAACK,CAAD,CAAT,CAAaE,CAAb,CAAjB,CAAZ,CADwC,CACO;AAClD,WAFD,MAEO;AACHH,YAAAA,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAiBL,WAAW,CAACI,CAAC,GAAGH,QAAJ,GAAe,CAAhB,CAAX,CAA8BK,CAAC,GAAGJ,UAAlC,CAAjB,CAAZ,CADG,CACyE;AAC/E;AACJ;AACJ;AACJ;;AACD,WAAOC,SAAP;AACH;;AAEDI,EAAAA,IAAI,CAACT,OAAD,EAAU;AACV,QAAIA,OAAO,CAACG,QAAR,KAAqB,EAAzB,EAA6B;AACzB,aAAO,KAAKJ,SAAL,CAAeC,OAAf,CAAP;AACH;;AAED,WAAO;AACHC,MAAAA,SAAS,EAAED,OAAO,CAACC,SADhB;AAEHC,MAAAA,WAAW,EAAEF,OAAO,CAACE,WAFlB;AAGHC,MAAAA,QAAQ,EAAEH,OAAO,CAACG,QAAR,GAAmB,CAH1B;AAIHC,MAAAA,UAAU,EAAEJ,OAAO,CAACI,UAJjB;AAKHM,MAAAA,KAAK,EAAEV,OAAO,CAACU,KALZ;AAMHC,MAAAA,KAAK,EAAEX,OAAO,CAACW;AANZ,KAAP;AAQH;;AAvCiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import addNewBlock from '../gameEvents/addNewBlock';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveDown extends React.Component {\r\n\r\n    stopBlock(current) {\r\n\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn\r\n\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i < baseLine - 3 || i > baseLine) { //если в строке нет движущейся фигуры\r\n                dataArray = dataArray.concat(playField[i]) //то оставляем поле как есть\r\n            } else {\r\n                for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                    if ( a < baseColumn || a > baseColumn + 3 ) { //если фигуры нет в колонках\r\n                        dataArray = dataArray.concat(playField[i][a])  // тоже оставляем как есть\r\n                    } else {\r\n                        dataArray = dataArray.concat(movingBrick[i - baseLine + 3][a - baseColumn]) //тут данные поля заменяются данными движ фигруы\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    move(current) {\r\n        if (current.baseLine === 24) {\r\n            return this.stopBlock(current)\r\n        }\r\n\r\n        return {\r\n            playField: current.playField,\r\n            movingBrick: current.movingBrick,\r\n            baseLine: current.baseLine + 1,\r\n            baseColumn: current.baseColumn,\r\n            score: current.score,\r\n            speed: current.speed\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}