{"ast":null,"code":"import _slicedToArray from\"D:/FrontEnd/03-tetris/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import'./Main.sass';import'../../styles/button.sass';import PlayArea from'../PlayArea/PlayArea';import emptyField from'../../constants/emptyField';import MoveDown from'../../blockMoves/MoveDown';import MoveRight from'../../blockMoves/MoveRight';import MoveLeft from'../../blockMoves/MoveLeft';import Controls from'../Controls/Controls';import Stat from'../Stat/Stat';import Queue from'../Queue/Queue';import gameProcess from'../GameProcess/GameProcess';import Rotate from'../../blockMoves/Rotate';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var moveDown=new MoveDown();var moveRight=new MoveRight();var moveLeft=new MoveLeft();var rotate=new Rotate();function Main(){var _useState=useState({playField:emptyField(),movingBrick:[],baseLine:3,baseColumn:3,nextBrick:[],nextBaseColumn:3,score:0,record:localStorage.getItem('record'),bricksCount:0}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),intervalID=_useState4[0],setMoveInterval=_useState4[1];var _useState5=useState('stopped'),_useState6=_slicedToArray(_useState5,2),gameStatus=_useState6[0],setGameStatus=_useState6[1];function nextStep(){setState(function(state){return gameProcess(state,stopGame,intervalID);});}function startGame(){window.addEventListener('keydown',keyActions);setMoveInterval(setInterval(nextStep,1000));}function stopGame(){window.removeEventListener('keydown',keyActions);clearInterval(intervalID);}var keyActions=useCallback(function(event){//хук useCallBack]\nif(event.code==='Numpad5'){setState(function(state){return moveDown.move(state);});}else if(event.code==='Numpad4'){setState(function(state){return moveLeft.move(state);});}else if(event.code==='Numpad6'){setState(function(state){return moveRight.move(state);});}else if(event.code==='Numpad8'){setState(function(state){return rotate.move(state);});}},[]);return/*#__PURE__*/_jsxs(\"main\",{className:\"Main\",children:[/*#__PURE__*/_jsx(Stat,{score:state.score,record:state.record}),/*#__PURE__*/_jsx(PlayArea,{gameData:state}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Controls,{startGame:startGame,stopGame:stopGame,status:gameStatus}),/*#__PURE__*/_jsx(Queue,{gameData:state})]})]});}export default Main;","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/components/Main/Main.js"],"names":["React","useState","useEffect","useCallback","PlayArea","emptyField","MoveDown","MoveRight","MoveLeft","Controls","Stat","Queue","gameProcess","Rotate","moveDown","moveRight","moveLeft","rotate","Main","playField","movingBrick","baseLine","baseColumn","nextBrick","nextBaseColumn","score","record","localStorage","getItem","bricksCount","state","setState","intervalID","setMoveInterval","gameStatus","setGameStatus","nextStep","stopGame","startGame","window","addEventListener","keyActions","setInterval","removeEventListener","clearInterval","event","code","move"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyField from '../../constants/emptyField'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport Queue from '../Queue/Queue'\r\nimport gameProcess from '../GameProcess/GameProcess'\r\nimport Rotate from '../../blockMoves/Rotate';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\nconst rotate = new Rotate()\r\n\r\nfunction Main() {\r\n\r\n    const [state, setState ] = useState(\r\n        {\r\n            playField: emptyField(),\r\n            movingBrick: [],\r\n            baseLine: 3,\r\n            baseColumn: 3,\r\n            nextBrick: [],\r\n            nextBaseColumn: 3,\r\n            score: 0,\r\n            record: localStorage.getItem('record'),\r\n            bricksCount: 0\r\n        }\r\n    )\r\n\r\n    const [ intervalID, setMoveInterval ] = useState()\r\n    const [ gameStatus, setGameStatus ] = useState('stopped')\r\n\r\n    function nextStep() {\r\n        setState(state => gameProcess(state, stopGame, intervalID))\r\n    }\r\n\r\n    function startGame() {\r\n        window.addEventListener('keydown', keyActions)\r\n        setMoveInterval(\r\n            setInterval(nextStep, 1000)\r\n            )\r\n        }\r\n        \r\n    function stopGame() {\r\n        window.removeEventListener('keydown', keyActions)\r\n        clearInterval(intervalID)\r\n    }\r\n\r\n    const keyActions = useCallback((event) => { //хук useCallBack]\r\n        if (event.code === 'Numpad5') {\r\n            setState(state => moveDown.move(state))\r\n        } else if (event.code === 'Numpad4') {\r\n            setState(state => moveLeft.move(state))\r\n        } else if (event.code === 'Numpad6') {\r\n            setState(state => moveRight.move(state))\r\n        }  else if (event.code === 'Numpad8') {\r\n            setState(state => rotate.move(state))\r\n        }       \r\n    }, [])\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={state.score} record={state.record}/>\r\n            <PlayArea gameData={state}/>\r\n            <div>\r\n                <Controls startGame={startGame} stopGame={stopGame} status={gameStatus}/>\r\n                <Queue gameData={state}/>\r\n            </div>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}