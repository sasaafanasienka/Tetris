{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport DataTransform from './DataTransform';\nlet dataTransform = new DataTransform();\nexport default class MoveLeft extends React.Component {\n  doNotMove(current) {\n    return current;\n  }\n\n  move(current) {\n    const playField = current.playField;\n    const movingBrick = current.movingBrick;\n    const baseLine = current.baseLine;\n    const baseColumn = current.baseColumn + 1;\n    const brickSize = current.movingBrick.length;\n    console.log(playField);\n    console.log(baseColumn + brickSize);\n\n    if (baseColumn + brickSize >= 10) {\n      for (let i = 0; i < brickSize; i++) {\n        for (let a = 9 - baseColumn + brickSize; a < 9 - baseColumn; a--) {\n          if (movingBrick[i][a] === 1) {\n            return this.doNotMove(current);\n          }\n        }\n      }\n    }\n\n    return {\n      playField: playField,\n      movingBrick: movingBrick,\n      baseLine: baseLine,\n      baseColumn: baseColumn,\n      score: current.score,\n      speed: current.speed\n    };\n  }\n\n}","map":{"version":3,"sources":["D:/FrontEnd/03-tetris/src/blockMoves/MoveRight.js"],"names":["React","useState","useEffect","DataTransform","dataTransform","MoveLeft","Component","doNotMove","current","move","playField","movingBrick","baseLine","baseColumn","brickSize","length","console","log","i","a","score","speed"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,IAAIC,aAAa,GAAG,IAAID,aAAJ,EAApB;AAEA,eAAe,MAAME,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAElDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AACf,WAAOA,OAAP;AACH;;AAEDC,EAAAA,IAAI,CAACD,OAAD,EAAU;AAEV,UAAME,SAAS,GAAGF,OAAO,CAACE,SAA1B;AACA,UAAMC,WAAW,GAAGH,OAAO,CAACG,WAA5B;AACA,UAAMC,QAAQ,GAAGJ,OAAO,CAACI,QAAzB;AACA,UAAMC,UAAU,GAAGL,OAAO,CAACK,UAAR,GAAqB,CAAxC;AACA,UAAMC,SAAS,GAAGN,OAAO,CAACG,WAAR,CAAoBI,MAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,GAAGC,SAAzB;;AAEA,QAAID,UAAU,GAAGC,SAAb,IAA0B,EAA9B,EAAkC;AAC9B,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,EAAhC,EAAoC;AAEhC,aAAK,IAAIC,CAAC,GAAG,IAAIN,UAAJ,GAAiBC,SAA9B,EAAyCK,CAAC,GAAG,IAAIN,UAAjD,EAA6DM,CAAC,EAA9D,EAAkE;AAC9D,cAAGR,WAAW,CAACO,CAAD,CAAX,CAAeC,CAAf,MAAsB,CAAzB,EAA4B;AACxB,mBAAO,KAAKZ,SAAL,CAAeC,OAAf,CAAP;AACH;AACJ;AACJ;AACJ;;AAED,WAAO;AACHE,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,WAAW,EAAEA,WAFV;AAGHC,MAAAA,QAAQ,EAAEA,QAHP;AAIHC,MAAAA,UAAU,EAAEA,UAJT;AAKHO,MAAAA,KAAK,EAAEZ,OAAO,CAACY,KALZ;AAMHC,MAAAA,KAAK,EAAEb,OAAO,CAACa;AANZ,KAAP;AAQH;;AApCiD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTransform from './DataTransform'\r\nlet dataTransform = new DataTransform()\r\n\r\nexport default class MoveLeft extends React.Component {\r\n\r\n    doNotMove(current) {\r\n        return current\r\n    }\r\n\r\n    move(current) {\r\n\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn + 1\r\n        const brickSize = current.movingBrick.length\r\n        console.log(playField)\r\n\r\n        console.log(baseColumn + brickSize)\r\n\r\n        if (baseColumn + brickSize >= 10) {\r\n            for (let i = 0; i < brickSize; i++) {\r\n                \r\n                for (let a = 9 - baseColumn + brickSize; a < 9 - baseColumn; a--) {\r\n                    if(movingBrick[i][a] === 1) {\r\n                        return this.doNotMove(current) \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            playField: playField,\r\n            movingBrick: movingBrick,\r\n            baseLine: baseLine,\r\n            baseColumn: baseColumn,\r\n            score: current.score,\r\n            speed: current.speed\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}