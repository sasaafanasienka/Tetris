{"version":3,"sources":["constants/colors.js","logo.svg","components/PlayArea/PlayArea.js","images/start.svg","images/pause.svg","components/Controls/Controls.js","components/Stat/Stat.js","components/Queue/Queue.js","constants/blockExamples.js","utilits/randomBrick.js","redux/types.js","redux/actions/addNewBrick.js","checks/freePlaceToMove.js","redux/actions/generateNextBrick.js","components/GameProcess/nextStep.js","redux/actions/removeFullRows.js","redux/actions/updateScore.js","redux/actions/countRows.js","redux/actions/moveDown.js","redux/actions/mountBrick.js","redux/actions/addNewBrickFromNext.js","components/GameProcess/autoStep.js","components/Main/Main.js","redux/actions/moveLeft.js","redux/actions/moveRight.js","redux/actions/rotate.js","App.js","redux/reducers/brickReducer.js","redux/reducers/gameStatusReducer.js","redux/reducers/levelReducer.js","redux/reducers/nextBrickReducer.js","redux/reducers/playAreaReducer.js","redux/reducers/scoreReducer.js","redux/rootReducer.js","index.js"],"names":["colors","1","2","3","4","5","6","7","11","12","13","14","15","16","17","PlayArea","props","playArea","useSelector","state","currentBrick","brick","baseLine","baseColumn","brickSideLength","length","className","cells","data","dataArray","i","concat","a","compileDataToArr","push","renderCells","Controls","gameStatus","startClassName","startFunction","startGame","pauseClassName","pauseFunction","stopGame","onClick","src","start","pause","Stat","currentScore","score","currentRecord","record","currentLevel","level","Queue","nextBrick","undefined","blockExamples","0","random","maxNumber","rand","Math","floor","rotate","brickSize","rotatedBrick","newRow","every","el","unshift","randomBrick","newBrick","newBrickSize","ceil","ADD_NEW_BRICK","ADD_NEW_BRICK_FROM_NEXT","REMOVE_BRICK","MOVE_DOWN","MOVE_LEFT","MOVE_RIGHT","ROTATE","GENERATE_NEXT_BRICK","MOUNT_BRICK","REMOVE_FULL_ROWS","CLEAR_AREA","UPDATE_SCORE","CLEAR_SCORE","GAME_START","GAME_PAUSE","GAME_FINISH","COUNT_ROWS","CLEAR_LEVEL","addNewBrick","type","payload","freePlaceToMove","direction","includes","generateNextBrick","nextStep","store","getState","levelObj","fullRowsQuantity","filter","elem","slice","some","dispatch","fullRowsQuan","newplayArea","Array","fill","removeFullRows","rows","newScore","newRecord","localStorage","setItem","updateScore","rowsToAdd","currentRows","newLevel","newSpeed","sin","PI","speed","countRows","moveDown","movingBrick","newPlayArea","mountBrick","addNewBrickFromNext","autoStep","setTimeout","Main","useDispatch","keyActions","useCallback","event","code","preventDefault","offset","moveLeft","moveRight","newBaseColumn","window","addEventListener","removeEventListener","App","getItem","initialBrick","initialStatus","initialLevel","initialArea","initialScore","rootReducer","combineReducers","action","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29b5e17d.chunk.js","sourcesContent":["const colors = {\r\n    1: 'yellow',\r\n    2: 'lightBlue',\r\n    3: 'darkBlue',\r\n    4: 'orange',\r\n    5: 'red',\r\n    6: 'green',\r\n    7: 'purple',\r\n    11: 'yellow',\r\n    12: 'lightBlue',\r\n    13: 'darkBlue',\r\n    14: 'orange',\r\n    15: 'red',\r\n    16: 'green',\r\n    17: 'purple',\r\n}\r\n\r\nexport default colors","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport './PlayArea.sass'\r\nimport colors from '../../constants/colors'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction PlayArea(props) {\r\n\r\n    const playArea = useSelector(state => {return state.playArea})\r\n    const currentBrick = useSelector(state => {return state.brick})\r\n    const brick = currentBrick.brick\r\n    const baseLine = currentBrick.baseLine\r\n    const baseColumn = currentBrick.baseColumn\r\n    const brickSideLength = brick.length\r\n\r\n    function compileDataToArr() { //сложнючая функция, которая устанавливает фигуру на поле и преобразует все это в единый массив\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i <= baseLine - brickSideLength || i > baseLine) { //если в строке нет движущейся фигуры\r\n                dataArray = dataArray.concat(playArea[i]) //то оставляем поле как есть\r\n            } else {\r\n                for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                    if ( a < baseColumn || a >= baseColumn + brickSideLength ) { //если фигуры нет в колонках\r\n                        dataArray = dataArray.concat(playArea[i][a])  // тоже оставляем как есть\r\n                    } else {\r\n                        dataArray = dataArray.concat(brick[i - baseLine + brickSideLength - 1][a - baseColumn] + playArea[i][a]) //тут данные поля заменяются данными движ фигруы\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 40; i < 240; i++) {\r\n            if (data[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className={`PlayArea__cell_${colors[data[i]]}`} key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;","export default __webpack_public_path__ + \"static/media/start.0d813cbe.svg\";","export default __webpack_public_path__ + \"static/media/pause.b545dedf.svg\";","import React from 'react';\r\nimport './Controls.sass'\r\nimport start from '../../images/start.svg'\r\nimport pause from '../../images/pause.svg'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Controls(props) {\r\n\r\n    const gameStatus = useSelector(state => {return state.gameStatus})\r\n\r\n    let startClassName = (gameStatus === 'inProgress') ? 'button button_unactive' : 'button button_active'\r\n    let startFunction = (gameStatus === 'inProgress') ? null : props.startGame\r\n    let pauseClassName = (gameStatus === 'inProgress') ? 'button button_active' : 'button button_unactive'\r\n    let pauseFunction = (gameStatus === 'inProgress') ? props.stopGame : null\r\n\r\n    return(\r\n        <div className='Controls'>\r\n            <button className={startClassName} onClick={startFunction}>\r\n                <img src={start}></img>\r\n            </button>\r\n            <button className={pauseClassName} onClick={pauseFunction}>\r\n                <img src={pause}></img>\r\n            </button>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Controls;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Stat.sass'\r\n\r\nfunction Stat() {\r\n\r\n    const currentScore = useSelector(state => {return state.score.score})\r\n    const currentRecord = useSelector(state => {return state.score.record})\r\n    const currentLevel = useSelector(state => {return state.level.level})\r\n\r\n    return(\r\n        <div className='Stat'>\r\n            <p className='Stat__title'>SCORE:</p>\r\n            <p className='Stat__score'>{currentScore}</p>\r\n            <p className='Stat__title'>BEST:</p>\r\n            <p className='Stat__score'>{currentRecord}</p>\r\n            <p className='Stat__title'>SPEED:</p>\r\n            <p className='Stat__score'>{currentLevel}</p>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Stat;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport colors from '../../constants/colors'\r\nimport './Queue.sass'\r\n\r\nfunction Queue() {\r\n\r\n    const nextBrick = useSelector(state => {return state.nextBrick.brick})\r\n   \r\n    function compileDataToArr() { \r\n        let dataArray = []\r\n        for ( let i = 0; i < 4; i++) {\r\n            for (let a = 0; a < 4; a++) {\r\n                if (!nextBrick[i] || !nextBrick[i][a]) {\r\n                    dataArray.push(0)\r\n                } else {\r\n                    dataArray.push(nextBrick[i][a])\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 0; i < 16; i++) {\r\n            if (data[i] === 0 || data[i] === undefined) {\r\n                cells.push(\r\n                    <div className='Queue__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className={`Queue__cell_${colors[data[i]]}`} key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className='Queue'>\r\n            <p className='Queue__title'>NEXT:</p>\r\n            <div className='Queue__item'>\r\n                {renderCells()}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Queue;","const blockExamples = {\r\n//O\r\n    0:  [[1,1],[1,1]],\r\n//I \r\n    1:  [[0, 0, 0, 0],[0, 0, 0, 0],[0, 0, 0, 0],[2, 2, 2, 2]],\r\n//J\r\n    2:  [[0,3,0],[0,3,0],[3,3,0]],\r\n//L\r\n    3:  [[4,0,0],[4,0,0],[4,4,0]],\r\n//Z\r\n    4: [[0,0,0],[5,5,0],[0,5,5]],\r\n//S\r\n    5: [[0,0,0],[0,6,6],[6,6,0]],\r\n//T\r\n    6: [[0,0,0],[7,7,7],[0,7,0]],\r\n}\r\n\r\nexport default blockExamples","import blockExamples from '../constants/blockExamples'\r\n\r\nfunction random(maxNumber) {\r\n    let rand = Math.random() * (maxNumber + 1);\r\n    return Math.floor(rand);\r\n}\r\n\r\nfunction rotate(brick) {\r\n\r\n    let brickSize = brick.length\r\n    let rotatedBrick = []\r\n        \r\n    for ( let i = 0; i < brickSize; i++ ) {\r\n        let newRow = []\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            newRow.push(brick[brickSize - a - 1][i])\r\n        }\r\n        if (newRow.every((el) => { return el === 0 })) {\r\n            rotatedBrick.unshift(newRow)\r\n        } else {\r\n            rotatedBrick.push(newRow)\r\n        }\r\n    }\r\n    return rotatedBrick\r\n}\r\n\r\nexport default function randomBrick() {\r\n\r\n    let newBrick = blockExamples[random(6)] //сперва генерируем рандомно одну из 7 фигур\r\n    for (let i = 0; i < random(3); i++ ) { //потом рандомно крутим фигуру от 0 до 3 раз\r\n        newBrick = rotate(newBrick)\r\n    }\r\n    const newBrickSize = newBrick.length\r\n\r\n    return {\r\n        brick: newBrick,\r\n        baseLine: 3,\r\n        baseColumn: Math.ceil((10 - newBrickSize) / 2)\r\n    }\r\n}","//Brick reducers\r\nexport const ADD_NEW_BRICK = 'ADD_NEW_BRICK'\r\nexport const ADD_NEW_BRICK_FROM_NEXT = 'ADD_NEW_BRICK_FROM_NEXT'\r\nexport const REMOVE_BRICK = 'REMOVE_BRICK'\r\nexport const MOVE_DOWN = 'MOVE_DOWN'\r\nexport const MOVE_LEFT = 'MOVE_LEFT'\r\nexport const MOVE_RIGHT = 'MOVE_RIGHT'\r\nexport const ROTATE = 'ROTATE'\r\n\r\n//Next brick reducers\r\nexport const GENERATE_NEXT_BRICK = 'GENERATE_NEXT_BRICK'\r\n\r\n//Play area reducers\r\nexport const MOUNT_BRICK = 'MOUNT_BRICK'\r\nexport const REMOVE_FULL_ROWS = 'REMOVE_FULL_ROWS'\r\nexport const CLEAR_AREA = 'CLEAR_AREA'\r\n\r\n//Score reucers\r\nexport const UPDATE_SCORE = 'UPDATE_SCORE' \r\nexport const CLEAR_SCORE = 'CLEAR_SCORE' \r\n\r\n//Status reducers\r\nexport const GAME_START = 'GAME_START'\r\nexport const GAME_PAUSE = 'GAME_PAUSE'\r\nexport const GAME_FINISH = 'GAME_FINISH'\r\n\r\n//Level reducers\r\nexport const COUNT_ROWS = 'COUNT_ROWS'\r\nexport const CLEAR_LEVEL = 'CLEAR_LEVEL'","import randomBrick from \"../../utilits/randomBrick\";\r\nimport { ADD_NEW_BRICK } from \"../types\";\r\n\r\nexport const addNewBrick = () => {\r\n    return {\r\n        type: ADD_NEW_BRICK,\r\n        payload: randomBrick()\r\n    }\r\n}","import { store } from '../index'\r\n\r\nexport default function freePlaceToMove( direction, playArea, brick, baseLine, baseColumn ) {\r\n\r\n    const brickSize = brick.length\r\n\r\n    if (direction === 'down' && baseLine >= 24) { return false }\r\n\r\n    if ( direction === 'left' ) {\r\n        if (baseColumn < 0) {\r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = 0; a < baseColumn * -1; a++) {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i][a])) {\r\n                        return false \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( direction === 'right' ) {\r\n        if (baseColumn + brickSize > 10) { \r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = brickSize - 1; a > 9 - baseColumn; a--) {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i][a])) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < brickSize; i++ ) {\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            if ([1,2,3,4,5,6,7].includes(brick[i][a]) && [11,12,13,14,15,16,17].includes(playArea[i + baseLine - brickSize + 1][a + baseColumn])) {  \r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    return true\r\n}","import randomBrick from \"../../utilits/randomBrick\";\r\nimport { GENERATE_NEXT_BRICK } from \"../types\";\r\n\r\nexport const generateNextBrick = () => {\r\n    return {\r\n        type: GENERATE_NEXT_BRICK,\r\n        payload: randomBrick()\r\n    }\r\n}","import { store } from '../../index'\r\nimport { addNewBrick } from '../../redux/actions/addNewBrick'\r\nimport { addNewBrickFromNext } from '../../redux/actions/addNewBrickFromNext'\r\nimport { moveDown } from '../../redux/actions/moveDown'\r\nimport { mountBrick } from '../../redux/actions/mountBrick';\r\nimport freePlaceToMove from '../../checks/freePlaceToMove';\r\nimport removeFullRows from '../../redux/actions/removeFullRows';\r\nimport { generateNextBrick } from '../../redux/actions/generateNextBrick';\r\nimport { updateScore } from '../../redux/actions/updateScore';\r\nimport { countRows } from '../../redux/actions/countRows';\r\nimport { GAME_FINISH } from '../../redux/types';\r\n\r\nexport default function nextStep() {\r\n    const playArea = store.getState().playArea\r\n    const brick = store.getState().brick\r\n    const nextBrick = store.getState().nextBrick\r\n    const score = store.getState().score.score\r\n    const record = store.getState().score.record\r\n    const levelObj = store.getState().level\r\n\r\n    const fullRowsQuantity = playArea.filter(elem => elem.every((el) => { return el > 10 })).length\r\n\r\n    // Проверка на проигрыш\r\n    if (playArea.slice(0,4).some(elem => {return elem.some(el => {return el !== 0})})) { \r\n        store.dispatch({type: GAME_FINISH})\r\n        return\r\n    }\r\n\r\n    // Проверка есть ли движущийся кирпич в данный момент\r\n    if (brick.brick.length === 0) {\r\n        store.dispatch(addNewBrick())\r\n        store.dispatch(generateNextBrick())\r\n        return\r\n    } \r\n    \r\n    // Проверка, есть ли заполненные ряды\r\n    if (fullRowsQuantity > 0) {\r\n        store.dispatch(removeFullRows(playArea, fullRowsQuantity))\r\n        store.dispatch(updateScore(fullRowsQuantity, score, record))\r\n        store.dispatch(countRows(fullRowsQuantity, levelObj))\r\n    } else {\r\n        if (freePlaceToMove('down', playArea, brick.brick, brick.baseLine + 1, brick.baseColumn)) {\r\n            store.dispatch(moveDown())\r\n        } else {\r\n            store.dispatch(mountBrick(playArea, brick))\r\n            if (nextBrick.brick.length === 0) {\r\n                store.dispatch(addNewBrick())\r\n                store.dispatch(generateNextBrick())\r\n            } else {\r\n                store.dispatch(addNewBrickFromNext(nextBrick))\r\n                store.dispatch(generateNextBrick())\r\n            }\r\n        }\r\n    }\r\n}","import { REMOVE_FULL_ROWS } from \"../types\"\r\n\r\nexport default function removeFullRows(playArea, fullRowsQuan) {\r\n\r\n    let newplayArea = playArea.filter(elem => elem.some((el) => { return el <= 10 }))\r\n    newplayArea = new Array(fullRowsQuan).fill([0,0,0,0,0,0,0,0,0,0]).concat(newplayArea)\r\n\r\n    return {\r\n        type: REMOVE_FULL_ROWS,\r\n        payload: newplayArea,\r\n    }\r\n}","import { UPDATE_SCORE } from \"../types\";\r\n\r\nexport const updateScore = (rows, score, record) => {\r\n\r\n    const scoreTable = [0, 5, 10, 20, 40]\r\n    const increase = scoreTable[rows]\r\n    const newScore = score + increase\r\n    let newRecord = record\r\n    if (newScore > record) {\r\n        newRecord = newScore\r\n        localStorage.setItem('record', newRecord)\r\n    }\r\n\r\n    return {\r\n        type: UPDATE_SCORE,\r\n        payload: {\r\n            score: newScore,\r\n            record: newRecord\r\n        }\r\n    }\r\n}","import { COUNT_ROWS } from \"../types\";\r\n\r\nexport const countRows = (rowsToAdd, levelObj) => {\r\n\r\n    const currentRows = levelObj.rows\r\n    const newLevel = levelObj.level < 10 ? 1 + Math.floor((currentRows + rowsToAdd) / 15) : levelObj.level\r\n    const newSpeed = newLevel !== levelObj.level ? \r\n        800 - Math.floor((Math.sin(Math.PI/2 - Math.PI/18 * (10 - newLevel))) * 650) : //синусоидная зависимость скорости от уровня\r\n        levelObj.speed\r\n\r\n    return {\r\n        type: COUNT_ROWS,\r\n        payload: {\r\n            rows: currentRows + rowsToAdd,\r\n            level: newLevel,\r\n            speed: newSpeed\r\n        }\r\n    }\r\n}","import { MOVE_DOWN } from \"../types\";\r\nimport {store} from '../../index'\r\n\r\nexport const moveDown = () => {\r\n    const brick = store.getState().brick\r\n\r\n    return {\r\n        type: MOVE_DOWN,\r\n        payload: {\r\n            brick: brick.brick,\r\n            baseLine: brick.baseLine + 1,\r\n            baseColumn: brick.baseColumn\r\n        }\r\n    }\r\n}","import { MOUNT_BRICK } from \"../types\";\r\n\r\nexport const mountBrick = (playArea, movingBrick) => {\r\n\r\n    const brick = movingBrick.brick\r\n    const baseLine = movingBrick.baseLine\r\n    const baseColumn = movingBrick.baseColumn\r\n    const brickSize = brick.length\r\n\r\n    let newPlayArea = []\r\n    for ( let i = 0; i < 24; i++) {\r\n        if (i <= baseLine - brickSize || i > baseLine) { //если в строке нет движущейся фигуры\r\n            newPlayArea.push(playArea[i]) //то оставляем поле как есть\r\n        } else {\r\n            let newRow = []\r\n            for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                if ( a < baseColumn || a >= baseColumn + brickSize ) { //если фигуры нет в колонках\r\n                    newRow.push(playArea[i][a])  // тоже оставляем как есть\r\n                } else {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i - baseLine + brickSize - 1][a - baseColumn])) { //тут данные поля заменяются данными движ фигруы\r\n                        newRow.push(brick[i - baseLine + brickSize - 1][a - baseColumn] + 10)\r\n                    } else {\r\n                        newRow.push(playArea[i][a])\r\n                    }\r\n                }\r\n            }\r\n            newPlayArea.push(newRow)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: MOUNT_BRICK,\r\n        payload: newPlayArea\r\n    }\r\n}","import { ADD_NEW_BRICK_FROM_NEXT } from \"../types\";\r\n\r\nexport const addNewBrickFromNext = (nextBrick) => {\r\n    return {\r\n        type: ADD_NEW_BRICK_FROM_NEXT,\r\n        payload: nextBrick\r\n    }\r\n}","import {store} from '../../index' \r\nimport nextStep from './nextStep'\r\n\r\nexport function autoStep() {\r\n\r\n    const gameStatus = store.getState().gameStatus\r\n\r\n    if (gameStatus === 'paused') { \r\n        return\r\n    }\r\n\r\n    const speed = store.getState().level.speed\r\n\r\n    nextStep()\r\n    if (gameStatus === 'inProgress') {\r\n        setTimeout(autoStep, speed)\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport Queue from '../Queue/Queue'\r\nimport gameProcess from '../GameProcess/nextStep'\r\nimport { moveLeft } from '../../redux/actions/moveLeft';\r\nimport { moveRight } from '../../redux/actions/moveRight';\r\nimport { rotate } from '../../redux/actions/rotate';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CLEAR_AREA, CLEAR_SCORE, GAME_PAUSE, GAME_START, CLEAR_LEVEL } from '../../redux/types';\r\nimport nextStep from '../GameProcess/nextStep';\r\nimport { autoStep } from '../GameProcess/autoStep';\r\n\r\nfunction Main() {\r\n\r\n    const dispatch = useDispatch()\r\n    const gameStatus = useSelector(state => { return state.gameStatus })\r\n\r\n    function startGame() {\r\n        window.addEventListener('keydown', keyActions)\r\n        if (gameStatus === 'paused') {\r\n            dispatch({type: GAME_START})\r\n        } else if (gameStatus === 'finished') {\r\n            dispatch({type: CLEAR_AREA})\r\n            dispatch({type: CLEAR_SCORE})\r\n            dispatch({type: CLEAR_LEVEL})\r\n            dispatch({type: GAME_START})\r\n        }\r\n        autoStep()\r\n    }\r\n    \r\n    function stopGame() {\r\n        window.removeEventListener('keydown', keyActions)\r\n        dispatch({type: GAME_PAUSE})\r\n    }\r\n\r\n    const keyActions = useCallback((event) => { //хук useCallBack\r\n        if (event.code === 'Numpad5' || event.code === 'ArrowDown' || event.code === 'KeyS') {\r\n            event.preventDefault()\r\n            nextStep()\r\n        } else if (event.code === 'Numpad4' || event.code === 'ArrowLeft' || event.code === 'KeyA') {\r\n            event.preventDefault()\r\n            dispatch(moveLeft())\r\n        } else if (event.code === 'Numpad6' || event.code === 'ArrowRight' || event.code === 'KeyD') {\r\n            event.preventDefault()\r\n            dispatch(moveRight())\r\n        }  else if (event.code === 'Numpad8' || event.code === 'ArrowUp' || event.code === 'KeyW') {\r\n            event.preventDefault()\r\n            dispatch(rotate())\r\n        }        \r\n    }, [])\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <PlayArea />\r\n            <div className=\"Main__controls-panel\">\r\n                <Stat />       \r\n                <Controls startGame={startGame} stopGame={stopGame} />\r\n                <Queue />\r\n            </div>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;","import { MOVE_LEFT } from \"../types\";\r\nimport {store} from '../../index'\r\nimport freePlaceToMove from \"../../checks/freePlaceToMove\";\r\n\r\nexport const moveLeft = () => {\r\n    const brick = store.getState().brick\r\n    const playArea = store.getState().playArea\r\n    const offset = freePlaceToMove('left', playArea, brick.brick, brick.baseLine, brick.baseColumn - 1) ? -1 : 0\r\n    return {\r\n        type: MOVE_LEFT,\r\n        payload: {\r\n            brick: brick.brick,\r\n            baseLine: brick.baseLine,\r\n            baseColumn: brick.baseColumn + offset\r\n        }\r\n    }\r\n}","import { MOVE_RIGHT } from \"../types\";\r\nimport {store} from '../../index'\r\nimport freePlaceToMove from \"../../checks/freePlaceToMove\";\r\n\r\nexport const moveRight = () => {\r\n    const brick = store.getState().brick\r\n    const playArea = store.getState().playArea\r\n    const offset = freePlaceToMove('right', playArea, brick.brick, brick.baseLine, brick.baseColumn + 1) ? 1 : 0\r\n    return {\r\n        type: MOVE_RIGHT,\r\n        payload: {\r\n            brick: brick.brick,\r\n            baseLine: brick.baseLine,\r\n            baseColumn: brick.baseColumn + offset\r\n        }\r\n    }\r\n}","import { ROTATE } from \"../types\";\r\nimport {store} from '../../index'\r\n\r\nexport const rotate = () => {\r\n    const movingBrick = store.getState().brick\r\n\r\n    const brick = movingBrick.brick\r\n    const baseColumn = movingBrick.baseColumn\r\n    const brickSize = brick.length\r\n\r\n    let newBaseColumn = (baseColumn < 0) ? 0 :\r\n                        (baseColumn > 10 - brickSize) ? 10  - brickSize :\r\n                        baseColumn\r\n\r\n    let rotatedBrick = []\r\n    \r\n    for ( let i = 0; i < brickSize; i++ ) {\r\n        let newRow = []\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            newRow.push(brick[brickSize - a - 1][i])\r\n        }\r\n        if (newRow.every((el) => { return el === 0 })) {\r\n            rotatedBrick.unshift(newRow)\r\n        } else {\r\n            rotatedBrick.push(newRow)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: ROTATE,\r\n        payload: {\r\n            brick: rotatedBrick,\r\n            baseLine: movingBrick.baseLine,\r\n            baseColumn: newBaseColumn\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './components/Main/Main'\r\n\r\nfunction App() {\r\n\r\n  if (!localStorage.getItem('record')) {\r\n    localStorage.setItem('record', 0)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Main/>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_NEW_BRICK, \r\n    ADD_NEW_BRICK_FROM_NEXT, \r\n    MOVE_DOWN, \r\n    MOVE_LEFT, \r\n    MOVE_RIGHT, \r\n    REMOVE_BRICK, \r\n    ROTATE } from \"../types\"\r\n\r\nconst initialBrick = {\r\n    brick: [],\r\n    baseLine: 0,\r\n    baseColumn: 0\r\n}\r\n\r\nexport const brickReducer = (state = initialBrick, action) => {\r\n    switch(action.type) {\r\n        case ADD_NEW_BRICK:\r\n            return action.payload\r\n        case ADD_NEW_BRICK_FROM_NEXT:\r\n            return action.payload\r\n        case REMOVE_BRICK:\r\n            return initialBrick\r\n        case MOVE_DOWN:\r\n            return action.payload\r\n        case MOVE_LEFT:\r\n            return action.payload\r\n        case MOVE_RIGHT:\r\n            return action.payload\r\n        case ROTATE:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { GAME_FINISH, GAME_PAUSE, GAME_START } from \"../types\"\r\n\r\nconst initialStatus = 'paused'\r\n\r\nexport const gameStatusReducer = (state = initialStatus, action) => {\r\n    switch(action.type) {\r\n        case GAME_START:\r\n            return 'inProgress'\r\n        case GAME_PAUSE:\r\n            return 'paused'\r\n        case GAME_FINISH:\r\n            return 'finished'\r\n        default:\r\n            return state\r\n    }\r\n}","import { CLEAR_LEVEL, COUNT_ROWS } from \"../types\"\r\n\r\nconst initialLevel = {\r\n    rows: 0,\r\n    level: 1,\r\n    speed: 800\r\n}\r\n\r\nexport const levelReducer = (state = initialLevel, action) => {\r\n    switch(action.type) {\r\n        case COUNT_ROWS:\r\n            return action.payload\r\n        case CLEAR_LEVEL:\r\n            return initialLevel\r\n        default:\r\n            return state\r\n    }\r\n}","import randomBrick from \"../../utilits/randomBrick\"\r\nimport { GENERATE_NEXT_BRICK } from \"../types\"\r\n\r\nconst initialBrick = {\r\n    brick: [],\r\n    baseLine: 0,\r\n    baseColumn: 0,\r\n}\r\n\r\nexport const nextBrickReducer = (state = initialBrick, action) => {\r\n    switch(action.type) {\r\n        case GENERATE_NEXT_BRICK:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { CLEAR_AREA, MOUNT_BRICK, REMOVE_FULL_ROWS } from \"../types\"\r\n\r\nconst initialArea = new Array(24).fill([0,0,0,0,0,0,0,0,0,0])\r\n\r\nexport const playAreaReducer = (state = initialArea, action) => {\r\n    switch(action.type) {\r\n        case MOUNT_BRICK:\r\n            return action.payload\r\n        case CLEAR_AREA:\r\n            return initialArea\r\n        case REMOVE_FULL_ROWS:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { UPDATE_SCORE, CLEAR_SCORE } from \"../types\"\r\n\r\nconst initialScore = {\r\n    score: 0,\r\n    record: localStorage.getItem('record'),\r\n}\r\n\r\nexport const scoreReducer = (state = initialScore, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_SCORE:\r\n            return action.payload\r\n        case CLEAR_SCORE:\r\n            return initialScore\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { brickReducer } from \"./reducers/brickReducer\";\r\nimport { gameStatusReducer } from \"./reducers/gameStatusReducer\";\r\nimport { levelReducer } from \"./reducers/levelReducer\";\r\nimport { nextBrickReducer } from \"./reducers/nextBrickReducer\";\r\nimport { playAreaReducer } from \"./reducers/playAreaReducer\";\r\nimport { scoreReducer } from \"./reducers/scoreReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    playArea: playAreaReducer,\r\n    brick: brickReducer,\r\n    nextBrick: nextBrickReducer,\r\n    score: scoreReducer,\r\n    gameStatus: gameStatusReducer,\r\n    level: levelReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './redux/rootReducer';\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}