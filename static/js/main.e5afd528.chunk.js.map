{"version":3,"sources":["constants/colors.js","components/PlayArea/PlayArea.js","components/Controls/Controls.js","components/Stat/Stat.js","components/Queue/Queue.js","constants/blockExamples.js","utilits/randomBrick.js","redux/types.js","redux/actions/addNewBrick.js","checks/freePlaceToMove.js","redux/actions/generateNextBrick.js","redux/actions/updateScore.js","components/GameProcess/nextStep.js","redux/actions/removeFullRows.js","redux/actions/countRows.js","redux/actions/moveDown.js","redux/actions/mountBrick.js","redux/actions/addNewBrickFromNext.js","components/GameProcess/autoStep.js","components/Main/Main.js","redux/actions/moveLeft.js","redux/actions/moveRight.js","redux/actions/rotate.js","App.js","redux/reducers/brickReducer.js","redux/reducers/gameStatusReducer.js","redux/reducers/levelReducer.js","redux/reducers/nextBrickReducer.js","redux/reducers/playAreaReducer.js","redux/reducers/scoreReducer.js","redux/rootReducer.js","index.js"],"names":["colors","1","2","3","4","5","6","7","11","12","13","14","15","16","17","PlayArea","props","playArea","useSelector","state","currentBrick","brick","baseLine","baseColumn","brickSideLength","length","className","cells","data","dataArray","i","concat","a","compileDataToArr","push","renderCells","Controls","startGameFunc","stopGameFunc","gameStatus","onClick","version","id","xmlns","x","y","viewBox","points","width","height","Stat","score","record","scorePlus","recordPlus","scoreAnimation","recordAnimation","level","rows","style","Queue","nextBrick","undefined","blockExamples","0","random","maxNumber","rand","Math","floor","rotate","brickSize","rotatedBrick","newRow","every","el","unshift","randomBrick","newBrick","newBrickSize","ceil","ADD_NEW_BRICK","ADD_NEW_BRICK_FROM_NEXT","REMOVE_BRICK","MOVE_DOWN","MOVE_LEFT","MOVE_RIGHT","ROTATE","GENERATE_NEXT_BRICK","MOUNT_BRICK","REMOVE_FULL_ROWS","CLEAR_AREA","UPDATE_SCORE","START_ANIMATION","CLEAR_SCORE","GAME_START","GAME_PAUSE","GAME_FINISH","COUNT_ROWS","CLEAR_LEVEL","addNewBrick","type","payload","freePlaceToMove","direction","includes","generateNextBrick","updateScore","increase","newScore","newRecord","localStorage","setItem","startAnimation","recordIncrease","nextStep","store","getState","levelObj","fullRowsQuantity","filter","elem","slice","some","dispatch","fullRowsQuan","newplayArea","Array","fill","removeFullRows","setTimeout","asyncUpdateScore","rowsToAdd","currentRows","newLevel","newSpeed","sin","PI","speed","countRows","moveDown","movingBrick","newPlayArea","mountBrick","addNewBrickFromNext","autoStep","Main","useDispatch","keyActions","useCallback","event","code","preventDefault","offset","moveLeft","moveRight","newBaseColumn","window","addEventListener","removeEventListener","App","initialBrick","initialStatus","initialLevel","initialArea","initialScore","getItem","rootReducer","combineReducers","action","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5afd528.chunk.js","sourcesContent":["const colors = {\r\n    1: 'yellow',\r\n    2: 'lightBlue',\r\n    3: 'darkBlue',\r\n    4: 'orange',\r\n    5: 'red',\r\n    6: 'green',\r\n    7: 'purple',\r\n    11: 'yellow',\r\n    12: 'lightBlue',\r\n    13: 'darkBlue',\r\n    14: 'orange',\r\n    15: 'red',\r\n    16: 'green',\r\n    17: 'purple',\r\n}\r\n\r\nexport default colors","import React, { useState } from 'react';\r\nimport './PlayArea.sass'\r\nimport colors from '../../constants/colors'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction PlayArea(props) {\r\n\r\n    const playArea = useSelector(state => {return state.playArea})\r\n    const currentBrick = useSelector(state => {return state.brick})\r\n    const brick = currentBrick.brick\r\n    const baseLine = currentBrick.baseLine\r\n    const baseColumn = currentBrick.baseColumn\r\n    const brickSideLength = brick.length\r\n\r\n    function compileDataToArr() { //сложнючая функция, которая устанавливает фигуру на поле и преобразует все это в единый массив\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i <= baseLine - brickSideLength || i > baseLine) { //если в строке нет движущейся фигуры\r\n                dataArray = dataArray.concat(playArea[i]) //то оставляем поле как есть\r\n            } else {\r\n                for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                    if ( a < baseColumn || a >= baseColumn + brickSideLength ) { //если фигуры нет в колонках\r\n                        dataArray = dataArray.concat(playArea[i][a])  // тоже оставляем как есть\r\n                    } else {\r\n                        dataArray = dataArray.concat(brick[i - baseLine + brickSideLength - 1][a - baseColumn] + playArea[i][a]) //тут данные поля заменяются данными движ фигруы\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 40; i < 240; i++) {\r\n            if (data[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className={`PlayArea__cell_${colors[data[i]]}`} key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;","import React from 'react'\r\nimport './Controls.sass'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Controls = ({startGameFunc, stopGameFunc})  => {\r\n\r\n    const gameStatus = useSelector(state => { return state.gameStatus })\r\n\r\n    return(\r\n        <div className='controls'>\r\n            <button className='controls__button'\r\n                onClick={gameStatus === 'inProgress' ? stopGameFunc : startGameFunc}\r\n            >\r\n                {\r\n                    gameStatus !== 'inProgress' &&\r\n                    <svg version=\"1.1\" id=\"Слой_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                    viewBox=\"0 0 300 300\">\r\n                        <polygon className=\"st0\" points=\"224.9,150 94.4,74.7 94.4,225.3 \"/>\r\n                    </svg>\r\n                }\r\n                {\r\n                    gameStatus === 'inProgress' &&\r\n                    <svg version=\"1.1\" id=\"Слой_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 300 300\">\r\n                        <rect x=\"93.5\" y=\"84\" className=\"st0\" width=\"45\" height=\"132\"/>\r\n                        <rect x=\"161.5\" y=\"84\" className=\"st0\" width=\"45\" height=\"132\"/>\r\n                    </svg>\r\n                    \r\n                }\r\n            </button>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Controls;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Stat.sass'\r\n\r\nfunction Stat() {\r\n\r\n    const {\r\n        score,\r\n        record,\r\n        scorePlus,\r\n        recordPlus,\r\n        scoreAnimation,\r\n        recordAnimation\r\n    } = useSelector(state => { return state.score })\r\n    const { level, rows } = useSelector(state => { return state.level })\r\n\r\n    const getProgress = () => {\r\n        return `${(rows % 15) / 15 * 100}%`\r\n    }\r\n    \r\n    return(\r\n        <div className='Stat'>\r\n            <p className='Stat__title'>SCORE:</p>\r\n            <p className='Stat__score'>\r\n                <span className={`Stat__score-value ${scoreAnimation}`}>{score}</span>\r\n                <span className={`Stat__animate-plus ${scoreAnimation}`}> + </span>\r\n                <span className={`Stat__animate ${scoreAnimation}`}>{scorePlus}</span>\r\n            </p>\r\n            <p className='Stat__title'>BEST:</p>\r\n            <p className='Stat__score'>\r\n                <span className={`Stat__score-value ${recordAnimation}`}>{record}</span>\r\n                <span className={`Stat__animate-plus ${recordAnimation}`}> + </span>\r\n                <span className={`Stat__animate ${recordAnimation}`}>{recordPlus}</span>\r\n            </p>\r\n            <p className='Stat__title'>SPEED:</p>\r\n            <p className='Stat__score'>{level}</p>\r\n            <p className='Stat__title'>NEXT LEVEL:</p>\r\n            <div className='Stat__next-level-container'>\r\n                <div className='Stat__next-level-progress' style={{width: getProgress()}}></div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Stat;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport colors from '../../constants/colors'\r\nimport './Queue.sass'\r\n\r\nfunction Queue() {\r\n\r\n    const nextBrick = useSelector(state => {return state.nextBrick.brick})\r\n   \r\n    function compileDataToArr() { \r\n        let dataArray = []\r\n        for ( let i = 0; i < 4; i++) {\r\n            for (let a = 0; a < 4; a++) {\r\n                if (!nextBrick[i] || !nextBrick[i][a]) {\r\n                    dataArray.push(0)\r\n                } else {\r\n                    dataArray.push(nextBrick[i][a])\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 0; i < 16; i++) {\r\n            if (data[i] === 0 || data[i] === undefined) {\r\n                cells.push(\r\n                    <div className='Queue__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className={`Queue__cell_${colors[data[i]]}`} key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className='Queue'>\r\n            <p className='Queue__title'>NEXT:</p>\r\n            <div className='Queue__item'>\r\n                {renderCells()}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Queue;","const blockExamples = {\r\n//O\r\n    0:  [[1,1],[1,1]],\r\n//I \r\n    1:  [[0, 0, 0, 0],[0, 0, 0, 0],[0, 0, 0, 0],[2, 2, 2, 2]],\r\n//J\r\n    2:  [[0,3,0],[0,3,0],[3,3,0]],\r\n//L\r\n    3:  [[4,0,0],[4,0,0],[4,4,0]],\r\n//Z\r\n    4: [[0,0,0],[5,5,0],[0,5,5]],\r\n//S\r\n    5: [[0,0,0],[0,6,6],[6,6,0]],\r\n//T\r\n    6: [[0,0,0],[7,7,7],[0,7,0]],\r\n}\r\n\r\nexport default blockExamples","import blockExamples from '../constants/blockExamples'\r\n\r\nfunction random(maxNumber) {\r\n    let rand = Math.random() * (maxNumber + 1);\r\n    return Math.floor(rand);\r\n}\r\n\r\nfunction rotate(brick) {\r\n\r\n    let brickSize = brick.length\r\n    let rotatedBrick = []\r\n        \r\n    for ( let i = 0; i < brickSize; i++ ) {\r\n        let newRow = []\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            newRow.push(brick[brickSize - a - 1][i])\r\n        }\r\n        if (newRow.every((el) => { return el === 0 })) {\r\n            rotatedBrick.unshift(newRow)\r\n        } else {\r\n            rotatedBrick.push(newRow)\r\n        }\r\n    }\r\n    return rotatedBrick\r\n}\r\n\r\nexport default function randomBrick() {\r\n\r\n    let newBrick = blockExamples[random(6)] //сперва генерируем рандомно одну из 7 фигур\r\n    for (let i = 0; i < random(3); i++ ) { //потом рандомно крутим фигуру от 0 до 3 раз\r\n        newBrick = rotate(newBrick)\r\n    }\r\n    const newBrickSize = newBrick.length\r\n\r\n    return {\r\n        brick: newBrick,\r\n        baseLine: 3,\r\n        baseColumn: Math.ceil((10 - newBrickSize) / 2)\r\n    }\r\n}","//Brick reducers\r\nexport const ADD_NEW_BRICK = 'ADD_NEW_BRICK'\r\nexport const ADD_NEW_BRICK_FROM_NEXT = 'ADD_NEW_BRICK_FROM_NEXT'\r\nexport const REMOVE_BRICK = 'REMOVE_BRICK'\r\nexport const MOVE_DOWN = 'MOVE_DOWN'\r\nexport const MOVE_LEFT = 'MOVE_LEFT'\r\nexport const MOVE_RIGHT = 'MOVE_RIGHT'\r\nexport const ROTATE = 'ROTATE'\r\n\r\n//Next brick reducers\r\nexport const GENERATE_NEXT_BRICK = 'GENERATE_NEXT_BRICK'\r\n\r\n//Play area reducers\r\nexport const MOUNT_BRICK = 'MOUNT_BRICK'\r\nexport const REMOVE_FULL_ROWS = 'REMOVE_FULL_ROWS'\r\nexport const CLEAR_AREA = 'CLEAR_AREA'\r\n\r\n//Score reucers\r\nexport const UPDATE_SCORE = 'UPDATE_SCORE'\r\nexport const START_ANIMATION = 'START_ANIMATION'\r\nexport const CLEAR_SCORE = 'CLEAR_SCORE' \r\n\r\n//Status reducers\r\nexport const GAME_START = 'GAME_START'\r\nexport const GAME_PAUSE = 'GAME_PAUSE'\r\nexport const GAME_FINISH = 'GAME_FINISH'\r\n\r\n//Level reducers\r\nexport const COUNT_ROWS = 'COUNT_ROWS'\r\nexport const CLEAR_LEVEL = 'CLEAR_LEVEL'","import randomBrick from \"../../utilits/randomBrick\";\r\nimport { ADD_NEW_BRICK } from \"../types\";\r\n\r\nexport const addNewBrick = () => {\r\n    return {\r\n        type: ADD_NEW_BRICK,\r\n        payload: randomBrick()\r\n    }\r\n}","import { store } from '../index'\r\n\r\nexport default function freePlaceToMove( direction, playArea, brick, baseLine, baseColumn ) {\r\n\r\n    const brickSize = brick.length\r\n\r\n    if (direction === 'down' && baseLine >= 24) { return false }\r\n\r\n    if ( direction === 'left' ) {\r\n        if (baseColumn < 0) {\r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = 0; a < baseColumn * -1; a++) {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i][a])) {\r\n                        return false \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if ( direction === 'right' ) {\r\n        if (baseColumn + brickSize > 10) { \r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = brickSize - 1; a > 9 - baseColumn; a--) {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i][a])) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < brickSize; i++ ) {\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            if ([1,2,3,4,5,6,7].includes(brick[i][a]) && [11,12,13,14,15,16,17].includes(playArea[i + baseLine - brickSize + 1][a + baseColumn])) {  \r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    return true\r\n}","import randomBrick from \"../../utilits/randomBrick\";\r\nimport { GENERATE_NEXT_BRICK } from \"../types\";\r\n\r\nexport const generateNextBrick = () => {\r\n    return {\r\n        type: GENERATE_NEXT_BRICK,\r\n        payload: randomBrick()\r\n    }\r\n}","import { START_ANIMATION, UPDATE_SCORE } from \"../types\";\r\n\r\nexport const asyncUpdateScore = (rows, score, record) => {\r\n\r\n    const scoreTable = [0, 5, 10, 20, 40]\r\n    const increase = scoreTable[rows]\r\n    const recordIncrease = +record - (score + increase) > 0 ? 0 : (score + increase) - +record\r\n\r\n    return dispatch => {\r\n        dispatch(startAnimation(increase, recordIncrease))\r\n        setTimeout(() => {\r\n            dispatch(updateScore(increase, score, record))\r\n        }, 1000)\r\n    }\r\n\r\n}\r\n\r\nexport const updateScore = (increase, score, record) => {\r\n    const newScore = score + increase\r\n    let newRecord = record\r\n    if (newScore > record) {\r\n        newRecord = newScore\r\n        localStorage.setItem('record', newRecord)\r\n    }\r\n    \r\n    return {\r\n        type: UPDATE_SCORE,\r\n        payload: {\r\n            score: newScore,\r\n            record: newRecord,\r\n            scoreAnimation: '',\r\n            recordAnimation: ''\r\n        }\r\n    }\r\n}\r\n\r\nexport const startAnimation = (increase, recordIncrease) => {\r\n    return {\r\n        type: START_ANIMATION,\r\n        payload: {\r\n            scorePlus: increase,\r\n            scoreAnimation: 'active',\r\n            recordPlus: recordIncrease,\r\n            recordAnimation: recordIncrease > 0 ? 'active' : ''\r\n        }\r\n    }\r\n}","import { store } from '../../index'\r\nimport { addNewBrick } from '../../redux/actions/addNewBrick'\r\nimport { addNewBrickFromNext } from '../../redux/actions/addNewBrickFromNext'\r\nimport { moveDown } from '../../redux/actions/moveDown'\r\nimport { mountBrick } from '../../redux/actions/mountBrick';\r\nimport freePlaceToMove from '../../checks/freePlaceToMove';\r\nimport removeFullRows from '../../redux/actions/removeFullRows';\r\nimport { generateNextBrick } from '../../redux/actions/generateNextBrick';\r\nimport { asyncUpdateScore } from '../../redux/actions/updateScore';\r\nimport { countRows } from '../../redux/actions/countRows';\r\nimport { GAME_FINISH } from '../../redux/types';\r\n\r\nexport default function nextStep() {\r\n    const playArea = store.getState().playArea\r\n    const brick = store.getState().brick\r\n    const nextBrick = store.getState().nextBrick\r\n    const score = store.getState().score.score\r\n    const record = store.getState().score.record\r\n    const levelObj = store.getState().level\r\n\r\n    const fullRowsQuantity = playArea.filter(elem => elem.every((el) => { return el > 10 })).length\r\n\r\n    // Проверка на проигрыш\r\n    if (playArea.slice(0,4).some(elem => {return elem.some(el => {return el !== 0})})) { \r\n        store.dispatch({type: GAME_FINISH})\r\n        return\r\n    }\r\n\r\n    // Проверка есть ли движущийся кирпич в данный момент\r\n    if (brick.brick.length === 0) {\r\n        store.dispatch(addNewBrick())\r\n        store.dispatch(generateNextBrick())\r\n        return\r\n    }\r\n\r\n    // Проверка, есть ли заполненные ряды\r\n    if (fullRowsQuantity > 0) {\r\n        store.dispatch(removeFullRows(playArea, fullRowsQuantity))\r\n        store.dispatch(asyncUpdateScore(fullRowsQuantity, score, record))\r\n        store.dispatch(countRows(fullRowsQuantity, levelObj))\r\n    } else {\r\n        if (freePlaceToMove('down', playArea, brick.brick, brick.baseLine + 1, brick.baseColumn)) {\r\n            store.dispatch(moveDown())\r\n        } else {\r\n            store.dispatch(mountBrick(playArea, brick))\r\n            if (nextBrick.brick.length === 0) {\r\n                store.dispatch(addNewBrick())\r\n                store.dispatch(generateNextBrick())\r\n            } else {\r\n                store.dispatch(addNewBrickFromNext(nextBrick))\r\n                store.dispatch(generateNextBrick())\r\n            }\r\n        }\r\n    }\r\n}","import { REMOVE_FULL_ROWS } from \"../types\"\r\n\r\nexport default function removeFullRows(playArea, fullRowsQuan) {\r\n\r\n    let newplayArea = playArea.filter(elem => elem.some((el) => { return el <= 10 }))\r\n    newplayArea = new Array(fullRowsQuan).fill([0,0,0,0,0,0,0,0,0,0]).concat(newplayArea)\r\n\r\n    return {\r\n        type: REMOVE_FULL_ROWS,\r\n        payload: newplayArea,\r\n    }\r\n}","import { COUNT_ROWS } from \"../types\";\r\n\r\nexport const countRows = (rowsToAdd, levelObj) => {\r\n\r\n    const currentRows = levelObj.rows\r\n    const newLevel = levelObj.level < 10 ? 1 + Math.floor((currentRows + rowsToAdd) / 15) : levelObj.level\r\n    const newSpeed = newLevel !== levelObj.level ? \r\n        800 - Math.floor((Math.sin(Math.PI/2 - Math.PI/18 * (10 - newLevel))) * 650) : //синусоидная зависимость скорости от уровня\r\n        levelObj.speed\r\n\r\n    return {\r\n        type: COUNT_ROWS,\r\n        payload: {\r\n            rows: currentRows + rowsToAdd,\r\n            level: newLevel,\r\n            speed: newSpeed\r\n        }\r\n    }\r\n}","import { MOVE_DOWN } from \"../types\";\r\nimport {store} from '../../index'\r\n\r\nexport const moveDown = () => {\r\n    const brick = store.getState().brick\r\n\r\n    return {\r\n        type: MOVE_DOWN,\r\n        payload: {\r\n            brick: brick.brick,\r\n            baseLine: brick.baseLine + 1,\r\n            baseColumn: brick.baseColumn\r\n        }\r\n    }\r\n}","import { MOUNT_BRICK } from \"../types\";\r\n\r\nexport const mountBrick = (playArea, movingBrick) => {\r\n\r\n    const brick = movingBrick.brick\r\n    const baseLine = movingBrick.baseLine\r\n    const baseColumn = movingBrick.baseColumn\r\n    const brickSize = brick.length\r\n\r\n    let newPlayArea = []\r\n    for ( let i = 0; i < 24; i++) {\r\n        if (i <= baseLine - brickSize || i > baseLine) { //если в строке нет движущейся фигуры\r\n            newPlayArea.push(playArea[i]) //то оставляем поле как есть\r\n        } else {\r\n            let newRow = []\r\n            for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                if ( a < baseColumn || a >= baseColumn + brickSize ) { //если фигуры нет в колонках\r\n                    newRow.push(playArea[i][a])  // тоже оставляем как есть\r\n                } else {\r\n                    if ([1,2,3,4,5,6,7].includes(brick[i - baseLine + brickSize - 1][a - baseColumn])) { //тут данные поля заменяются данными движ фигруы\r\n                        newRow.push(brick[i - baseLine + brickSize - 1][a - baseColumn] + 10)\r\n                    } else {\r\n                        newRow.push(playArea[i][a])\r\n                    }\r\n                }\r\n            }\r\n            newPlayArea.push(newRow)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: MOUNT_BRICK,\r\n        payload: newPlayArea\r\n    }\r\n}","import { ADD_NEW_BRICK_FROM_NEXT } from \"../types\";\r\n\r\nexport const addNewBrickFromNext = (nextBrick) => {\r\n    return {\r\n        type: ADD_NEW_BRICK_FROM_NEXT,\r\n        payload: nextBrick\r\n    }\r\n}","import {store} from '../../index' \r\nimport nextStep from './nextStep'\r\n\r\nexport function autoStep() {\r\n\r\n    const gameStatus = store.getState().gameStatus\r\n\r\n    if (gameStatus === 'paused') { \r\n        return\r\n    }\r\n\r\n    const speed = store.getState().level.speed\r\n\r\n    nextStep()\r\n    if (gameStatus === 'inProgress') {\r\n        setTimeout(autoStep, speed)\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport Queue from '../Queue/Queue'\r\nimport gameProcess from '../GameProcess/nextStep'\r\nimport { moveLeft } from '../../redux/actions/moveLeft';\r\nimport { moveRight } from '../../redux/actions/moveRight';\r\nimport { rotate } from '../../redux/actions/rotate';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CLEAR_AREA, CLEAR_SCORE, GAME_PAUSE, GAME_START, CLEAR_LEVEL } from '../../redux/types';\r\nimport nextStep from '../GameProcess/nextStep';\r\nimport { autoStep } from '../GameProcess/autoStep';\r\n\r\nfunction Main() {\r\n\r\n    const dispatch = useDispatch()\r\n    const gameStatus = useSelector(state => { return state.gameStatus })\r\n\r\n    const startGame = () => {\r\n        window.addEventListener('keydown', keyActions)\r\n        if (gameStatus === 'paused') {\r\n            dispatch({type: GAME_START})\r\n        } else if (gameStatus === 'finished') {\r\n            dispatch({type: CLEAR_AREA})\r\n            dispatch({type: CLEAR_SCORE})\r\n            dispatch({type: CLEAR_LEVEL})\r\n            dispatch({type: GAME_START})\r\n        }\r\n        autoStep()\r\n    }\r\n    \r\n    const stopGame = () => {\r\n        window.removeEventListener('keydown', keyActions)\r\n        dispatch({type: GAME_PAUSE})\r\n    }\r\n\r\n    const keyActions = useCallback((event) => { //хук useCallBack\r\n        if (event.code === 'Numpad5' || event.code === 'ArrowDown' || event.code === 'KeyS') {\r\n            event.preventDefault()\r\n            nextStep()\r\n        } else if (event.code === 'Numpad4' || event.code === 'ArrowLeft' || event.code === 'KeyA') {\r\n            event.preventDefault()\r\n            dispatch(moveLeft())\r\n        } else if (event.code === 'Numpad6' || event.code === 'ArrowRight' || event.code === 'KeyD') {\r\n            event.preventDefault()\r\n            dispatch(moveRight())\r\n        } else if (event.code === 'Numpad8' || event.code === 'ArrowUp' || event.code === 'KeyW') {\r\n            event.preventDefault()\r\n            dispatch(rotate())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"Main\">\r\n            <PlayArea />\r\n            <div className=\"Main__controls-panel\">\r\n                <Queue />\r\n                <Stat />\r\n                <Controls startGameFunc={startGame} stopGameFunc={stopGame} />\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import { MOVE_LEFT } from \"../types\";\r\nimport {store} from '../../index'\r\nimport freePlaceToMove from \"../../checks/freePlaceToMove\";\r\n\r\nexport const moveLeft = () => {\r\n    const brick = store.getState().brick\r\n    const playArea = store.getState().playArea\r\n    const offset = freePlaceToMove('left', playArea, brick.brick, brick.baseLine, brick.baseColumn - 1) ? -1 : 0\r\n    return {\r\n        type: MOVE_LEFT,\r\n        payload: {\r\n            brick: brick.brick,\r\n            baseLine: brick.baseLine,\r\n            baseColumn: brick.baseColumn + offset\r\n        }\r\n    }\r\n}","import { MOVE_RIGHT } from \"../types\";\r\nimport {store} from '../../index'\r\nimport freePlaceToMove from \"../../checks/freePlaceToMove\";\r\n\r\nexport const moveRight = () => {\r\n    const brick = store.getState().brick\r\n    const playArea = store.getState().playArea\r\n    const offset = freePlaceToMove('right', playArea, brick.brick, brick.baseLine, brick.baseColumn + 1) ? 1 : 0\r\n    return {\r\n        type: MOVE_RIGHT,\r\n        payload: {\r\n            brick: brick.brick,\r\n            baseLine: brick.baseLine,\r\n            baseColumn: brick.baseColumn + offset\r\n        }\r\n    }\r\n}","import { ROTATE } from \"../types\";\r\nimport {store} from '../../index'\r\n\r\nexport const rotate = () => {\r\n    const movingBrick = store.getState().brick\r\n\r\n    const brick = movingBrick.brick\r\n    const baseColumn = movingBrick.baseColumn\r\n    const brickSize = brick.length\r\n\r\n    let newBaseColumn = (baseColumn < 0) ? 0 :\r\n                        (baseColumn > 10 - brickSize) ? 10  - brickSize :\r\n                        baseColumn\r\n\r\n    let rotatedBrick = []\r\n    \r\n    for ( let i = 0; i < brickSize; i++ ) {\r\n        let newRow = []\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            newRow.push(brick[brickSize - a - 1][i])\r\n        }\r\n        if (newRow.every((el) => { return el === 0 })) {\r\n            rotatedBrick.unshift(newRow)\r\n        } else {\r\n            rotatedBrick.push(newRow)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: ROTATE,\r\n        payload: {\r\n            brick: rotatedBrick,\r\n            baseLine: movingBrick.baseLine,\r\n            baseColumn: newBaseColumn\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport './App.css';\r\nimport Main from './components/Main/Main'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Main/>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_NEW_BRICK, \r\n    ADD_NEW_BRICK_FROM_NEXT, \r\n    MOVE_DOWN, \r\n    MOVE_LEFT, \r\n    MOVE_RIGHT, \r\n    REMOVE_BRICK, \r\n    ROTATE } from \"../types\"\r\n\r\nconst initialBrick = {\r\n    brick: [],\r\n    baseLine: 0,\r\n    baseColumn: 0\r\n}\r\n\r\nexport const brickReducer = (state = initialBrick, action) => {\r\n    switch(action.type) {\r\n        case ADD_NEW_BRICK:\r\n            return action.payload\r\n        case ADD_NEW_BRICK_FROM_NEXT:\r\n            return action.payload\r\n        case REMOVE_BRICK:\r\n            return initialBrick\r\n        case MOVE_DOWN:\r\n            return action.payload\r\n        case MOVE_LEFT:\r\n            return action.payload\r\n        case MOVE_RIGHT:\r\n            return action.payload\r\n        case ROTATE:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { GAME_FINISH, GAME_PAUSE, GAME_START } from \"../types\"\r\n\r\nconst initialStatus = 'paused'\r\n\r\nexport const gameStatusReducer = (state = initialStatus, action) => {\r\n    switch(action.type) {\r\n        case GAME_START:\r\n            return 'inProgress'\r\n        case GAME_PAUSE:\r\n            return 'paused'\r\n        case GAME_FINISH:\r\n            return 'finished'\r\n        default:\r\n            return state\r\n    }\r\n}","import { CLEAR_LEVEL, COUNT_ROWS } from \"../types\"\r\n\r\nconst initialLevel = {\r\n    rows: 0,\r\n    level: 1,\r\n    speed: 800\r\n}\r\n\r\nexport const levelReducer = (state = initialLevel, action) => {\r\n    switch(action.type) {\r\n        case COUNT_ROWS:\r\n            return action.payload\r\n        case CLEAR_LEVEL:\r\n            return initialLevel\r\n        default:\r\n            return state\r\n    }\r\n}","import randomBrick from \"../../utilits/randomBrick\"\r\nimport { GENERATE_NEXT_BRICK } from \"../types\"\r\n\r\nconst initialBrick = {\r\n    brick: [],\r\n    baseLine: 0,\r\n    baseColumn: 0,\r\n}\r\n\r\nexport const nextBrickReducer = (state = initialBrick, action) => {\r\n    switch(action.type) {\r\n        case GENERATE_NEXT_BRICK:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { CLEAR_AREA, MOUNT_BRICK, REMOVE_FULL_ROWS } from \"../types\"\r\n\r\nconst initialArea = new Array(24).fill([0,0,0,0,0,0,0,0,0,0])\r\n\r\nexport const playAreaReducer = (state = initialArea, action) => {\r\n    switch(action.type) {\r\n        case MOUNT_BRICK:\r\n            return action.payload\r\n        case CLEAR_AREA:\r\n            return initialArea\r\n        case REMOVE_FULL_ROWS:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import { UPDATE_SCORE, CLEAR_SCORE, START_ANIMATION } from \"../types\"\r\n\r\nconst initialScore = {\r\n    score: 0,\r\n    scoreAnimation: '',\r\n    scorePlus: 5,\r\n    record: localStorage.getItem('record') ? localStorage.getItem('record') : 0,\r\n    recordAnimation: '',\r\n    recordPlus: 5\r\n}\r\n\r\nexport const scoreReducer = (state = initialScore, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_SCORE:\r\n            return {...state, ...action.payload}\r\n        case START_ANIMATION:\r\n            return { ...state, ...action.payload }\r\n        case CLEAR_SCORE:\r\n            return initialScore\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { brickReducer } from \"./reducers/brickReducer\";\r\nimport { gameStatusReducer } from \"./reducers/gameStatusReducer\";\r\nimport { levelReducer } from \"./reducers/levelReducer\";\r\nimport { nextBrickReducer } from \"./reducers/nextBrickReducer\";\r\nimport { playAreaReducer } from \"./reducers/playAreaReducer\";\r\nimport { scoreReducer } from \"./reducers/scoreReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    playArea: playAreaReducer,\r\n    brick: brickReducer,\r\n    nextBrick: nextBrickReducer,\r\n    score: scoreReducer,\r\n    gameStatus: gameStatusReducer,\r\n    level: levelReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './redux/rootReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}