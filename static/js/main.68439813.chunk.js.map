{"version":3,"sources":["logo.svg","components/PlayArea/PlayArea.js","checks/freePlaceToMove.js","constants/blockExamples.js","utilits/randomBlock.js","blockMoves/MoveDown.js","blockMoves/MoveRight.js","blockMoves/MoveLeft.js","components/Controls/Controls.js","components/Stat/Stat.js","components/Queue/Queue.js","constants/scoreTable.js","components/gameProcess/gameProcess.js","checks/youLose.js","checks/fullRows.js","gameEvents/removeFullRows.js","gameEvents/addNewBrick.js","blockMoves/Rotate.js","components/Main/Main.js","constants/emptyField.js","App.js","reportWebVitals.js","index.js"],"names":["PlayArea","props","playField","gameData","movingBrick","baseLine","baseColumn","brickSideLength","length","className","cells","data","dataArray","i","concat","a","compileDataToArr","push","renderCells","freePlaceToMove","brickSize","blockExamples","0","1","2","3","4","5","6","random","maxNumber","rand","Math","floor","rotate","brick","rotatedBrick","newRow","every","el","unshift","randomBlock","newBrick","newBrickSize","ceil","MoveDown","current","newField","newScore","score","newRecord","record","localStorage","setItem","nextBrick","nextBaseColumn","bricksCount","this","stopBlock","React","Component","MoveLeft","doNotMove","Controls","onClick","startGame","stopGame","Stat","speed","Queue","undefined","scoreTable","moveDown","gameProcess","intervalID","some","youLose","console","log","elem","fullRowsQuantity","newPlayField","removeFullRows","addNewBrick","move","Rotate","newBaseColumn","moveRight","MoveRight","moveLeft","Main","useState","getItem","state","setState","setMoveInterval","gameStatus","nextStep","window","removeEventListener","keyActions","clearInterval","useCallback","event","code","addEventListener","setInterval","status","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68439813.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport './PlayArea.sass'\r\n\r\nfunction PlayArea(props) {\r\n\r\n    const playField = props.gameData.playField\r\n    const movingBrick = props.gameData.movingBrick\r\n    const baseLine = props.gameData.baseLine\r\n    const baseColumn = props.gameData.baseColumn\r\n    const brickSideLength = props.gameData.movingBrick.length\r\n\r\n    function compileDataToArr() { //сложнючая функция, которая устанавливает фигуру на поле и преобразует все это в единый массив\r\n        let dataArray = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i <= baseLine - brickSideLength || i > baseLine) { //если в строке нет движущейся фигуры\r\n                dataArray = dataArray.concat(playField[i]) //то оставляем поле как есть\r\n            } else {\r\n                for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                    if ( a < baseColumn || a >= baseColumn + brickSideLength ) { //если фигуры нет в колонках\r\n                        dataArray = dataArray.concat(playField[i][a])  // тоже оставляем как есть\r\n                    } else {\r\n                        dataArray = dataArray.concat(movingBrick[i - baseLine + brickSideLength - 1][a - baseColumn] + playField[i][a]) //тут данные поля заменяются данными движ фигруы\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 40; i < 240; i++) {\r\n            if (data[i] === 0) {\r\n                cells.push(\r\n                    <div className='PlayArea__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className='PlayArea__cell_full' key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className=\"PlayArea\">\r\n            {renderCells()}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlayArea;","export default function freePlaceToMove( playField, movingBrick, baseLine, baseColumn, brickSize ) {\r\n\r\n    for (let i = 0; i < brickSize; i++ ) {\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            if (movingBrick[i][a] === 1 && playField[i + baseLine - brickSize + 1][a + baseColumn] === 2) {  //было - длина стороны\r\n                return false\r\n            }\r\n        }\r\n    }\r\n    return true\r\n}","const blockExamples = {\r\n//O\r\n    0:  [[1,1],[1,1]],\r\n//I \r\n    1:  [[0, 0, 0, 0],[0, 0, 0, 0],[0, 0, 0, 0],[1, 1, 1, 1]],\r\n//J\r\n    2:  [[0,1,0],[0,1,0],[1,1,0]],\r\n//L\r\n    3:  [[1,0,0],[1,0,0],[1,1,0]],\r\n//Z\r\n    4: [[0,0,0],[1,1,0],[0,1,1]],\r\n//S\r\n    5: [[0,0,0],[0,1,1],[1,1,0]],\r\n//T\r\n    6: [[0,0,0],[1,1,1],[0,1,0]],\r\n}\r\n\r\nexport default blockExamples","import blockExamples from '../constants/blockExamples'\r\n\r\nfunction random(maxNumber) {\r\n    let rand = Math.random() * (maxNumber + 1);\r\n    return Math.floor(rand);\r\n}\r\n\r\nfunction rotate(brick) {\r\n\r\n    let brickSize = brick.length\r\n    let rotatedBrick = []\r\n        \r\n    for ( let i = 0; i < brickSize; i++ ) {\r\n        let newRow = []\r\n        for ( let a = 0; a < brickSize; a++ ) {\r\n            newRow.push(brick[brickSize - a - 1][i])\r\n        }\r\n        if (newRow.every((el) => { return el === 0 })) {\r\n            rotatedBrick.unshift(newRow)\r\n        } else {\r\n            rotatedBrick.push(newRow)\r\n        }\r\n    }\r\n    return rotatedBrick\r\n}\r\n\r\nexport default function randomBlock() {\r\n\r\n    let newBrick = blockExamples[random(6)] //сперва генерируем рандомно одну из 7 фигур\r\n    for (let i = 0; i < random(3); i++ ) { //потом рандомно крутим фигуру от 0 до 3 раз\r\n        newBrick = rotate(newBrick)\r\n    }\r\n    const newBrickSize = newBrick.length\r\n\r\n    return {\r\n        brick: newBrick,\r\n        baseColumn: Math.ceil((10 - newBrickSize) / 2)\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport freePlaceToMove from '../checks/freePlaceToMove';\r\nimport randomBlock from '../utilits/randomBlock'\r\n\r\nexport default class MoveDown extends React.Component {\r\n\r\n    stopBlock(current) {\r\n\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn\r\n        const brickSize = current.movingBrick.length\r\n\r\n        let newField = []\r\n        for ( let i = 0; i < 24; i++) {\r\n            if (i <= baseLine - brickSize || i > baseLine) { //если в строке нет движущейся фигуры\r\n                newField.push(playField[i]) //то оставляем поле как есть\r\n            } else {\r\n                let newRow = []\r\n                for ( let a = 0; a < 10; a++ ) { //если движущаяся фигура есть, начинаем првоерять по колонкам\r\n                    if ( a < baseColumn || a >= baseColumn + brickSize ) { //если фигуры нет в колонках\r\n                        newRow.push(playField[i][a])  // тоже оставляем как есть\r\n                    } else {\r\n                        if (movingBrick[i - baseLine + brickSize - 1][a - baseColumn] === 1) { //тут данные поля заменяются данными движ фигруы\r\n                            newRow.push(2)\r\n                        } else {\r\n                            newRow.push(playField[i][a])\r\n                        }\r\n                    }\r\n                }\r\n                newField.push(newRow)\r\n            }\r\n        }\r\n\r\n        const newScore = current.score + 1\r\n        let newRecord = current.record\r\n        if (newScore > current.record) {\r\n            newRecord = newScore\r\n            localStorage.setItem('record', newRecord)\r\n        }\r\n\r\n        return {\r\n            playField: newField,\r\n            movingBrick: [],\r\n            baseLine: 3,\r\n            baseColumn: 3,\r\n            nextBrick: current.nextBrick,\r\n            nextBaseColumn: current.nextBaseColumn,\r\n            score: newScore,\r\n            record: newRecord,\r\n            bricksCount: current.bricksCount + 1,\r\n        }\r\n    }\r\n\r\n    move(current) {\r\n\r\n        const playField = current.playField\r\n        let movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine + 1\r\n        let baseColumn = current.baseColumn\r\n        const brickSize = current.movingBrick.length\r\n\r\n        if ( movingBrick.length === 0 ) {\r\n            return current\r\n        }\r\n        if (baseLine > 23) {\r\n            return this.stopBlock(current) \r\n        } else {\r\n            if(freePlaceToMove( playField, movingBrick, baseLine, baseColumn, brickSize ) === false) {\r\n                return this.stopBlock(current)\r\n            }\r\n        }\r\n\r\n        return {\r\n            playField: playField,\r\n            movingBrick: movingBrick,\r\n            baseLine: baseLine,\r\n            baseColumn: baseColumn,\r\n            nextBrick: current.nextBrick,\r\n            nextBaseColumn: current.nextBaseColumn,\r\n            score: current.score,\r\n            record: current.record,\r\n            bricksCount: current.bricksCount,\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport freePlaceToMove from '../checks/freePlaceToMove';\r\n\r\nexport default class MoveLeft extends React.Component {\r\n\r\n    doNotMove(current) {\r\n        return current\r\n    }\r\n\r\n    move(current) {\r\n\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn + 1\r\n        const brickSize = current.movingBrick.length\r\n\r\n        if (baseColumn + brickSize > 10) { \r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = brickSize - 1; a > 9 - baseColumn; a--) {\r\n                    if(movingBrick[i][a] === 1) {\r\n                        return this.doNotMove(current) \r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (freePlaceToMove( playField, movingBrick, baseLine, baseColumn, brickSize ) === false) {\r\n            return this.doNotMove(current)\r\n        }\r\n\r\n        return {\r\n            playField: playField,\r\n            movingBrick: movingBrick,\r\n            baseLine: baseLine,\r\n            baseColumn: baseColumn,\r\n            nextBrick: current.nextBrick,\r\n            nextBaseColumn: current.nextBaseColumn,\r\n            score: current.score,\r\n            record: current.record,\r\n            bricksCount: current.bricksCount,        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport freePlaceToMove from '../checks/freePlaceToMove';\r\n\r\nexport default class MoveLeft extends React.Component {\r\n\r\n    doNotMove(current) {\r\n        return current\r\n    }\r\n\r\n    move(current) {\r\n\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn - 1\r\n        const brickSize = current.movingBrick.length\r\n\r\n        if (baseColumn < 0) {\r\n            for (let i = 0; i < brickSize; i++) {\r\n                for (let a = 0; a < baseColumn * -1; a++) {\r\n                    if(movingBrick[i][a] === 1) {\r\n                        return this.doNotMove(current) \r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (freePlaceToMove( playField, movingBrick, baseLine, baseColumn, brickSize ) === false) {\r\n            return this.doNotMove(current)\r\n        }\r\n\r\n        return {\r\n            playField: playField,\r\n            movingBrick: movingBrick,\r\n            baseLine: baseLine,\r\n            baseColumn: baseColumn,\r\n            nextBrick: current.nextBrick,\r\n            nextBaseColumn: current.nextBaseColumn,\r\n            score: current.score,\r\n            record: current.record,\r\n            bricksCount: current.bricksCount,        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Controls.sass'\r\n\r\nfunction Controls(props) {\r\n\r\n    return(\r\n        <div className='Controls'>\r\n            <button className='button' onClick={props.startGame}>START</button>\r\n            <button className='button' onClick={props.stopGame}>PAUSE</button>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Controls;","import React, { useState, useEffect } from 'react';\r\nimport './Stat.sass'\r\n\r\nfunction Stat(props) {\r\n\r\n    return(\r\n        <div className='Stat'>\r\n            <p className='Stat__title'>SCORE:</p>\r\n            <p className='Stat__score'>{props.score}</p>\r\n            <p className='Stat__title'>BEST:</p>\r\n            <p className='Stat__score'>{props.record}</p>\r\n            <p className='Stat__title'>SPEED:</p>\r\n            <p className='Stat__score'>{props.speed}</p>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Stat;","import React, { useState, useEffect } from 'react';\r\nimport './Queue.sass'\r\n\r\nfunction Queue(props) {\r\n\r\n    const nextBrick = props.gameData.nextBrick\r\n   \r\n    function compileDataToArr() { \r\n        let dataArray = []\r\n        for ( let i = 0; i < 4; i++) {\r\n            for (let a = 0; a < 4; a++) {\r\n                if (!nextBrick[i] || !nextBrick[i][a]) {\r\n                    dataArray.push(0)\r\n                } else {\r\n                    dataArray.push(nextBrick[i][a])\r\n                }\r\n            }\r\n        }\r\n        return dataArray\r\n    }\r\n\r\n    function renderCells() {\r\n        let cells = []\r\n        let data = compileDataToArr()\r\n        for (let i = 0; i < 16; i++) {\r\n            if (data[i] === 0 || data[i] === undefined) {\r\n                cells.push(\r\n                    <div className='Queue__cell' key={`${i}`}></div>\r\n            )} else {\r\n                cells.push(\r\n                    <div className='Queue__cell_full' key={`${i}`}></div>\r\n            )}\r\n        }\r\n        return cells\r\n    }\r\n\r\n    return(\r\n        <div className='Queue'>\r\n            <p className='Queue__title'>NEXT:</p>\r\n            <div className='Queue__item'>\r\n                {renderCells()}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Queue;","const scoreTable = [0, 5, 10, 20, 40]\r\n\r\nexport default scoreTable","import React, { useState, useEffect } from 'react';\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport youLose from '../../checks/youLose';\r\nimport fullRows from '../../checks/fullRows'\r\nimport addNewBrick from '../../gameEvents/addNewBrick'\r\nimport removeFullRows from '../../gameEvents/removeFullRows';\r\n\r\nlet moveDown = new MoveDown()\r\n\r\nexport default function gameProcess(current, stopGame, intervalID) {\r\n    if (youLose(current.playField)) {\r\n        console.log('youlose')\r\n        stopGame()\r\n        return current\r\n        // window.removeEventListener('keydown', keyActions)\r\n    }\r\n    if (fullRows(current.playField)) {\r\n        return removeFullRows(current)\r\n    } else if (current.movingBrick.length === 0) {\r\n        return addNewBrick(current)\r\n    } else {\r\n        return moveDown.move(current)\r\n    }\r\n}","export default function youLose( playField ) {\r\n\r\n    for (let i = 0; i < 4; i++ ) {\r\n        if (playField[i].some((el) => { return el !== 0 })) {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}","export default function fullRows(playField) {\r\n\r\n    return playField.some((el) => {\r\n        return el.every((elem) => {\r\n            return elem === 2\r\n        })\r\n    })\r\n}","import scoreTable from '../constants/scoreTable'\r\n\r\nexport default function removeFullRows(current) {\r\n    const playField = current.playField\r\n    const movingBrick = current.movingBrick\r\n    const baseLine = current.baseLine\r\n    const baseColumn = current.baseColumn\r\n\r\n    let fullRowsQuantity = 0\r\n    let newPlayField = []\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n        if (playField[i].some((el) => { return el !== 2 })) {\r\n            newPlayField.push(playField[i])\r\n        } else {\r\n            fullRowsQuantity = fullRowsQuantity + 1\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < fullRowsQuantity; i++) {\r\n        newPlayField.unshift([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\r\n    }\r\n\r\n    const newScore = current.score + scoreTable[fullRowsQuantity]\r\n    let newRecord = current.record\r\n    if (newScore > current.record) {\r\n        newRecord = newScore\r\n        localStorage.setItem('record', newRecord)\r\n    }\r\n\r\n    return {\r\n        playField: newPlayField,\r\n        movingBrick: movingBrick,\r\n        baseLine: baseLine,\r\n        baseColumn: baseColumn,\r\n        nextBrick: current.nextBrick,\r\n        nextBaseColumn: current.nextBaseColumn,\r\n        score: newScore,\r\n        record: newRecord,\r\n        bricksCount: current.bricksCount,\r\n    }\r\n}","import scoreTable from '../constants/scoreTable'\r\nimport randomBlock from '../utilits/randomBlock'\r\n\r\nexport default function addNewBrick(current) {\r\n\r\n    if (current.nextBrick.length === 0){\r\n        let movingBrick = randomBlock()\r\n        let nextBrick = randomBlock()\r\n        return {\r\n            playField: current.playField,\r\n            movingBrick: movingBrick.brick,\r\n            baseLine: 3,\r\n            baseColumn: movingBrick.baseColumn,\r\n            nextBrick: nextBrick.brick,\r\n            nextBaseColumn: nextBrick.baseColumn,\r\n            score: current.score,\r\n            record: current.record,\r\n            bricksCount: current.bricksCount,\r\n        }\r\n    } else {\r\n        let nextBrick = randomBlock()\r\n        return {\r\n            playField: current.playField,\r\n            movingBrick: current.nextBrick,\r\n            baseLine: 3,\r\n            baseColumn: current.nextBaseColumn,\r\n            nextBrick: nextBrick.brick,\r\n            nextBaseColumn: nextBrick.baseColumn,\r\n            score: current.score,\r\n            record: current.record,\r\n            bricksCount: current.bricksCount,\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport freePlaceToMove from '../checks/freePlaceToMove';\r\n\r\nexport default class Rotate extends React.Component {\r\n\r\n    move(current) {\r\n        const playField = current.playField\r\n        const movingBrick = current.movingBrick\r\n        const baseLine = current.baseLine\r\n        const baseColumn = current.baseColumn\r\n        const brickSize = current.movingBrick.length\r\n\r\n        let newBaseColumn = baseColumn\r\n        if (baseColumn < 0) {\r\n            newBaseColumn = 0\r\n        } else if (baseColumn > 10 - brickSize) {\r\n            newBaseColumn = 10  - brickSize\r\n        }\r\n\r\n        let rotatedBrick = []\r\n        \r\n        for ( let i = 0; i < brickSize; i++ ) {\r\n            let newRow = []\r\n            for ( let a = 0; a < brickSize; a++ ) {\r\n                newRow.push(movingBrick[brickSize - a - 1][i])\r\n            }\r\n            if (newRow.every((el) => { return el === 0 })) {\r\n                rotatedBrick.unshift(newRow)\r\n            } else {\r\n                rotatedBrick.push(newRow)\r\n            }\r\n        }\r\n\r\n        if (freePlaceToMove( playField, rotatedBrick, baseLine, baseColumn, brickSize ) === false) {\r\n            return current\r\n        }\r\n\r\n        return {\r\n            playField: playField,\r\n            movingBrick: rotatedBrick,\r\n            baseLine: baseLine,\r\n            baseColumn: newBaseColumn,\r\n            nextBrick: current.nextBrick,\r\n            nextBaseColumn: current.nextBaseColumn,\r\n            score: current.score,\r\n            record: current.record,\r\n            bricksCount: current.bricksCount,        }\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Main.sass'\r\nimport '../../styles/button.sass'\r\nimport PlayArea from '../PlayArea/PlayArea'\r\nimport emptyField from '../../constants/emptyField'\r\nimport MoveDown from '../../blockMoves/MoveDown'\r\nimport MoveRight from '../../blockMoves/MoveRight'\r\nimport MoveLeft from '../../blockMoves/MoveLeft'\r\nimport Controls from '../Controls/Controls'\r\nimport Stat from '../Stat/Stat'\r\nimport Queue from '../Queue/Queue'\r\nimport gameProcess from '../gameProcess/gameProcess'\r\nimport Rotate from '../../blockMoves/Rotate';\r\n\r\nconst moveDown = new MoveDown()\r\nconst moveRight = new MoveRight()\r\nconst moveLeft = new MoveLeft()\r\nconst rotate = new Rotate()\r\n\r\nfunction Main() {\r\n\r\n    const [state, setState ] = useState(\r\n        {\r\n            playField: emptyField(),\r\n            movingBrick: [],\r\n            baseLine: 3,\r\n            baseColumn: 3,\r\n            nextBrick: [],\r\n            nextBaseColumn: 3,\r\n            score: 0,\r\n            record: localStorage.getItem('record'),\r\n            bricksCount: 0\r\n        }\r\n    )\r\n\r\n    const [ intervalID, setMoveInterval ] = useState()\r\n    const [ gameStatus, setGameStatus ] = useState('stopped')\r\n\r\n    function nextStep() {\r\n        setState(state => gameProcess(state, stopGame, intervalID))\r\n    }\r\n\r\n    function startGame() {\r\n        window.addEventListener('keydown', keyActions)\r\n        setMoveInterval(\r\n            setInterval(nextStep, 1000)\r\n            )\r\n        }\r\n        \r\n    function stopGame() {\r\n        window.removeEventListener('keydown', keyActions)\r\n        clearInterval(intervalID)\r\n    }\r\n\r\n    const keyActions = useCallback((event) => { //хук useCallBack]\r\n        if (event.code === 'Numpad5') {\r\n            setState(state => moveDown.move(state))\r\n        } else if (event.code === 'Numpad4') {\r\n            setState(state => moveLeft.move(state))\r\n        } else if (event.code === 'Numpad6') {\r\n            setState(state => moveRight.move(state))\r\n        }  else if (event.code === 'Numpad8') {\r\n            setState(state => rotate.move(state))\r\n        }       \r\n    }, [])\r\n\r\n    return(\r\n        <main className=\"Main\">\r\n            <Stat score={state.score} record={state.record}/>\r\n            <PlayArea gameData={state}/>\r\n            <div>\r\n                <Controls startGame={startGame} stopGame={stopGame} status={gameStatus}/>\r\n                <Queue gameData={state}/>\r\n            </div>\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Main;","export default function emptyField() {\r\n    return [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\r\n}","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main/Main'\n\nfunction App() {\n\n  if (!localStorage.getItem('record')) {\n    localStorage.setItem('record', 0)\n  }\n\n  return (\n    <div className=\"App\">\n      <Main/>     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}